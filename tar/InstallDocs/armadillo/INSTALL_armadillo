
Incident 169655
Maria Fonoberova
Armadillo C++ linear algebra library

For user: aimdyn:x:903115:126484:Maria Fonoberova:/u/aimdyn:/bin/csh
E-mail: mfonoberova@aimdyn.com

Dec 18, 2014

Download at
http://arma.sourceforge.net/download.html
FAQ at
http://arma.sourceforge.net/faq.html

Downloaded armadillo-4.550.3.tar.gz

If you use Armadillo in your research and/or software,
please cite the overview tech report,
http://arma.sourceforge.net/armadillo_nicta_2010.pdf.
Citations are useful for the continued development
and maintenance of the library.

# In order to use the Intel compiler, it is necessary
# to switch the Programming Environment module
module swap PrgEnv-pgi PrgEnv-intel

# Unload cray-libsci because MKL will be used with
# the Intel compiler.
module unload cray-libsci

# Unload and load cray-mpich in order to be certain
# that definitions are changed to Intel.
module unload cray-mpich/6.0.0
module load cray-mpich/6.0.0

setenv PREFIX /lustre/home1/u/aimdyn/Software/armadillo-4.550.3-intel

# If you need to re-run cmake, it's a good idea to first delete the
#  "CMakeCache.txt" file (not "CMakeLists.txt").

setenv PATH /usr/local/usp/cmake/2.8.12.2-intel/bin:$PATH

cd /u/aimdyn/Software/armadillo-4.550.3-intel/src
# copy source to
# /lustre/home1/u/aimdyn/Software/armadillo-4.550.3-intel/src/armadillo-4.550.3.tar.gz
tar xzf armadillo-4.550.3.tar.gz
cd armadillo-4.550.3

# copy CMakeCache.txt from
# /lustre/home1/u/aimdyn/Software/armadillo-4.550.3-intel/src/CMakeCache.txt
# to
# /lustre/home1/u/aimdyn/Software/armadillo-4.550.3-intel/src/armadillo-4.550.3/

# For running on compute node
# Be certain that in file CMakeCache.txt
# CMAKE_CXX_COMPILER:FILEPATH=<path to CC>
# Be certain that in file CMakeCache.txt
# CMAKE_INSTALL_PREFIX:PATH=<whatever is value of PREFIX>

cmake .
make
make install

above for running on compute node
below for running on login node

module swap PrgEnv-pgi PrgEnv-intel
module unload cray-libsci
module unload cray-mpich/6.0.0
module load cray-mpich/6.0.0

setenv PREFIX /lustre/home1/u/aimdyn/Software/armadillo-4.550.3-icpc

setenv PATH /usr/local/usp/cmake/2.8.12.2-intel/bin:$PATH

# copy CMakeCache.txt from
# /lustre/home1/u/aimdyn/Software/armadillo-4.550.3-icpc/src/CMakeCache.txt
# to
# /lustre/home1/u/aimdyn/Software/armadillo-4.550.3-icpc/src/armadillo-4.550.3/

# For running on login node
# Be certain that in file CMakeCache.txt
# CMAKE_CXX_COMPILER:FILEPATH=<path to icpc>
# Be certain that in file CMakeCache.txt
# CMAKE_INSTALL_PREFIX:PATH=<whatever is value of PREFIX>
# Also, need to add MKL header files and libraries for
# compiling and linking option flags.

cmake .
make
make install




--------------------------------

Changes to modules.

# In order to use the Intel compiler, it is necessary
# to switch the Programming Environment module,
# this is because PGI is the default on garnet.
module swap PrgEnv-pgi PrgEnv-intel

# Unload cray-libsci because MKL will be used with
# the Intel compiler.
module unload cray-libsci

# If the program is parallel,
# unload and load cray-mpich in order to be certain
# that definitions are changed to Intel.
module unload cray-mpich/6.0.0
module load cray-mpich/6.0.0

Compiler options.

It must be emphasized that software compiled with CC,
as was done, can only run on a computer node used a PBS
script and launching the job using aprun.
The armadillo libraries were not built to run on the
login nodes.

I am assuming you are using CC for compiling and linking,
which is a wrapper that automatically adds the MKL libraries.

Your ADDME environment variable does not distinguish
between compiling and linking.
Suppose we define
setenv ARMA_HOME /u/aimdyn/Software/armadillo-4.550.3-intel

# Then for compiling
setenv ADDME_COMPILE "-dynamic -I${ARMA_HOME}/include"

# and for linking
setenv ADDME_LINK "-dynamic -L${ARMA_HOME}/lib -larmadillo"

# before running the code
setenv LD_LIBRARY_PATH ${ARMA_HOME}/lib:$LD_LIBRARY_PATH 

# If you want to compile and link at the same time
CC $ADDME_COMPILE $ADDME_LINK -o MainControl_Pershing_testing.out MainControl_Pershing_testing.cpp

A batch script for running the job could look like

#!/bin/csh
#PBS -A ARONC36559655
#PBS -l select=1:ncpus=32:mpiprocs=32
#PBS -l walltime=0:55:00
#PBS -q debug
#PBS -j oe
#PBS -N MainControl

cd $PBS_O_WORKDIR

source ${MODULESHOME}/init/csh
module swap PrgEnv-pgi PrgEnv-intel
module unload cray-libsci
module unload cray-mpich/6.0.0
module load cray-mpich/6.0.0

setenv LD_LIBRARY_PATH ${ARMA_HOME}/lib:$LD_LIBRARY_PATH

# How many processes does this job use?
# If it uses only one process then the command would be
aprun -n 1 ./MainControl_Pershing_testing.out


Using the library built for a login node.

setenv ARMA_HOME /u/aimdyn/Software/armadillo-4.550.3-icpc

# For compiling
setenv ADDME_COMPILE "-I${ARMA_HOME}/include -I$MKLROOT/include -I$MKLROOT/include/intel64/lp64"

# For linking
setenv ADDME_LINK "-L${ARMA_HOME}/lib -larmadillo -L$MKLROOT/lib/intel64 -lmkl_lapack95_lp64 -Wl,--start-group $MKLROOT/lib/intel64/libmkl_intel_lp64.a $MKLROOT/lib/intel64/libmkl_intel_thread.a $MKLROOT/lib/intel64/libmkl_core.a -Wl,--end-group"

# before running the code
setenv LD_LIBRARY_PATH ${ARMA_HOME}/lib:$LD_LIBRARY_PATH 

# If you want to compile and link at the same time
icpc $ADDME_COMPILE $ADDME_LINK -o MainControl_Pershing_testing.out MainControl_Pershing_testing.cpp

