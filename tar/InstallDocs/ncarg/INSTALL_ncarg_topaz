

Download:
https://www.earthsystemgrid.org/
Near bottom of page there is item called
NCL: NCAR Command Language

As of June 15, 2015, most recent is
NCL-NCARG-6.2.1 , created Sept. 2, 2014

At a minimum, you should have the following libraries (and
associated include files) installed on your system:
 X11, Xaw, Xext, Xm, Xmu, Xt.

After making a request, topaz now has

X11
   xorg-x11-libX11-devel
Xaw
   xorg-x11-devel
Xext
   xorg-x11-libXext-devel
Xm
   openmotif-devel
Xmu
   xorg-x11-libXmu-devel
Xt
   xorg-x11-libXt-devel

Because it provides libraries, compile for three compiler suites.
Compile for login nodes rather than compute nodes because
it is graphics.

 --- Intel below ---

export PREFIX=/p/home/apps/unsupported/ncarg/6.2.1-intel
mkdir $PREFIX

# These definitions probably do not have any affect.
export CXX=icpc
export CXXFLAGS="-fPIC -O2"
export CC=icc
export CFLAGS="-fPIC -O2"
export FC=ifort
export FFLAGS="-fPIC -O2"

[ detour below
"devel" RPM for bzip2 not yet installed,
build because needed for building ncl executable
export PREFIX=/p/home/apps/unsupported/bzip2/1.0.6-intel
mkdir $PREFIX
cd /p/home/scheinin/build/ncarg-intel/src
wget http://www.bzip.org/1.0.6/bzip2-1.0.6.tar.gz
tar xzf bzip2-1.0.6.tar.gz
cd bzip2-1.0.6
---
vi Makefile
CC=icc
vi Makefile-libbz2_so
CC=icc
---
make -f Makefile-libbz2_so
make clean
make
make -n install PREFIX=$PREFIX
make install PREFIX=$PREFIX
cp ./libbz2.so.1.0.6 ${PREFIX}/lib
cd $PREFIX/lib
ln -s libbz2.so.1.0.6 libbz2.so.1.0
ln -s libbz2.so.1.0.6 libbz2.so.1
ln -s libbz2.so.1.0.6 libbz2.so
fix permissions
do not forget to get back to
export PREFIX=/p/home/apps/unsupported/ncarg/6.2.1-intel
 detour above ]

[ detour below
cairo problem is that topaz has
cairo-1.8.8
whereas NCL needs at least version 1.12.16
w.r.t. errors
"undefined reference to `cairo_recording_surface_create"
Mary Haley at UCAR writes
 > Your version of cairo is too old.
 > NCAR Graphics and NCL are built against at least version 1.12.16â€‹.
Installed /p/home/apps/unsupported/cairo/
1.14.2-gcc43  1.14.2-gcc49  1.14.2-intel
 detour above ]

# Make sure TMPDIR is defined and exists.
export TMPDIR=${WORKDIR}/tmp

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

# For ncarg-4.4.1, the name of the directory after tar extract
# is ncarg-4.4.1, however, the ymake script expects "ncarg"
# so the directory needs to be renamed.
# Here we are installing ncl_ncarg-6.2.1 but do the same
# just in case the problem still exists.

cd /p/home/scheinin/build/ncarg-intel/src
mv ncl_ncarg-6.2.1 ncarg

export NCARG=/p/home/scheinin/build/ncarg-intel/src/ncarg
export NCARG_ROOT=$PREFIX

# bzip2 'devel' RPM not yet installed, so use hand-built.
export LD_LIBRARY_PATH=/p/home/apps/unsupported/bzip2/1.0.6-intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/udunits/2.2.19-intel/lib:$LD_LIBRARY_PATH
# As of June 3, 2015, libexpat-devel has been installed on topaz.
# So future udunits will not need /apps/unsupported/expat .
export LD_LIBRARY_PATH=/p/home/apps/unsupported/expat/2.1.0-intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/szip/2.1-intel/lib:$LD_LIBRARY_PATH
# Some compilation looks for hdf4
export LD_LIBRARY_PATH=/p/home/apps/unsupported/hdf4/4.2.11-intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/hdf5/1.8.15-intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/netcdf/4.3.3.1-intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/cairo/1.14.2-intel/lib:$LD_LIBRARY_PATH

All Makefile files have
LEXLIB          = -ll
when it should be
LEXLIB          = -lfl
See if changing the following solves the problem
/p/home/scheinin/build/ncarg-intel/src/ncarg/config/Template
Change from
#define LexLibrary      -ll
Change to
#define LexLibrary      -lfl
One of the few places where the problem occurs is the file
/p/home/scheinin/build/ncarg-intel/src/ncarg/ni/src/mkwrap/Makefile
Change from
LEXLIB          = -ll
Change to
LEXLIB          = -lfl
Note, the Makefile does not exist until "./Configure -v" and
after "make Everything" has run for awhile.

Note done for Intel, should be done in future
/p/home/scheinin/build/ncarg-intel/src/ncarg/config/Project
change from
NCARGGKSLIB     = _UseLib(-L$(NCARGGKSLIBSRC),-lncarg_gks)
change to
NCARGGKSLIB     = _UseLib(-L$(NCARGGKSLIBSRC),-lncarg_gks -L/p/home/apps/unsupported/cairo/1.14.2-intel/lib -lcairo -lpixman-1 -lbasegks)

# Within the distribution
cd config
make -f Makefile.ini
 ./ymake -config `pwd`
 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.INTEL
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.INTEL LINUX

Before doing the copy
diff LINUX LINUX.64.INTEL

Significant differences are compiler and compiler options.
Also, below
< #define HdfDefines  -DLINUX
> #define HdfDefines  -DLINUX64
< #define XLibrary      -lX11 -lXext
> #define XLibrary -lXpm -lX11 -lXext
< #define LibSearchUser    -L/usr/X11R6/lib64
> #define LibSearchUser    -L/usr/X11R6/lib
< #define ArchRecLibSearch    -L/usr/X11R6/lib64
> #define ArchRecLibSearch    -L/usr/X11R6/lib
Actually, both /usr/X11R6/lib and /usr/X11R6/lib64 are empty.

My note from past installs, the extra -lXpm in XLibrary is good.
Also good, define XToolLibrary -lXt -lSM -lICE .

Follow my notes from the past and
Change from
#define CcOptions    -ansi -openmp
Change to
#define CcOptions    -fPIC -openmp
Change from
#define FcOptions     -openmp
Change to
#define FcOptions     -fPIC -openmp

(cd $PREFIX ; mkdir bin include lib man )

cd ..

# Notice that -I/usr/include/freetype2 is needed.

Both
/p/home/apps/unsupported/netcdf/4.3.3.1-intel/include
and
/p/home/apps/unsupported/hdf4/4.2.11-intel/include
have file netcdf.h .  It seems that putting hdf4 second in include search
paths will solve the problem.  Need definitions found in netcdf, not hdf4.
Have hdf4 because there is a compilation that looks for information
in there though I only expect to use hdf5.

In
/p/home/scheinin/build/ncarg-intel/src/ncarg/ni/src/ncl
edit Makefile
change from
NCARGGKSLIB     = -L$(NCARGGKSLIBSRC) -lncarg_gks
change to
NCARGGKSLIB     = -L$(NCARGGKSLIBSRC) -lncarg_gks -L/p/home/apps/unsupported/cairo/1.14.2-intel/lib -lcairo -lpixman-1 -lbasegks
Note, the Makefile does not exist until "./Configure -v" and
after "make Everything" has run for awhile.

./Configure -v
Build NCL (y)? y
(Must already have bin/ include/ lib/ man/ under $PREFIX.)
Parent installation directory : [value of $PREFIX]
System temp space directory   : [value of $TMPDIR]
Build NetCDF4 feature support (optional)? y
Build HDF4 support (optional) into NCL? n
(it [HDF4] is a prerequisite if you need HDF-EOS2 support)
Also build HDF4 support (optional) into raster library? n
Build Triangle support (optional) into NCL? n
If you are using NetCDF V4.x, did you enable NetCDF-4 support? y
Did you build NetCDF with OPeNDAP support? n
Build GDAL support (optional) into NCL? n
Build Udunits-2 support (optional) into NCL? y
Build Vis5d+ support (optional) into NCL? n
Build HDF-EOS2 support (optional) into NCL? n
Build HDF5 support (optional) into NCL? y
Build HDF-EOS5 support (optional) into NCL? n
Build GRIB2 support (optional) into NCL? n
Enter local library search path(s) > /usr/lib64 /usr/X11R6/lib64 /p/home/apps/unsupported/bzip2/1.0.6-intel/lib /p/home/apps/unsupported/udunits/2.2.19-intel/lib /p/home/apps/unsupported/expat/2.1.0-intel/lib /p/home/apps/unsupported/szip/2.1-intel/lib /p/home/apps/unsupported/hdf4/4.2.11-intel/lib /p/home/apps/unsupported/hdf5/1.8.15-intel/lib /p/home/apps/unsupported/netcdf/4.3.3.1-intel/lib /p/home/apps/unsupported/cairo/1.14.2-intel/lib
Enter local include search path(s) > /usr/include /usr/include/freetype2 /p/home/apps/unsupported/bzip2/1.0.6-intel/include /p/home/apps/unsupported/udunits/2.2.19-intel/include /p/home/apps/unsupported/expat/2.1.0-intel/include /p/home/apps/unsupported/szip/2.1-intel/include /p/home/apps/unsupported/hdf5/1.8.15-intel/include /p/home/apps/unsupported/netcdf/4.3.3.1-intel/include /p/home/apps/unsupported/hdf4/4.2.11-intel/include /p/home/apps/unsupported/cairo/1.14.2-intel/include

Note that every user of NCL and NCAR Graphics will need to set
the following environment variable:
setenv NCARG_ROOT /p/home/apps/unsupported/ncarg/6.2.1-intel

 make Everything 2>&1 | tee make-output

# To continue

 make All 2>&1 | tee -a make-output

Edit
/p/home/scheinin/build/ncarg-intel/src/ncarg/ni/src/ncl/Makefile
as shown above after "make Everything" has started running so
that the Makefile has been created.
May not need to change if change if Project fixes the problem.

# When ncl was created without error, as
# ./ni/src/ncl/ncl
# it was not moved to $PREFIX/bin .
cp ./ni/src/ncl/ncl $PREFIX/bin

In files
$PREFIX/bin/ncargcc
$PREFIX/bin/ncargf77
$PREFIX/bin/ncargf90
$PREFIX/bin/nhlcc
$PREFIX/bin/nhlf77
$PREFIX/bin/nhlf90
change from
set syslibdir = "-L/usr/X11R6/lib"
change to
set syslibdir = "-L/usr/X11R6/lib -L/p/home/apps/unsupported/bzip2/1.0.6-intel/lib -L/p/home/apps/unsupported/udunits/2.2.19-intel/lib -L/p/home/apps/unsupported/expat/2.1.0-intel/lib -L/p/home/apps/unsupported/szip/2.1-intel/lib -L/p/home/apps/unsupported/hdf4/4.2.11-intel/lib -L/p/home/apps/unsupported/hdf5/1.8.15-intel/lib -L/p/home/apps/unsupported/netcdf/4.3.3.1-intel/lib -L/p/home/apps/unsupported/cairo/1.14.2-intel/lib"
change from
set sysincdir = "-I/usr/X11R6/include"
change to
set sysincdir = "-I/usr/X11R6/include -I/p/home/apps/unsupported/bzip2/1.0.6-intel/include -I/p/home/apps/unsupported/udunits/2.2.19-intel/include -I/p/home/apps/unsupported/expat/2.1.0-intel/include -I/p/home/apps/unsupported/szip/2.1-intel/include -I/p/home/apps/unsupported/hdf4/4.2.11-intel/include -I/p/home/apps/unsupported/hdf5/1.8.15-intel/include -I/p/home/apps/unsupported/netcdf/4.3.3.1-intel/include -I/p/home/apps/unsupported/cairo/1.14.2-intel/include"

cd $PREFIX/bin
emacs ncargcc ncargf77 ncargf90 nhlcc nhlf77 nhlf90 &

Fix permissions.

 --- Intel above ---
 --- GCC native from distribution below ---

export PREFIX=/p/home/apps/unsupported/ncarg/6.2.1-gcc43
mkdir $PREFIX

# These definitions probably do not have any affect.
# Look at LINUX file and change there.
export CXX=g++
export CXXFLAGS="-O2"
export CC=gcc
export CFLAGS="-O2"
export FC=gfortran
export F77=gfortran
export F90=gfortran

[ detour below
"devel" RPM for bzip2 not yet installed,
build because needed for building ncl executable
export PREFIX=/p/home/apps/unsupported/bzip2/1.0.6-gcc43
mkdir $PREFIX
cd /p/home/scheinin/build/ncarg-gcc43/src
wget http://www.bzip.org/1.0.6/bzip2-1.0.6.tar.gz
tar xzf bzip2-1.0.6.tar.gz
cd bzip2-1.0.6
---
vi Makefile
CC=gcc
vi Makefile-libbz2_so
CC=gcc
---
make -f Makefile-libbz2_so
make clean
make
make -n install PREFIX=$PREFIX
make install PREFIX=$PREFIX
cp ./libbz2.so.1.0.6 ${PREFIX}/lib
cd $PREFIX/lib
ln -s libbz2.so.1.0.6 libbz2.so.1.0
ln -s libbz2.so.1.0.6 libbz2.so.1
ln -s libbz2.so.1.0.6 libbz2.so
fix permissions
do not forget to get back to
export PREFIX=/p/home/apps/unsupported/ncarg/6.2.1-gcc43
 detour above ]

[ detour below
cairo problem is that topaz has
cairo-1.8.8
whereas NCL needs at least version 1.12.16
w.r.t. errors
"undefined reference to `cairo_recording_surface_create"
Mary Haley at UCAR writes
 > Your version of cairo is too old.
 > NCAR Graphics and NCL are built against at least version 1.12.16â€‹.
Installed /p/home/apps/unsupported/cairo/
1.14.2-gcc43  1.14.2-gcc49  1.14.2-intel
 detour above ]

# Make sure TMPDIR is defined and exists.
export TMPDIR=${WORKDIR}/tmp

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

# For ncarg-4.4.1, the name of the directory after tar extract
# is ncarg-4.4.1, however, the ymake script expects "ncarg"
# so the directory needs to be renamed.
# Here we are installing ncl_ncarg-6.2.1 but do the same
# just in case the problem still exists.

cd /p/home/scheinin/build/ncarg-gcc43/src
mv ncl_ncarg-6.2.1 ncarg

export NCARG=/p/home/scheinin/build/ncarg-gcc43/src/ncarg
export NCARG_ROOT=$PREFIX

# bzip2 'devel' RPM not yet installed, so use hand-built.
export LD_LIBRARY_PATH=/p/home/apps/unsupported/bzip2/1.0.6-gcc43/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/udunits/2.2.19-gcc43/lib:$LD_LIBRARY_PATH
# udunits uses Linux distribution expat
export LD_LIBRARY_PATH=/p/home/apps/unsupported/szip/2.1-gcc43/lib:$LD_LIBRARY_PATH
# Some compilation looks for hdf4
export LD_LIBRARY_PATH=/p/home/apps/unsupported/hdf4/4.2.11-gcc43/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/hdf5/1.8.15-gcc43/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/netcdf/4.3.3.1-gcc43/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/cairo/1.14.2-gcc43/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/cairo/1.14.2-gcc43/lib:$LD_LIBRARY_PATH

Edit
/p/home/scheinin/build/ncarg-gcc43/src/ncarg/config/Template
Change from
#define LexLibrary      -ll
Change to
#define LexLibrary      -lfl

/p/home/scheinin/build/ncarg-gcc43/src/ncarg/config/Project
change from
NCARGGKSLIB     = _UseLib(-L$(NCARGGKSLIBSRC),-lncarg_gks)
change to
NCARGGKSLIB     = _UseLib(-L$(NCARGGKSLIBSRC),-lncarg_gks -L/p/home/apps/unsupported/cairo/1.14.2-gcc43/lib -lcairo -lpixman-1 -lbasegks)

# Within the distribution
cd config
make -f Makefile.ini
 ./ymake -config `pwd`
 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.GNU
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.GNU LINUX

Before doing the copy
diff LINUX LINUX.64.GNU
< #define HdfDefines  -DLINUX
> #define HdfDefines  -DLINUX64
< #define CtoFLibraries   -lgfortran -lm
< #define CtoFLibrariesUser  -lgfortran -lm
> #define CtoFLibraries   -lgfortran
> #define CtoFLibrariesUser   -lgfortran
< #define FcOptions      -fPIC -fno-second-underscore -fno-range-check -fopenmp
> #define FcOptions      -fPIC -fno-f2c -fno-second-underscore -fopenmp
< #define XLibrary      -lX11 -lXext
> #define XLibrary -lX11 -lXext
My notes from past installs,
#define XToolLibrary    -lXt -lSM -lICE is good.

Edit LINUX
change from
#define XLibrary -lX11 -lXext
change to
#define XLibrary -lXpm -lX11 -lXext
change from
#define FcOptions      -fPIC -fno-f2c -fno-second-underscore -fopenmp
change to
#define FcOptions      -fPIC -fno-f2c -fno-second-underscore -fno-range-check -fopenmp

(cd $PREFIX ; mkdir bin include lib man )

cd ..

# Notice that -I/usr/include/freetype2 is needed.

Both
/p/home/apps/unsupported/netcdf/4.3.3.1-gcc43/include
and
/p/home/apps/unsupported/hdf4/4.2.11-gcc43/include
have file netcdf.h .  It seems that putting hdf4 second in include search
paths will solve the problem.  Need definitions found in netcdf, not hdf4.
Have hdf4 because there is a compilation that looks for information
in there though I only expect to use hdf5.

In
/p/home/scheinin/build/ncarg-gcc43/src/ncarg/ni/src/ncl
edit Makefile
change from
NCARGGKSLIB     = -L$(NCARGGKSLIBSRC) -lncarg_gks
change to
NCARGGKSLIB     = -L$(NCARGGKSLIBSRC) -lncarg_gks -L/p/home/apps/unsupported/cairo/1.14.2-gcc43/lib -lcairo -lpixman-1 -lbasegks
Note, the Makefile does not exist until "./Configure -v" and
after "make Everything" has run for awhile.

./Configure -v
Build NCL (y)? y
(Must already have bin/ include/ lib/ man/ under $PREFIX.)
Parent installation directory : [value of $PREFIX]
System temp space directory   : [value of $TMPDIR]
Build NetCDF4 feature support (optional)? y
Build HDF4 support (optional) into NCL? n
(it [HDF4] is a prerequisite if you need HDF-EOS2 support)
Also build HDF4 support (optional) into raster library? n
Build Triangle support (optional) into NCL? n
If you are using NetCDF V4.x, did you enable NetCDF-4 support? y
Did you build NetCDF with OPeNDAP support? n
Build GDAL support (optional) into NCL? n
Build Udunits-2 support (optional) into NCL? y
Build Vis5d+ support (optional) into NCL? n
Build HDF-EOS2 support (optional) into NCL? n
Build HDF5 support (optional) into NCL? y
Build HDF-EOS5 support (optional) into NCL? n
Build GRIB2 support (optional) into NCL? n
Enter local library search path(s) > /usr/lib64 /usr/X11R6/lib64 /p/home/apps/unsupported/bzip2/1.0.6-gcc43/lib /p/home/apps/unsupported/udunits/2.2.19-gcc43/lib /p/home/apps/unsupported/expat/2.1.0-gcc43/lib /p/home/apps/unsupported/szip/2.1-gcc43/lib /p/home/apps/unsupported/hdf4/4.2.11-gcc43/lib /p/home/apps/unsupported/hdf5/1.8.15-gcc43/lib /p/home/apps/unsupported/netcdf/4.3.3.1-gcc43/lib /p/home/apps/unsupported/cairo/1.14.2-gcc43/lib
Enter local include search path(s) > /usr/include /usr/include/freetype2 /p/home/apps/unsupported/bzip2/1.0.6-gcc43/include /p/home/apps/unsupported/udunits/2.2.19-gcc43/include /p/home/apps/unsupported/expat/2.1.0-gcc43/include /p/home/apps/unsupported/szip/2.1-gcc43/include /p/home/apps/unsupported/hdf5/1.8.15-gcc43/include /p/home/apps/unsupported/netcdf/4.3.3.1-gcc43/include /p/home/apps/unsupported/hdf4/4.2.11-gcc43/include /p/home/apps/unsupported/cairo/1.14.2-gcc43/include

Note that every user of NCL and NCAR Graphics will need to set
the following environment variable:
setenv NCARG_ROOT /p/home/apps/unsupported/ncarg/6.2.1-gcc43

 make Everything 2>&1 | tee make-output

# To continue

 make All 2>&1 | tee make-output2

Edit
/p/home/scheinin/build/ncarg-gcc43/src/ncarg/ni/src/ncl/Makefile
as shown above after "make Everything" has started running so
that the Makefile has been created.
May not need to change if change if Project fixes the problem.

# When ncl was created without error, as
# ./ni/src/ncl/ncl
# it was not moved to $PREFIX/bin .
# That was a problem with Intel build but maybe not for other builds.
cp ./ni/src/ncl/ncl $PREFIX/bin/

In files
$PREFIX/bin/ncargcc
$PREFIX/bin/ncargf77
$PREFIX/bin/ncargf90
$PREFIX/bin/nhlcc
$PREFIX/bin/nhlf77
$PREFIX/bin/nhlf90
change from
set syslibdir = "-L/usr/X11R6/lib"
change to
set syslibdir = "-L/usr/X11R6/lib -L/p/home/apps/unsupported/bzip2/1.0.6-gcc43/lib -L/p/home/apps/unsupported/udunits/2.2.19-gcc43/lib -L/p/home/apps/unsupported/expat/2.1.0-gcc43/lib -L/p/home/apps/unsupported/szip/2.1-gcc43/lib -L/p/home/apps/unsupported/hdf4/4.2.11-gcc43/lib -L/p/home/apps/unsupported/hdf5/1.8.15-gcc43/lib -L/p/home/apps/unsupported/netcdf/4.3.3.1-gcc43/lib -L/p/home/apps/unsupported/cairo/1.14.2-gcc43/lib"
change from
set sysincdir = "-I/usr/X11R6/include"
change to
set sysincdir = "-I/usr/X11R6/include -I/usr/include/freetype2 -I/p/home/apps/unsupported/bzip2/1.0.6-gcc43/include -I/p/home/apps/unsupported/udunits/2.2.19-gcc43/include -I/p/home/apps/unsupported/expat/2.1.0-gcc43/include -I/p/home/apps/unsupported/szip/2.1-gcc43/include -I/p/home/apps/unsupported/hdf5/1.8.15-gcc43/include -I/p/home/apps/unsupported/netcdf/4.3.3.1-gcc43/include -I/p/home/apps/unsupported/hdf4/4.2.11-gcc43/include -I/p/home/apps/unsupported/cairo/1.14.2-gcc43/include"

cd $PREFIX/bin
emacs ncargcc ncargf77 ncargf90 nhlcc nhlf77 nhlf90 &

Fix permissions and run tests.

 --- GCC native from distribution above ---
 --- new GNU below ---

export PREFIX=/p/home/apps/unsupported/ncarg/6.2.1-gcc49
mkdir $PREFIX

# Need to add compilers to PATH.
export PATH=/apps/unsupported/gcc/4.9.2/bin:$PATH

# Need to add shared libraries to LD_LIBRARY_PATH.
export LD_LIBRARY_PATH=/apps/unsupported/gcc/4.9.2/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpc/1.0.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpfr/3.1.2/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/gmp/6.0.0a/lib:$LD_LIBRARY_PATH

# These definitions probably do not have any affect.
# Look at LINUX file and change there.
export CXX=/apps/unsupported/gcc/4.9.2/bin/g++
export CXXFLAGS="-O2"
export CC=/apps/unsupported/gcc/4.9.2/bin/gcc
export CFLAGS="-O2"
export FC=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F77=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F90=/apps/unsupported/gcc/4.9.2/bin/gfortran
export LIBS=""
export LDFLAGS=""

[ detour below
"devel" RPM for bzip2 not yet installed,
build because needed for building ncl executable
export PREFIX=/p/home/apps/unsupported/bzip2/1.0.6-gcc49
mkdir $PREFIX
cd /p/home/scheinin/build/ncarg-gcc49/src
wget http://www.bzip.org/1.0.6/bzip2-1.0.6.tar.gz
tar xzf bzip2-1.0.6.tar.gz
cd bzip2-1.0.6
---
vi Makefile
CC=/apps/unsupported/gcc/4.9.2/bin/gcc
vi Makefile-libbz2_so
CC=/apps/unsupported/gcc/4.9.2/bin/gcc
---
make -f Makefile-libbz2_so
make clean
make
make -n install PREFIX=$PREFIX
make install PREFIX=$PREFIX
cp ./libbz2.so.1.0.6 ${PREFIX}/lib
cd $PREFIX/lib
ln -s libbz2.so.1.0.6 libbz2.so.1.0
ln -s libbz2.so.1.0.6 libbz2.so.1
ln -s libbz2.so.1.0.6 libbz2.so
fix permissions
do not forget to get back to
export PREFIX=/p/home/apps/unsupported/ncarg/6.2.1-gcc49
 detour above ]

[ detour below
cairo problem is that topaz has
cairo-1.8.8
whereas NCL needs at least version 1.12.16
w.r.t. errors
"undefined reference to `cairo_recording_surface_create"
Mary Haley at UCAR writes
 > Your version of cairo is too old.
 > NCAR Graphics and NCL are built against at least version 1.12.16â€‹.
Installed /p/home/apps/unsupported/cairo/
1.14.2-gcc43  1.14.2-gcc49  1.14.2-intel
 detour above ]

# Make sure TMPDIR is defined and exists.
export TMPDIR=${WORKDIR}/tmp

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

# For ncarg-4.4.1, the name of the directory after tar extract
# is ncarg-4.4.1, however, the ymake script expects "ncarg"
# so the directory needs to be renamed.
# Here we are installing ncl_ncarg-6.2.1 but do the same
# just in case the problem still exists.

cd /p/home/scheinin/build/ncarg-gcc49/src
mv ncl_ncarg-6.2.1 ncarg

export NCARG=/p/home/scheinin/build/ncarg-gcc49/src/ncarg
export NCARG_ROOT=$PREFIX

# bzip2 'devel' RPM not yet installed, so use hand-built.
export LD_LIBRARY_PATH=/p/home/apps/unsupported/bzip2/1.0.6-gcc49/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/udunits/2.2.19-gcc49/lib:$LD_LIBRARY_PATH
# udunits uses Linux distribution expat
export LD_LIBRARY_PATH=/p/home/apps/unsupported/szip/2.1-gcc49/lib:$LD_LIBRARY_PATH
# Some compilation looks for hdf4, there is no gcc49 for hdf4.
export LD_LIBRARY_PATH=/p/home/apps/unsupported/hdf4/4.2.11-gcc43/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/hdf5/1.8.15-gcc49/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/netcdf/4.3.3.1-gcc49/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/cairo/1.14.2-gcc49/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/cairo/1.14.2-gcc49/lib:$LD_LIBRARY_PATH

Edit
/p/home/scheinin/build/ncarg-gcc49/src/ncarg/config/Template
Change from
#define LexLibrary      -ll
Change to
#define LexLibrary      -lfl

/p/home/scheinin/build/ncarg-gcc49/src/ncarg/config/Project
change from
NCARGGKSLIB     = _UseLib(-L$(NCARGGKSLIBSRC),-lncarg_gks)
change to
NCARGGKSLIB     = _UseLib(-L$(NCARGGKSLIBSRC),-lncarg_gks -L/p/home/apps/unsupported/cairo/1.14.2-gcc49/lib -lcairo -lpixman-1 -lbasegks)

# Within the distribution
cd config
make -f Makefile.ini
 ./ymake -config `pwd`
 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.GNU
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.GNU LINUX

Before doing the copy
diff LINUX LINUX.64.GNU
< #define HdfDefines  -DLINUX
> #define HdfDefines  -DLINUX64
< #define CtoFLibraries   -lgfortran -lm
< #define CtoFLibrariesUser  -lgfortran -lm
> #define CtoFLibraries   -lgfortran
> #define CtoFLibrariesUser   -lgfortran
< #define FcOptions      -fPIC -fno-second-underscore -fno-range-check -fopenmp
> #define FcOptions      -fPIC -fno-f2c -fno-second-underscore -fopenmp
< #define XLibrary      -lX11 -lXext
> #define XLibrary -lX11 -lXext
My notes from past installs,
#define XToolLibrary    -lXt -lSM -lICE is good.

Edit LINUX
change from
#define XLibrary -lX11 -lXext
change to
#define XLibrary -lXpm -lX11 -lXext

(cd $PREFIX ; mkdir bin include lib man )

cd ..

# Notice that -I/usr/include/freetype2 is needed.

Both
/p/home/apps/unsupported/netcdf/4.3.3.1-gcc49/include
and
/p/home/apps/unsupported/hdf4/4.2.11-gcc49/include
have file netcdf.h .  It seems that putting hdf4 second in include search
paths will solve the problem.  Need definitions found in netcdf, not hdf4.
Have hdf4 because there is a compilation that looks for information
in there though I only expect to use hdf5.

In
/p/home/scheinin/build/ncarg-gcc49/src/ncarg/ni/src/ncl
edit Makefile
change from
NCARGGKSLIB     = -L$(NCARGGKSLIBSRC) -lncarg_gks
change to
NCARGGKSLIB     = -L$(NCARGGKSLIBSRC) -lncarg_gks -L/p/home/apps/unsupported/cairo/1.14.2-gcc49/lib -lcairo -lpixman-1 -lbasegks
Note, the Makefile does not exist until "./Configure -v" and
after "make Everything" has run for awhile.

./Configure -v
Build NCL (y)? y
(Must already have bin/ include/ lib/ man/ under $PREFIX.)
Parent installation directory : [value of $PREFIX]
System temp space directory   : [value of $TMPDIR]
Build NetCDF4 feature support (optional)? y
Build HDF4 support (optional) into NCL? n
(it [HDF4] is a prerequisite if you need HDF-EOS2 support)
Also build HDF4 support (optional) into raster library? n
Build Triangle support (optional) into NCL? n
If you are using NetCDF V4.x, did you enable NetCDF-4 support? y
Did you build NetCDF with OPeNDAP support? n
Build GDAL support (optional) into NCL? n
Build Udunits-2 support (optional) into NCL? y
Build Vis5d+ support (optional) into NCL? n
Build HDF-EOS2 support (optional) into NCL? n
Build HDF5 support (optional) into NCL? y
Build HDF-EOS5 support (optional) into NCL? n
Build GRIB2 support (optional) into NCL? n
Enter local library search path(s) > /usr/lib64 /usr/X11R6/lib64 /p/home/apps/unsupported/bzip2/1.0.6-gcc49/lib /p/home/apps/unsupported/udunits/2.2.19-gcc49/lib /p/home/apps/unsupported/expat/2.1.0-gcc43/lib /p/home/apps/unsupported/szip/2.1-gcc49/lib /p/home/apps/unsupported/hdf4/4.2.11-gcc43/lib /p/home/apps/unsupported/hdf5/1.8.15-gcc49/lib /p/home/apps/unsupported/netcdf/4.3.3.1-gcc49/lib /p/home/apps/unsupported/cairo/1.14.2-gcc49/lib
Enter local include search path(s) > /usr/include /usr/include/freetype2 /p/home/apps/unsupported/bzip2/1.0.6-gcc49/include /p/home/apps/unsupported/udunits/2.2.19-gcc49/include /p/home/apps/unsupported/expat/2.1.0-gcc43/include /p/home/apps/unsupported/szip/2.1-gcc49/include /p/home/apps/unsupported/hdf5/1.8.15-gcc49/include /p/home/apps/unsupported/netcdf/4.3.3.1-gcc49/include /p/home/apps/unsupported/hdf4/4.2.11-gcc43/include /p/home/apps/unsupported/cairo/1.14.2-gcc49/include

Note that every user of NCL and NCAR Graphics will need to set
the following environment variable:
setenv NCARG_ROOT /p/home/apps/unsupported/ncarg/6.2.1-gcc49

 make Everything 2>&1 | tee make-output

# To continue

 make All 2>&1 | tee -a make-output2

Edit
/p/home/scheinin/build/ncarg-gcc49/src/ncarg/ni/src/ncl/Makefile
as shown above after "make Everything" has started running so
that the Makefile has been created.
May not need to change if change if Project fixes the problem.

# When ncl was created without error, as
# ./ni/src/ncl/ncl
# it was not moved to $PREFIX/bin .
# That was a problem with Intel build but maybe not for other builds.
cp ./ni/src/ncl/ncl $PREFIX/bin

In files
$PREFIX/bin/ncargcc
$PREFIX/bin/ncargf77
$PREFIX/bin/ncargf90
$PREFIX/bin/nhlcc
$PREFIX/bin/nhlf77
$PREFIX/bin/nhlf90
change from
set syslibdir = "-L/usr/X11R6/lib"
change to
set syslibdir = "-L/usr/X11R6/lib -L/p/home/apps/unsupported/bzip2/1.0.6-gcc49/lib -L/p/home/apps/unsupported/udunits/2.2.19-gcc49/lib -L/p/home/apps/unsupported/expat/2.1.0-gcc43/lib -L/p/home/apps/unsupported/szip/2.1-gcc49/lib -L/p/home/apps/unsupported/hdf4/4.2.11-gcc43/lib -L/p/home/apps/unsupported/hdf5/1.8.15-gcc49/lib -L/p/home/apps/unsupported/netcdf/4.3.3.1-gcc49/lib -L/p/home/apps/unsupported/cairo/1.14.2-gcc49/lib"
change from
set sysincdir = "-I/usr/X11R6/include"
change to
set sysincdir = "-I/usr/X11R6/include -I/usr/include/freetype2 -I/p/home/apps/unsupported/bzip2/1.0.6-gcc49/include -I/p/home/apps/unsupported/udunits/2.2.19-gcc49/include -I/p/home/apps/unsupported/expat/2.1.0-gcc43/include -I/p/home/apps/unsupported/szip/2.1-gcc49/include -I/p/home/apps/unsupported/hdf5/1.8.15-gcc49/include -I/p/home/apps/unsupported/netcdf/4.3.3.1-gcc49/include -I/p/home/apps/unsupported/hdf4/4.2.11-gcc43/include -I/p/home/apps/unsupported/cairo/1.14.2-gcc49/include"

cd $PREFIX/bin
emacs ncargcc ncargf77 ncargf90 nhlcc nhlf77 nhlf90 &

Fix permissions and run tests.

 --- new GNU above ---

# Change permissions.
# Do for each $PREFIX or for first time do for next level up.
topdir=$PREFIX
cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

 ====================== below, testing ======================
Test the NCL and/or NCAR Graphics installation

export PATH=${PREFIX}/bin:$PATH
cd <some workspace>

You can quickly test if NCL is installed properly by typing "ncl" with the "-V" option to get the version, and then running a quick program:

    ncl -V
    ng4ex gsun01n

The ng4ex command will copy an NCL script called gsun01n.ncl into your current working directory, and run it with NCL. An X11 window should pop up with an XY plot drawn on it. Click on this plot with your left mouse button to keep advancing to the next frame.

Once this file is in your directory, you can also run it yourself with:

    ncl gsun01n.ncl

If "ncl" seems to be working, then this indicates that your build of NCAR Graphics was at least mostly successful, since NCL depends on the NCAR Graphics libraries.

To test NCAR Graphics only, there's an extensive suite of examples available. You should refer to the NCAR Graphics Fundamentals. It will show you how to run examples and test programs, and how to view the resulting graphics. Using the ncargex and ctrans programs is the easiest way to test the installation and become familiar with the use of NCAR Graphics.

For a quick test, try the following:

    ncargex cpex08
    ctrans -d X11 cpex08.ncgm

The first command will copy a file called cpex08.f into your current working directory, compile, link, and execute it, and create a graphics file called cpex08.ncgm. The second command will display the graphic on an X11 window on your screen. You must have your DISPLAY environment variable set correctly for this command to work. Left-click on the X11 window to make the graphic go away.
 ====================== above, testing ======================

