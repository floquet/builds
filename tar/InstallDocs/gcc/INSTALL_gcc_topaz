

# When machine first became available,
# TMPDIR and WORKDIR were not defined.
# In that case,
export WORKDIR=/p/work1/scheinin
export TMPDIR=$WORKDIR/tmp
mkdir $TMPDIR


export PREFIX=/apps/unsupported/gmp/6.0.0a
mkdir $PREFIX
cd /p/home/scheinin/build/gmp/src
wget https://ftp.gnu.org/gnu/gmp/gmp-6.0.0a.tar.bz2

./configure --prefix=$PREFIX \
  --enable-cxx \
  --enable-shared  --enable-static

make 2>&1 | tee make.log
make check 2>&1 | tee check.log
make install

export LD_LIBRARY_PATH=/apps/unsupported/gmp/6.0.0a/lib:$LD_LIBRARY_PATH

# MPFR prerequisite GMP
export PREFIX=/apps/unsupported/mpfr/3.1.2
mkdir $PREFIX
cd /p/home/scheinin/build/mpfr/src
wget http://www.mpfr.org/mpfr-current/mpfr-3.1.2.tar.bz2

./configure --prefix=$PREFIX \
  --with-gmp=/apps/unsupported/gmp/6.0.0a \
  --enable-shared  --enable-static

make 2>&1 | tee make.log
make check 2>&1 | tee check.log
make install

export LD_LIBRARY_PATH=/apps/unsupported/mpfr/3.1.2/lib:$LD_LIBRARY_PATH

# MPC prerequisites are GMP and MPFR
export PREFIX=/apps/unsupported/mpc/1.0.3
mkdir $PREFIX
cd /p/home/scheinin/build/mpc/src
wget ftp://ftp.gnu.org/gnu/mpc/mpc-1.0.3.tar.gz

./configure --prefix=$PREFIX \
  --with-gmp=/apps/unsupported/gmp/6.0.0a \
  --with-mpfr=/apps/unsupported/mpfr/3.1.2 \
  --enable-shared  --enable-static

make 2>&1 | tee make.log
make check 2>&1 | tee check.log
make install

export LD_LIBRARY_PATH=/apps/unsupported/mpc/1.0.3/lib:$LD_LIBRARY_PATH

# Prerequisites GMP, MPER and MPC
export PREFIX=/apps/unsupported/gcc/4.9.2
mkdir $PREFIX
cd /p/home/scheinin/build/gcc/src
wget http://ftp.wayne.edu/gnu/gcc/gcc-4.9.2/gcc-4.9.2.tar.bz2

cd /p/home/scheinin/build/gcc/src
mkdir objdir
cd objdir
# Note, no ISL.
/p/home/scheinin/build/gcc/src/gcc-4.9.2/configure  --prefix=$PREFIX \
  --with-gmp=/apps/unsupported/gmp/6.0.0a \
  --with-mpfr=/apps/unsupported/mpfr/3.1.2 \
  --with-mpc=/apps/unsupported/mpc/1.0.3  \
  --enable-shared  --enable-static

make bootstrap 2>&1 | tee make.log
make install

Change permissions on all four directories.

topdir=< one of the PREFIX >
cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *




 --------------------

Second, you must have the testing tools installed. This includes DejaGnu, Tcl, and Expect; the DejaGnu site has links to these.

If the directories where runtest and expect were installed are not in the PATH, you may need to set the following environment variables appropriately, as in the following example (which assumes that DejaGnu has been installed under /usr/local):

     TCL_LIBRARY = /usr/local/share/tcl8.0
     DEJAGNULIBS = /usr/local/share/dejagnu

(On systems such as Cygwin, these paths are required to be actual paths, not mounts or links; presumably this is due to some lack of portability in the DejaGnu code.)

Finally, you can run the testsuite (which may take a long time):

     cd objdir; make -k check
 --------------------
