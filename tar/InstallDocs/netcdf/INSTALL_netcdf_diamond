
After describing the installation of NetCDF, the installation
of Parallel NetCDF will be described.

NetCDF is from
http://www.unidata.ucar.edu/software/netcdf/

Parallel NetCDF is from
http://ftp.mcs.anl.gov/pub/parallel-netcdf/parallel-netcdf-1.1.0.tar.bz2
Parallel NetCDF documentation can be found at
http://trac.mcs.anl.gov/projects/parallel-netcdf/wiki

NetCDF from UNIDATA

# -DpgiFortran also works for the Intel compiler.

# module load mpt/1.24
# module load cc_11.0.074
# module load fc_11.0.074
# module load mkl_10.1.0.015
# diamond on Dec. 29, 2009 and again Jan. 7, 2010
module load mpt/1.26
module load cc_11.1.056
module load fc_11.1.056
module load mkl_10.2.0.013

# Previously, Dec. 29 szip was under hdf5, below modified to take
# into account that szip is outside of hdf5. 


# netcdf-4.0.1-serial-intel
export CXX=icc
export CXXFLAGS="-fPIC -O2"
export CC=icc
export CFLAGS="-fPIC -O2"
export CPPFLAGS="-DNDEBUG -DpgiFortran -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -I/opt/sgi/mpt/mpt-1.26/include -I/opt/intel/mkl/10.2.0.013/include -I/usr/local/usp/szip/2.1-intel/include"
export LIBS="-lsz"
export LDFLAGS="-L/opt/sgi/mpt/mpt-1.26/lib -L/opt/intel/mkl/10.2.0.013/lib/em64t -L/usr/local/usp/szip/2.1-intel/lib -no-prec-div -no-multibyte-chars"
export FC=ifort
export F77=ifort
export F90=ifort
export FCFLAGS="-fPIC -O2 -no-prec-div -I/opt/sgi/mpt/mpt-1.26/include -I/opt/intel/mkl/10.2.0.013/include"
export FFFLAGS="-fPIC -O2 -no-prec-div -I/opt/sgi/mpt/mpt-1.26/include -I/opt/intel/mkl/10.2.0.013/include"

# netcdf-4.0.1-intel
export CXX=icc
export CXXFLAGS="-fPIC -O2"
export CC=icc
export CFLAGS="-fPIC -O2"
export CPPFLAGS="-DNDEBUG -DpgiFortran -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -I/opt/sgi/mpt/mpt-1.26/include -I/opt/intel/mkl/10.2.0.013/include -I/usr/local/usp/szip/2.1-intel/include"
export LIBS="-lmpi -lsz"
export LDFLAGS="-L/opt/sgi/mpt/mpt-1.26/lib -L/opt/intel/mkl/10.2.0.013/lib/em64t -L/usr/local/usp/szip/2.1-intel/lib -no-prec-div -no-multibyte-chars"
export FC=ifort
export F77=ifort
export F90=ifort
export FCFLAGS="-fPIC -O2 -no-prec-div -I/opt/sgi/mpt/mpt-1.26/include -I/opt/intel/mkl/10.2.0.013/include"
export FFFLAGS="-fPIC -O2 -no-prec-div -I/opt/sgi/mpt/mpt-1.26/include -I/opt/intel/mkl/10.2.0.013/include"

export TMPDIR=${WORKDIR}/tmp

# netcdf-4.0.1-serial-intel
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/usp/hdf5/1.8.4-serial-intel/lib:/usr/local/usp/szip/2.1-intel/lib

# netcdf-4.0.1-intel
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/usp/hdf5/1.8.4-intel/lib:/usr/local/usp/szip/2.1-intel/lib


# Do not use "-ipo" because using it causes libraries to have few items.
# Changed LDFLAGS, LIBS and CPPFLAGS to reference sz library.
# HDF5 was compiled with
# -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
# so added that to CPPFLAGS.
# Did not compile for C++
# Disabled making documents because /usr/bin/tex is missing.
# Libtool had the correct definition "wl="-Wl,"
# yet some test programs were missing this during compilation

# netcdf-4.0.1-serial-intel
# Build in /usr/local/usp/netcdf/netcdf-4.0.1-serial-intel/src/netcdf-4.0.1
 ./configure --prefix=/usr/local/usp/netcdf/netcdf-4.0.1-serial-intel  \
  --enable-f77  --enable-f90 \
--enable-static  --enable-shared \
--enable-ncgen4  --enable-netcdf-4 \
--with-hdf5=/usr/local/usp/hdf5/1.8.4-serial-intel \
--with-szlib=/usr/local/usp/szip/2.1-intel \
--with-temp-large=$TMPDIR \
--disable-cxx \
--disable-docs-install

make
make check 2>&1 | tee check.log
# All tests passed.
make install
make clean


# netcdf-4.0.1-intel
# Build in /usr/local/usp/netcdf/netcdf-4.0.1-intel/src/netcdf-4.0.1
 ./configure --prefix=/usr/local/usp/netcdf/netcdf-4.0.1-intel  \
  --enable-f77  --enable-f90 \
--enable-static  --enable-shared \
--enable-parallel-tests --enable-ncgen4  --enable-netcdf-4 \
--with-hdf5=/usr/local/usp/hdf5/1.8.4-intel \
--with-szlib=/usr/local/usp/szip/2.1-intel \
--with-temp-large=$TMPDIR \
--disable-cxx \
--disable-docs-install

make

In files

./nc_test4/run_par_bm_test.sh
./nc_test4/run_par_test.sh
./nc_test4/run_par_bm_radar_2D.sh
./nf_test/run_f90_par_test.sh
./nf_test/run_f77_par_test.sh
./libsrc4/run_par_tests.sh

change from
  mpiexec -n
change to
  mpiexec_mpt -np

# qsub -A  erdcsp01 -q standard -l select=4:ncpus=8:mpiprocs=8,place=scatter:excl,walltime=1:00:00 -I
 qsub -A  erdcssta -q standard -l select=4:ncpus=8:mpiprocs=8,place=scatter:excl,walltime=1:00:00 -I

. /usr/share/modules/init/bash
module load mpt/1.26
module load cc_11.1.056
module load fc_11.1.056
module load mkl_10.2.0.013

export MPI_TYPE_DEPTH=12

cd /usr/local/usp/netcdf/netcdf-4.0.1-intel/src/netcdf-4.0.1

make check 2>&1 | tee check.log
 Most parallel tests succeeded except tst_h_par,
but there is no explanation for why that one failed.

# -k to continue testing
make -k check 2>&1 | tee check.log

 ftst_parallel.F failed to compile
Also, unjustified complaint
mpirun must be used to launch all MPI applications
FAIL: simple_xy_par_wr
mpirun must be used to launch all MPI applications
FAIL: simple_xy_par_rd

make install
make clean

For compiling or running applications, will probably need to do
either

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/usp/netcdf/netcdf-4.0.1-serial-intel/lib:/usr/local/usp/hdf5/1.8.4-serial-intel/lib:/usr/local/usp/szip/2.1-intel/lib

or

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/usp/netcdf/netcdf-4.0.1-intel/lib:/usr/local/usp/hdf5/1.8.4-intel/lib:/usr/local/usp/szip/2.1-intel/lib

 ===========================================================================
Gnu below.

export CXX=g++
export CXXFLAGS="-O2"
export CC=gcc
export CFLAGS="-O2"
export CPPFLAGS="-DpgiFortran -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -I/usr/local/usp/szip/2.1-gnu/include  -I/usr/local/usp/hdf5/1.8.4-gnu/include"
export LIBS="-lsz -lhdf5 -lhdf5_hl -lhdf5_fortran -lhdf5hl_fortran"
export LDFLAGS="-L/usr/local/usp/szip/2.1-gnu/lib -L/usr/local/usp/hdf5/1.8.4-gnu/lib"
export FC=gfortran
export F77=gfortran
export F90=gfortran
export FCFLAGS="-O2"
export FFFLAGS="-O2"

export LD_LIBRARY_PATH=/usr/local/usp/hdf5/1.8.4-gnu/lib:/usr/local/usp/szip/2.1-gnu/lib:$LD_LIBRARY_PATH

export TMPDIR=${WORKDIR}/tmp

cd /usr/local/usp/netcdf/netcdf-4.0.1-gnu/src/netcdf-4.0.1

./configure --prefix=/usr/local/usp/netcdf/netcdf-4.0.1-gnu \
 --enable-f77  --enable-f90 \
 --enable-static  --enable-shared \
 --enable-ncgen4  --enable-netcdf-4 \
 --with-hdf5=/usr/local/usp/hdf5/1.8.4-gnu \
 --with-szlib=/usr/local/usp/szip/2.1-gnu \
 --with-temp-large=$TMPDIR \
 --enable-cxx \
 --disable-docs-install

make
make check 2>&1 | tee check.log
# passed
make install
make clean

Gnu above.
 ===========================================================================

Parallel NetCDF from MCS Argonne
Does not require HDF5

# pnetcdf-1.1.0.old compiled with
# module load mpt/1.24
# module load cc_11.0.074
# module load fc_11.0.074
# module load mkl_10.1.0.015
# diamond on Dec. 29, 2009
module load mpt/1.26
module load cc_11.1.056
module load fc_11.1.056
module load mkl_10.2.0.013

export CC=icc
export CFLAGS="-fPIC -O2"
export MPICC=$CC
export F90=ifort
export FC=ifort
export MPIF77=ifort
export F77=ifort
export CXX=$MPICH_HOME/bin/mpiCC
export CPPFLAGS="-fPIC -I/opt/sgi/mpt/mpt-1.26/include -I/opt/intel/mkl/10.2.0.013/include"
export FPPFLAGS="-fPIC -O2 -I/opt/sgi/mpt/mpt-1.26/include -I/opt/intel/mkl/10.2.0.013/include"
export LDFLAGS="-L/opt/sgi/mpt/mpt-1.26/lib -L/opt/intel/mkl/10.2.0.013/lib/em64t"
export LIBS="-lmpi"

# Did build in
cd /usr/local/usp/netcdf/pnetcdf-1.1.0/src/parallel-netcdf-1.1.0

./configure --prefix=/usr/local/usp/netcdf/pnetcdf-1.1.0 \
  --with-mpi=/opt/sgi/mpt/mpt-1.26 \
  --enable-mpi-io-test

# Final output of configure was
# parallel-netCDF features:
#   parallel-netcdf configured WITH support for large files
#   parallel-netcdf configured WITH fortran bindings
#   parallel-netcdf configured WITH nonblocking routines
#   parallel-netcdf configured WITH giant variable support

make
make install

cp pnetcdf.inc pnetcdf.mod /usr/local/usp/netcdf/pnetcdf-1.1.0/include/pnetcdf.inc
is one of the commands invoked by "make install"  but it is an error.

Do "cd src/libf" then
cp pnetcdf.inc pnetcdf.mod /usr/local/usp/netcdf/pnetcdf-1.1.0/include

to be sure everything was installed, in directories
src/lib  src/libf  src/utils
did "make install"

There is no "make check"
In the subdirectory test/
can do "make"

 qsub -A erdcssta -q standard -l select=4:mpiprocs=8,walltime=1:00:00 -I

. /usr/share/modules/init/bash
module load mpt/1.26
module load cc_11.1.056
module load fc_11.1.056
module load mkl_10.2.0.013

cd /usr/local/usp/netcdf/pnetcdf-1.1.0/src/parallel-netcdf-1.1.0/test

Then do some tests by hand.

nf_test/
export MPI_TYPE_MAX=131072
mpiexec_mpt -np 1 ./nf_test -c
mpiexec_mpt -np 1 ./nf_test -v
Most test were successful, 3 tests failed related to opening files.

test_double/
No explanation of how to run the tests.
From experiments it seems that the following works
 mpiexec_mpt -np 1 test_write tempA
 mpiexec_mpt -np 1 test_read tempA tempB

testcases/
First modified Makefile then
	mpiexec_mpt -np  ./ncmpi_vars_null_stride test.nc
and
	mpiexec_mpt -np 16 ./ncmpi_vars_null_stride test.nc
make test
OK

fandc/
ran executables
mpiexec_mpt -np <some number> ./csnap | ./pnctest | ./pnctestf | ./pnf_test
<some number> was 2, 16 and 32.
OK

mcoll_fortran/
export MPI_TYPE_DEPTH=32
 mpiexec_mpt -np 2 ./mcoll_testf
 mpiexec_mpt -np 4 ./mcoll_testf
 mpiexec_mpt -np 8 ./mcoll_testf
 mpiexec_mpt -np 16 ./mcoll_testf
OK
 mpiexec_mpt -np 32 ./mcoll_testf
Hung, never finished.
File "go" indicated that np should be 4

mcoll_perf/
modified mpiexec in file "go"
but then saw that data files were in a particular users directory
and not part of the testing package

Very poor testing capacity.

 ======================================================
Change ownership and don't let "other" write.

find . -type d -exec chmod ugo+rx {} \; -print
find . -exec chmod ugo+r {} \;
find . -exec chmod o-w {} \;

chown -R scheinin:staff .






