
Topaz

June 16, 2015

Get source from
http://www.nwchem-sw.org/index.php/Download

Compiling information in
http://www.nwchem-sw.org/index.php/Compiling_NWChem

See also
http://www.nwchem-sw.org/index.php/Special:AWCforum/sc/id2
go to link Compiling NWChem
http://www.nwchem-sw.org/index.php/Special:AWCforum/st/id180/How_to_build_on_SGI_Altix_ICE.html
But, shows a setup that creates an error

http://www.nwchem-sw.org/index.php/Download#Source_Code
has a long list of patches.

export PREFIX=/p/home/apps/unsupported/nwchem/6.5-intel
export NWCHEM_TOP=/p/home/scheinin/build/nwchem/src/Nwchem-6.5

# Put Nwchem-6.5.revision26243-src.2014-09-10.tar.bz2 into
# /p/home/scheinin/build/nwchem/src and extracted.
# Rename untar'ed directory
mv Nwchem-6.5.revision26243-src.2014-09-10 Nwchem-6.5

# In /p/home/scheinin/build/nwchem/src download patches.

wget http://www.nwchem-sw.org/images/Util_md_sockets.patch.gz
wget http://www.nwchem-sw.org/images/Hbar.patch.gz
wget http://www.nwchem-sw.org/images/Tcenxtask.patch.gz
wget http://www.nwchem-sw.org/images/Hnd_giaxyz_noinline.patch.gz
wget http://www.nwchem-sw.org/images/Parallelmpi.patch.gz
wget http://www.nwchem-sw.org/images/Makefile_gcc4x.patch.gz
wget http://www.nwchem-sw.org/images/Bcast_ccsd.patch.gz
wget http://www.nwchem-sw.org/images/Elpa_syncs.patch.gz
wget http://www.nwchem-sw.org/images/Xlmpoles_ifort15.patch.gz
wget http://www.nwchem-sw.org/images/Ifort15_fpp_offload.patch.gz
wget http://www.nwchem-sw.org/images/Texas_iorb.patch.gz
wget http://www.nwchem-sw.org/images/Dmapp_inc.patch.gz
wget http://www.nwchem-sw.org/images/Print1e.patch.gz
wget http://www.nwchem-sw.org/images/Hnd_rys.patch.gz
wget http://www.nwchem-sw.org/images/Tddft_grad.patch.gz

gunzip *.patch.gz

# Make list of patches except Hnd_giaxyz_noinline.patch with needs
# to be done separately.
ppp="Util_md_sockets.patch Hbar.patch Tcenxtask.patch Parallelmpi.patch Makefile_gcc4x.patch Bcast_ccsd.patch Elpa_syncs.patch Xlmpoles_ifort15.patch Ifort15_fpp_offload.patch Texas_iorb.patch Dmapp_inc.patch Print1e.patch Hnd_rys.patch Tddft_grad.patch"

cd Nwchem-6.5/src

for i in $ppp ; do
echo "working on $i below"
patch -p0 < ../../$i
done

# Need to do /Hnd_giaxyz_noinline.patch separately
# because it looks for hnd_giaxyz.F without going down
# into NWints/hondo/
cd NWints/hondo/
patch -p0 < ../../../../Hnd_giaxyz_noinline.patch

# Choose MKL options using
# https://software.intel.com/en-us/articles/intel-mkl-link-line-advisor

export FC=ifort
export CC=icc
export NWCHEM_TARGET=LINUX64
export NWCHEM_MODULES="all"
export USE_64TO32=y
export LARGE_FILES=TRUE
export USE_NOFSCHECK=TRUE
export ARMCI_NETWORK=MPI-TS
export USE_MPI=y
export USE_MPIF=y
export USE_MPIF4=y
export MPI_LOC=${MPI_ROOT}
export MPI_LIB=${MPI_ROOT}/lib
export MPI_LIBS=-lmpi
export MPI_INCLUDE=${MPI_ROOT}/include
export MPI_LDFLAGS="-L${MPI_ROOT}/lib"
export LIBMPI="-lmpi"
export HAS_BLAS=yes
export BLASOPT="-L${MKLROOT}/lib/intel64"
export BLAS_LIB="${MKLROOT}/lib/intel64/libmkl_blas95_lp64.a"
export LAPACK_LIB="${MKLROOT}/lib/intel64/libmkl_lapack95_lp64.a"
export USE_SCALAPACK=y
export SCALAPACK="-L${MKLROOT}/lib/intel64"
export SCALAPACK_LIB="${MKLROOT}/lib/intel64/libmkl_scalapack_lp64.a"
export LIB_DEFINES="-I${MKLROOT}/include/intel64/lp64 -I${MKLROOT}/include"
export CPPFLAGS="-I${MKLROOT}/include/intel64/lp64 -I${MKLROOT}/include"

export MPICC=mpicc
export MPIF77=mpif90
export MPICXX=mpicxx
export MPIEXE=mpiexec_mpt
export MPIEXEC=mpiexec_mpt
# Compiling might use mpicc so set to Intel compiler.
export MPICC_CC=icc
export MPICXX_CXX=icpc
export MPIF90_F90=ifort

cd $NWCHEM_TOP/src
make nwchem_config

# Note, 64-bit integers would be OK with a certain MKL BLAS,
# but may still need " export USE_64TO32=y "
# because MPI uses 32-bit integers.
# In which case (32-bit integers) use lp rather than ilp libraries

make 64_to_32 2>&1 | tee convert.log

# Use the command
date +%a_%b_%d_%H:%M:%S_%Y
# and copy the result, e.g. "Tue_Jun_16_15:09:47_2015"
Edit Nwchem-6.5/src/GNUmakefile
Change from
  LIB_DEFINES =  -DCOMPILATION_DATE="`date +%a_%b_%d_%H:%M:%S_%Y`" \
Change to (need the ' inside the ")
  LIB_DEFINES =  -DCOMPILATION_DATE="'Tue_Jun_16_15:09:47_2015'" \
Edit Nwchem-6.5/src/GNUmakefile and add the following.
MKLROOT = /p/home/apps/intel/parallel_studio_2015/composer_xe_2015.1.133/mkl
LIBS += -L$(MKLROOT)/lib/intel64 -Wl,--start-group -lmkl_lapack95_lp64 -lmkl_blacs_sgimpt_lp64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -Wl,--end-group -lpthread -lm
FLIBS += -L$(MKLROOT)/lib/intel64 -Wl,--start-group -lmkl_lapack95_lp64 -lmkl_blacs_sgimpt_lp64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -Wl,--end-group -lpthread -lm

cd ${NWCHEM_TOP}/src
make LDFLAGS="-Wl,-L${NWCHEM_TOP}/lib/LINUX64 -Wl,-L${NWCHEM_TOP}/src/tools/install/lib" 2>&1 | tee make.log

# undefined reference to `ga_cholesky_'

# For some mysterious reason, cannot set LIBS and FLIBS before
# running "make" in ${NWCHEM_TOP}/src .  But if LIBS and FLIBS
# are not set then ./tools/ga-5-3/configure fails and a library
# does not have required routines such as ga_cholesky and ga_pdsyev.
# Environment variable LIBS and FLIBS seems to be needed
# for ${NWCHEM_TOP}/src/tools/ga-5-3
export LIBS="-L${MKLROOT}/lib/intel64 -Wl,--start-group -lmkl_lapack95_lp64 -lmkl_blacs_sgimpt_lp64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -Wl,--end-group -lpthread -lm"
export FLIBS="-L${MKLROOT}/lib/intel64 -Wl,--start-group -lmkl_lapack95_lp64 -lmkl_blacs_sgimpt_lp64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -Wl,--end-group -lpthread -lm"

# Building GA did not work initially, but final link of nwchem
# expected to find routines such as ga_cholesky and ga_pdsyev.
#  # so as a test try.  May need to start over from scratch
#  # after trying this test.
cd ${NWCHEM_TOP}/src/tools/ga-5-3
./configure --prefix=$PREFIX
make LDFLAGS="$LIBS"  2>&1 | tee make.log

mv ./tools/install/lib/libga.a ./tools/install/lib/libga.a_hold
cp ./tools/ga-5-3/.libs/libga.a ./tools/install/lib/libga.a

cd ${NWCHEM_TOP}/src
make LDFLAGS="-Wl,-L${NWCHEM_TOP}/lib/LINUX64 -Wl,-L${NWCHEM_TOP}/src/tools/install/lib" 2>&1 | tee make.log

mkdir ${PREFIX}/bin
mkdir ${PREFIX}/data

# Check that executables are where it is expected to be
ls $NWCHEM_TOP/bin/${NWCHEM_TARGET}/nwchem
# Copy to outside of src
cp $NWCHEM_TOP/bin/${NWCHEM_TARGET}/nwchem ${PREFIX}/bin/

cd $NWCHEM_TOP/src/basis
cp -R libraries ${PREFIX}/data/

cd $NWCHEM_TOP/src/
cp -R data ${PREFIX}

cd $NWCHEM_TOP/src/nwpw
cp -R libraryps ${PREFIX}/data

# Create data/default.nwchemrc
cd $PREFIX/data
#
echo "nwchem_basis_library ${PREFIX}/data/libraries/" >> default.nwchemrc
echo "nwchem_nwpw_library ${PREFIX}/data/libraryps/" >> default.nwchemrc
echo "ffield amber" >> default.nwchemrc
echo "amber_1 ${PREFIX}/data/amber_s/" >> default.nwchemrc
echo "amber_2 ${PREFIX}/data/amber_q/" >> default.nwchemrc
echo "amber_3 ${PREFIX}/data/amber_x/" >> default.nwchemrc
echo "amber_4 ${PREFIX}/data/amber_u/" >> default.nwchemrc
echo "spce    ${PREFIX}/data/solvents/spce.rst" >> default.nwchemrc
echo "charmm_s ${PREFIX}/data/charmm_s/" >> default.nwchemrc
echo "charmm_x ${PREFIX}/data/charmm_x/" >> default.nwchemrc

# Check paths in data/default.nwchemrc

mkdir $PREFIX/doc
cd $PREFIX/doc
wget http://www.nwchem-sw.org/images/NWChem6.5_Documentation.pdf

vi $PREFIX/README

# Users need to create a .nwchemrc
ln -s /p/home/apps/unsupported/nwchem/6.5-intel/data/default.nwchemrc  $HOME/.nwchemrc

# end of README

Tests failed for Intel:

Two processes:
Failed because:    /p/home/scheinin/Samples/nwchem/c240               
0:dft_main0d:                     Error creating ga:Received an Error in Communicat
ion
1:dft_main0d:                     Error creating ga:Received an Error in Communicat
ion

Even for one process
0:dft_main0d:                     Error creating ga:Received an Error in Communicat
ion

See INSTALL
GA RELATED ISSUES

Tried just installing GA, failed when using Intel to install GA.

# Change permissions for general use.

web site, INSTALL file and INSTALL_nwchem
describe data directories to create and tests

http://www.nwchem-sw.org/index.php/Compiling_NWChem#How-to:_Linux_workstation_platforms

Has useful info but nothing specific to SGI or Intel MPI.

 ----------------------------------------------

GCC version 4.9 , below

# Need to add compilers to PATH.
export PATH=/apps/unsupported/gcc/4.9.2/bin:$PATH

# Need to add shared libraries to LD_LIBRARY_PATH.
export LD_LIBRARY_PATH=/apps/unsupported/gcc/4.9.2/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpc/1.0.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpfr/3.1.2/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/gmp/6.0.0a/lib:$LD_LIBRARY_PATH

export PREFIX=/p/home/apps/unsupported/nwchem/6.5-gcc49
export NWCHEM_TOP=/p/home/scheinin/build/nwchem-gcc49/src/Nwchem-6.5

# Put Nwchem-6.5.revision26243-src.2014-09-10.tar.bz2 into
# /p/home/scheinin/build/nwchem-gcc49/src and extract.
# Rename untar'ed directory
mv Nwchem-6.5.revision26243-src.2014-09-10 Nwchem-6.5

# In /p/home/scheinin/build/nwchem/src download patches.

wget http://www.nwchem-sw.org/images/Util_md_sockets.patch.gz
wget http://www.nwchem-sw.org/images/Hbar.patch.gz
wget http://www.nwchem-sw.org/images/Tcenxtask.patch.gz
wget http://www.nwchem-sw.org/images/Hnd_giaxyz_noinline.patch.gz
wget http://www.nwchem-sw.org/images/Parallelmpi.patch.gz
wget http://www.nwchem-sw.org/images/Makefile_gcc4x.patch.gz
wget http://www.nwchem-sw.org/images/Bcast_ccsd.patch.gz
wget http://www.nwchem-sw.org/images/Elpa_syncs.patch.gz
wget http://www.nwchem-sw.org/images/Xlmpoles_ifort15.patch.gz
wget http://www.nwchem-sw.org/images/Ifort15_fpp_offload.patch.gz
wget http://www.nwchem-sw.org/images/Texas_iorb.patch.gz
wget http://www.nwchem-sw.org/images/Dmapp_inc.patch.gz
wget http://www.nwchem-sw.org/images/Print1e.patch.gz
wget http://www.nwchem-sw.org/images/Hnd_rys.patch.gz
wget http://www.nwchem-sw.org/images/Tddft_grad.patch.gz

gunzip *.patch.gz

# Make list of patches except Hnd_giaxyz_noinline.patch with needs
# to be done separately.
ppp="Util_md_sockets.patch Hbar.patch Tcenxtask.patch Parallelmpi.patch Makefile_gcc4x.patch Bcast_ccsd.patch Elpa_syncs.patch Xlmpoles_ifort15.patch Ifort15_fpp_offload.patch Texas_iorb.patch Dmapp_inc.patch Print1e.patch Hnd_rys.patch Tddft_grad.patch"

cd Nwchem-6.5/src

for i in $ppp ; do
echo "working on $i below"
patch -p0 < ../../$i
done

# Need to do /Hnd_giaxyz_noinline.patch separately
# because it looks for hnd_giaxyz.F without going down
# into NWints/hondo/
cd NWints/hondo/
patch -p0 < ../../../../Hnd_giaxyz_noinline.patch

export FC=/apps/unsupported/gcc/4.9.2/bin/gfortran
export CC=/apps/unsupported/gcc/4.9.2/bin/gcc
export NWCHEM_TARGET=LINUX64
export NWCHEM_MODULES="all"
export USE_64TO32=y
export LARGE_FILES=TRUE
export USE_NOFSCHECK=TRUE
export ARMCI_NETWORK=MPI-TS
export USE_MPI=y
export USE_MPIF=y
export USE_MPIF4=y
export MPI_LOC=${MPI_ROOT}
export MPI_LIB=${MPI_ROOT}/lib
export MPI_LIBS=-lmpi
export MPI_INCLUDE=${MPI_ROOT}/include
export MPI_LDFLAGS="-L${MPI_ROOT}/lib"
export LIBMPI="-lmpi"
#export HAS_BLAS=yes
#export BLASOPT="-L${MKLROOT}/lib/intel64"
#export BLAS_LIB="${MKLROOT}/lib/intel64/libmkl_blas95_lp64.a"
#export LAPACK_LIB="${MKLROOT}/lib/intel64/libmkl_lapack95_lp64.a"
#export USE_SCALAPACK=y
#export SCALAPACK="-L${MKLROOT}/lib/intel64"
#export SCALAPACK_LIB="${MKLROOT}/lib/intel64/libmkl_scalapack_lp64.a"
#export LIB_DEFINES="-I${MKLROOT}/include/intel64/lp64 -I${MKLROOT}/include"
#export CPPFLAGS="-I${MKLROOT}/include/intel64/lp64 -I${MKLROOT}/include"

export MPICC=mpicc
export MPIF77=mpif90
export MPICXX=mpicxx
export MPIEXE=mpiexec_mpt
export MPIEXEC=mpiexec_mpt
# Compiling might use mpicc so set to Intel compiler.
export MPICC_CC=gcc
export MPICXX_CXX=g++
export MPIF90_F90=gfortran

cd $NWCHEM_TOP/src
make nwchem_config

make 64_to_32 2>&1 | tee convert.log

cd ${NWCHEM_TOP}/src
make LDFLAGS="-Wl,-L${NWCHEM_TOP}/lib/LINUX64 -Wl,-L${NWCHEM_TOP}/src/tools/install/lib" 2>&1 | tee make.log

mkdir ${PREFIX}/bin
mkdir ${PREFIX}/data

# Check that executables are where it is expected to be
ls $NWCHEM_TOP/bin/${NWCHEM_TARGET}/nwchem
# Copy to outside of src
cp $NWCHEM_TOP/bin/${NWCHEM_TARGET}/nwchem ${PREFIX}/bin/

cd $NWCHEM_TOP/src/basis
cp -R libraries ${PREFIX}/data/

cd $NWCHEM_TOP/src/
cp -R data ${PREFIX}

cd $NWCHEM_TOP/src/nwpw
cp -R libraryps ${PREFIX}/data

# Create data/default.nwchemrc
cd $PREFIX/data
#
echo "nwchem_basis_library ${PREFIX}/data/libraries/" >> default.nwchemrc
echo "nwchem_nwpw_library ${PREFIX}/data/libraryps/" >> default.nwchemrc
echo "ffield amber" >> default.nwchemrc
echo "amber_1 ${PREFIX}/data/amber_s/" >> default.nwchemrc
echo "amber_2 ${PREFIX}/data/amber_q/" >> default.nwchemrc
echo "amber_3 ${PREFIX}/data/amber_x/" >> default.nwchemrc
echo "amber_4 ${PREFIX}/data/amber_u/" >> default.nwchemrc
echo "spce    ${PREFIX}/data/solvents/spce.rst" >> default.nwchemrc
echo "charmm_s ${PREFIX}/data/charmm_s/" >> default.nwchemrc
echo "charmm_x ${PREFIX}/data/charmm_x/" >> default.nwchemrc

# Check paths in data/default.nwchemrc

mkdir $PREFIX/doc
cd $PREFIX/doc
wget http://www.nwchem-sw.org/images/NWChem6.5_Documentation.pdf

vi $PREFIX/README

# Users need to create a .nwchemrc
ln -s /p/home/apps/unsupported/nwchem/6.5-gcc49/data/default.nwchemrc  $HOME/.nwchemrc

# end of README

GCC version 4.9 , below

Failed /p/home/scheinin/Samples/nwchem/c240
dft_main0d:                     Error creating ga                   0
 ----------------------------------------------

  ==================================

# Either
topdir=$PREFIX
or if first $PREFIX
topdir=/p/home/apps/unsupported/nwchem

cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

# Make sure last minute changes such as the README file are readable.



