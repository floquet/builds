
Paradyn
/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9
James L. O'Daniel 
601-634-3036
James.L.O'Daniel@erdc.dren.mil

James K. Durrenberger
durrenberger1@llnl.gov

Notes below.
--------------------------------

module swap PrgEnv-pgi PrgEnv-intel
module load cray-hdf5
# For Metis, give location of cmake.
export PATH=/usr/local/usp/PETtools/CE/pkgs/cmake-2.8.11.2/bin:$PATH

export FC=ftn
export F77=ftn
export CC=cc

Doing all-in-one install failed, so install step by step
and fix errors as they arise.
Top-level configure is not informative when an error
occurs because it calls another configure,
that is, during execution there is the line

configure: running /bin/sh ./configure [etc.]

If the top-level configure fails because of the configure of
Dyna3dx, the file config.log does not have enough information
to understand why.

export PREFIX=/lustre/work1/scheinin/ParaDyn/Installed
mkdir $PREFIX
for i in bin  doc  garnet  include  lib ; do
mkdir $PREFIX/$i
done

cd /lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9

Try running configure at the top level because it might
make some directories or other changes, such as
config.status: linking Makefile.metis to Metis/Makefile.metis
config.status: linking Makefile.dynapart to dynapart/Makefile.dynapart

./configure --prefix=$PREFIX \
 --enable-pro_paradyn  --enable-gemini  --with-bitsize=64 \
 CC=cc FC=ftn F77=ftn \
 --with-mdgpath=`pwd`

Failed with
configure: error: Do not support builds with ftn on x86_64-unknown-linux-gnu
configure: error: ./configure failed for Dyna3dx

So focus on running "configure" in subdirectory Dyna3dx.
cd Dyna3dx

Modify configure in Dyna3dx/
Everywhere "ifort" is in a list, modify to "ifort ftn"
and in case paragraph
<       *ifort)
---
>       *ifort | ftn )

Note, the configure script assumes that the parallel compiler
is named mpi<serial-compiler> but that is not the case on garnet.

./configure --disable-option-checking --prefix=/lustre/work1/scheinin/ParaDyn/Installed  --with-mdgpath=/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9 --with-bitsize=64 --with-mili=/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/Mili/MILI-Linux-GARNET --with-metis=/lustre/work1/scheinin/ParaDyn/Installed --enable-pro_paradyn --enable-gemini --disable-leos CC=cc FC=ftn F77=ftn --cache-file=/dev/null --srcdir=. --with-hdf_path=/opt/cray/hdf5/1.8.11/INTEL/130 --with-mpi=/opt/cray/mpt/6.0.0/gni/mpich2-intel/130/lib --with-mpi_include=/opt/cray/mpt/6.0.0/gni/mpich2-intel/130/include --with-mpilibs="-lfmpich -lmpich -lmpichf90 -lmpich_intel"
One line during the configure procedure is
"checking for LEOS libraries..."

It is known that a LEOS library is added to the linking command
despite  --disable-leos

Build Mili and Metis before building in Dyna3dx

Note, installation (make target install) of Mili is a disaster.
There are missing targets definitions for install
and there is the command 
  chgrp -R mdgdev $(MILI_VERSION); \
in the install procedure that is sure to fail.
The top level Makefile shows how mili is to be installed.

cd ParaDyn_13.1.9/Mili
Already done, but just for reference
module swap PrgEnv-pgi PrgEnv-intel
module load cray-hdf5
export CC=cc
export FC=ftn
export F77=ftn
export PREFIX=/lustre/work1/scheinin/ParaDyn/Installed

./configure --prefix=$PREFIX \
  --enable-hdf --enable-bits64 --disable-shared

cd  MILI-Linux-GARNET
# both  "make opt" and "make debug" compile with "-g -O2"
make opt
cp lib_opt/* $PREFIX/lib/
cp src/*.h $PREFIX/include/

In Mili the header files in src have permissions "x" set,
which is not necessary.

chmod u-x  $PREFIX/include/*
chmod g-r  $PREFIX/include/*
chmod g-r  $PREFIX/lib/*

Can change to group readable after defining a group for ParaDyn.

cd ParaDyn_13.1.9/Metis
Modify
 Makefile.metis -> ../Makefile.metis

The line
 (cd $(SKMETIS_INSTALL_DIR)/bin; ln -s ../doc/VERSION-SKMETIS VERSION-SKMETIS)
failed so change it to
 -(cd $(SKMETIS_INSTALL_DIR)/bin; ln -s ../doc/VERSION-SKMETIS VERSION-SKMETIS)

Check that
SKMETIS_INSTALL_DIR = /lustre/work1/scheinin/ParaDyn/Installed
where the above installation destination is $PREFIX.

See "install" file at top level for the following procedure.

  gmake config -f Makefile.metis
  gmake -f Makefile.metis
  gmake install -f Makefile.metis

The first step,
  gmake config -f Makefile.metis
fails unless the following environment variable is set
export LDFLAGS='-dynamic'
even though I want a static executable.
It seems that cmake always add -rdynamic when testing
the compiler, though the string "rdynamic" is not in
any ParaDyn_13.1.9/Metis file.
The test of the C compiler then has the following error.

  /opt/cray/xt-asyncpe/5.21/bin/cc
  CMakeFiles/cmTryCompileExec.dir/testCCompiler.c.o -o cmTryCompileExec
  -rdynamic
  ld: dynamic STT_GNU_IFUNC symbol `strcmp' with pointer equality in
  `/opt/cray/xe-sysroot/4.1.40/usr/lib64/libc.a(strcmp.o)' can not be used
  when making an executable; recompile with -fPIE and relink with -pie

The problem goes away if there is set
export LDFLAGS='-dynamic'

Before doing "gmake config -f Makefile.metis"
In Makefile.metis
the -DSHARED was changes from 1 to 0 in hopes of building
a static version, specifically,
ifneq ($(shared), not-set)
    CONFIG_FLAGS += -DSHARED=0
endif
Also, changed in Makefile.metis from not-set to
prefix     = /lustre/work1/scheinin/ParaDyn/Installed
If not done, CMAKE_INSTALL_PREFIX for files in
ParaDyn_13.1.9/Metis/build/Linux-x86_64
is set to /usr/local

In the end, after "gmake install -f Makefile.metis"
$PREFIX/lib had file
libmetis.a
whereas $PREFIX/bin
had dynamic executables with ldd showing
        libalpslli.so.0 => not found
        libalpsutil.so.0 => not found
which means they will will only run on batch nodes
or compute nodes.

The next step in the "install" script is gmake at
the top level.  Which then builds in
MILI-Linux-GARNET which is strange because
compilation and linking was already done
in MILI-Linux-GARNET.  The same gmake continues by
compiling in Dyna3dx, which is what I want.
Dyna3dx had been configured but up to this point
gmake had not been done in that subdirectory.

There was an error during linking.

ftn -o paradyn_v13_1_9_rev_1_3090_2_19 [around 100 object files]
 -L/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/lib -lmili  -lmetis -lleosh5  -L/opt/cray/hdf5/1.8.11/INTEL/130/lib -lhdf5_hl -lhdf5_fortran -lhdf5 -L/opt/cray/mpt/6.0.0/gni/mpich2-intel/130/lib/lib -lfmpich -lmpich -lmpichf90 -lmpich_intel
ld: cannot find -lmili
ld: cannot find -lmetis
ld: cannot find -lleosh5
and a message
LD libs=-L/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/lib -lmili  -lmetis -lleosh5  -L/opt/cray/hdf5/1.8.11/INTEL/130/lib -lhdf5_hl -lhdf5_fortran -lhdf5 -L/opt/cray/mpt/6.0.0/gni/mpich2-intel/130/lib/lib -lfmpich -lmpich -lmpichf90 -lmpich_intel

In the subdirectory Dyna3dx the command "./configure -help" shows
  --with-mili=PATH        Use given base PATH for MILI libraries and header
                          files
  --with-metis=PATH       Use given base PATH for Metis libraries and header
                          files
and the top-level for the header files were given in the "configure"
command, in particular,

 --with-mili=/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/Mili/MILI-Linux-GARNET --with-metis=/lustre/work1/scheinin/ParaDyn/Installed

but that information was not used in constructing the
linking command.  Also, the option "--disable-leos" was given to
the "configure" command but nonetheless the linking command has -lleosh5

It appears that make'ing in Dyna3dx is actually done in garnet.paradyn
garnet.paradyn/src_opt/Makefile.Common was modified so that macro LIBS
 did not include "-lleosh5"
/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/lib actually does
not exist, so I changed LIBS to use $PREFIX/lib , that is,
/lustre/work1/scheinin/ParaDyn/Installed/lib
Made same changes in file
garnet.paradyn/src_debug/Makefile.Common

Did gmake at top level.

This gmake also tries to do install
and hits an error in the command
chgrp $(GROUP) $(PROCODE);
because
GROUP ?= @GROUP@
and @GROUP@ was never defined in the configure prodecure.
change to
GROUP ?= 97290STA
for my testing.
Strangely ParaDyn_13.1.9/Dyna3dx/garnet.paradyn/src_opt/Makefile
has GROUP but
ParaDyn_13.1.9/Dyna3dx/garnet.paradyn/src_debug/Makefile
does not.

After launching top-level gmake,
at one point the procedure does

gmake[1]: Leaving directory `/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/Dyna3dx/garnet.paradyn/src_opt'
cd /lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9; \
        cd dynapart ; \
        gmake -j1 -f Makefile.dynapart; \
        gmake -j1 -f Makefile.dynapart install; 

and there is the error

ftn -DDYNAPART -DDP -DUSE_DYNAPARSER  -I/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/include -c pfgen.F
./mili_defs.h(27): error #5102: Cannot open include file 'mili_fparam.h'
      include "mili_fparam.h"

This is strange and the "install" script that can be
used as a guide is strange because it shows

./configure  --with-mdgpath=`pwd`  --prefix=`pwd`  --with-bitsize=64  --with-mili=`pwd`  --enable-pro_paradyn  --enable-gemini  CC=icc 
 [pushd Metis ; etc.]
gmake
configure --enable-dyna_only --enable-pro_dyna --with-mdgpath=`pwd` --prefix=`pwd` --with-bitsize=64 --with-mili=`pwd`
gmake

What is strange is using gmake twice without any specific target
for either.  It is not explained whether the first or the second
gmake should build dynapart.

The two configure commands differ in that the first has
--enable-pro_paradyn  whereas the second has in addition
--enable-dyna_only

These two are defined in the "configure --help" as
  --enable-pro_paradyn    Set the standard compile flags for optomized ParaDyn
                          with no -check flags
  --enable-dyna_only      Set the standard compile flags for optomized Dyna3d
                          with no -check flags

Curiously, the gmake after the first configure does build
in the Dyna3d directory.

subdirectory dynapart/ has  Makefile.dynapart -> ../Makefile.dynapart
Top-level directory Makefile has lines
        cd dynapart ; \
        $(MAKE) -j1 -f Makefile.dynapart; \
        $(MAKE) -j1 -f Makefile.dynapart install; 

In file Makefile.dynapart need to fix

METIS_COPY_FROM_DIR = @METIS_DIR@
METIS_INSTALL_DIR = @METIS_HOME@

The text says in Makefile.dynapart says
"Normally, METIS_INSTALL_DIR ends with 'bin'."
This is a bad naming convention.  The install directory
should refer to the top level below which there would
be lib/ include/ bin/ .
For METIS_COPY_FROM_DIR the text says
"the directory containing the Metis executables prior to their being copied"

METIS_COPY_FROM_DIR = /lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/Metis/build/Linux-x86_64/programs
METIS_INSTALL_DIR = /lustre/work1/scheinin/ParaDyn/Installed/bin

There is a line in Makefile.dynapart
METIS306_DIR =
but the file
ParaDyn_13.1.9/Metis/VERSION-SKMETIS
shows "SKMETIS version metis-5.0.2.sk-10"

Initially
MILI_DIR = /lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9
but should be top level below which Mili's lib/ bin/ and include/
are installed.  Set to
MILI_DIR = /lustre/work1/scheinin/ParaDyn/Installed

In Makefile.dynapart set
USER_NAME = scheinin
GROUP_NAME = 97290STA

cd ParaDyn_13.1.9/dynapart
make  -f Makefile.dynapart
make  -f Makefile.dynapart install

Top-level Makefile has PACKAGES
PACKAGES =  dyna3dx mili dynapart xmilics
and
all: makedir $(PACKAGES)

The procedure for xmilics in the top-level Makefile is
        cd Xmilics/$(XMILICS_DIR); \
        $(MAKE) opt; \
        $(MAKE) install; 
where
XMILICS_DIR=XMILICS-Linux-GARNET
but that directory has not been created.
Need to configure inside of Xmilics.
Based on "configure --help"

cd ParaDyn_13.1.9/Xmilics

./configure --prefix=$PREFIX --install-path=$PREFIX \
 --with-mili=/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/Mili/MILI-Linux-GARNET

The ./configure --help command definitely shows

  --install-path=PATH     Use given base PATH installing Xmilics

but then running configure results in
configure: error: unrecognized option: --install-path=/lustre/work1/scheinin/ParaDyn/Installed

Much later, during "make" found that
/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/Mili/MILI-Linux-GARNET
is empty so the following is wrong

./configure --prefix=$PREFIX \
 --with-mili=/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/Mili/MILI-Linux-GARNET

but rather should use
./configure --prefix=$PREFIX \
 --with-mili=$PREFIX

The directory created is XMILICS--GARNET rather than XMILICS-Linux-GARNET .
To make things consistent, changed directory name to XMILICS-Linux-GARNET
and in ParaDyn_13.1.9/Xmilics/XMILICS-Linux-GARNET/Makefile changed to

ROOT_DIR        =       /lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/Xmilics/XMILICS-Linux-GARNET

Also, changed to XMILICS-Linux-GARNET in many places in
ParaDyn_13.1.9/Xmilics/XMILICS-Linux-GARNET/src/Makefile

In directory ParaDyn_13.1.9/Xmilics/XMILICS-Linux-GARNET
make opt
make install

The second configure in the "install" script
is written as just "configure" but should be "./configure" .

./configure --enable-dyna_only --enable-pro_dyna --with-mdgpath=`pwd` --prefix=`pwd` --with-bitsize=64 --with-mili=`pwd`

Before running the second "configure" I copied every file that had
an associated *.in file.  For example,
Dyna3dx/garnet.paradyn/src_opt/Makefile.Common
which has a
Dyna3dx/garnet.paradyn/src_opt/Makefile.Common.in
and
Dyna3dx/garnet.paradyn/Makefile
which has a
Dyna3dx/garnet.paradyn/Makefile.in

There were a total of around 12 such files, in order to understand
how the second "configure" command changes files.
The only change was the top-level Makefile

< CODENAME = paradyn
< PARADYNCODE = paradyn
---
> CODENAME = dyna3d
> PARADYNCODE = dyna3d

< XMILICS_DIR=XMILICS-Linux-GARNET
< PACKAGES =  dyna3dx mili dynapart xmilics
< CLEAN_PACKAGES =  clean_dyna3dx clean_mili clean_dynapart clean_xmilics
---
> XMILICS_DIR=
> PACKAGES = dyna3dx
> CLEAN_PACKAGES = clean_dyna3dx

Also, the install_dir was changed:
< install_dir=/lustre/work1/scheinin/ParaDyn/Installed
---
> install_dir=/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9
which I changed back to /lustre/work1/scheinin/ParaDyn/Installed

Obviously, --prefix=`pwd` is wrong, but I used it in order to
understand the command in the "install" script.

The configure script itself executes another configure.
=== configuring in Dyna3dx (/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/Dyna3dx)
configure: running /bin/sh ./configure --disable-option-checking '--prefix=/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9'  '--enable-dyna_only' '--enable-pro_dyna' '--with-mdgpath=/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9' '--with-bitsize=64' '--with-mili=/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9' 'FC=ftn' 'F77=ftn' 'CC=cc' --cache-file=/dev/null --srcdir=.

Seeing the configure inside of configure, it seems that a better
choice for the top-level configure command is the following.

./configure --enable-dyna_only --enable-pro_dyna --with-mdgpath=`pwd` --prefix=/lustre/work1/scheinin/ParaDyn/Installed --with-bitsize=64 --with-mili=/lustre/work1/scheinin/ParaDyn/Installed/lib

The configure inside of configure was then
config.status: creating Makefile
=== configuring in Dyna3dx (/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/Dyna3dx)
configure: running /bin/sh ./configure --disable-option-checking '--prefix=/lustre/work1/scheinin/ParaDyn/Installed'  '--enable-dyna_only' '--enable-pro_dyna' '--with-mdgpath=/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9' '--with-bitsize=64' '--with-mili=/lustre/work1/scheinin/ParaDyn/Installed/lib' 'FC=ftn' 'F77=ftn' 'CC=cc' --cache-file=/dev/null --srcdir=.
At top-level directory, ran command

make

Error when linking,
  -L/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/lib -lmili

But mili is not there.  In fact, the configure command had
the option
  --with-mili=/lustre/work1/scheinin/ParaDyn/Installed/lib

and yet, the Makefile (in particular Makefile.Common)
did not have the --with-mili option information.

Modified file
ParaDyn_13.1.9/Dyna3dx/garnet.dyna3d/src_opt/Makefile.Common
from
LIBS            =          -L/lustre/work1/scheinin/ParaDyn/ParaDyn_13.1.9/lib -lmili 
to
LIBS            =          -L/lustre/work1/scheinin/ParaDyn/Installed/lib -lmili 

Also modified file
ParaDyn_13.1.9/Dyna3dx/garnet.dyna3d/src_debug/Makefile.Common
in same way.

Moreover, in both Makefile.com changed definition of INSTALL_DIR to
INSTALL_DIR     =       /lustre/work1/scheinin/ParaDyn/Installed
Also, in ParaDyn_13.1.9/Dyna3dx/garnet.dyna3d/src_opt/Makefile
replace @GROUP@ with my group.

At top level did "make".
The "make" command also did installation.

It is confusing when, within the same application,
some parts use "make" followed by "make install"
and other parts use "make" to also do installation.

 ----------

Alan,
 
First, I do not have a doctorate so you dont need to address me as doctor.  Kevin will work fine.
 
The secondary configure and gmake was put in to build to a serial version of Dyna3d. This allowed some of our users to run dynapart in serial instead of having to run the partitioning using mpi.   It really serves no other purpose.  The problem is that configure had to be run again to generate the correct Makefiles. If you run the install script as given you should see 2 directories that get created in Dyna3dx, one garnet.paradyn and one garnet.dyna3d.  The directory garnet.dyna3d would contain the serial version of the Dyna3d whereas garnet.paradyn would contain the parallel version. 
 
You may comment out the secondary configure and gmake line and get a functional ParaDyn code.  The issue would be running dynapart, it would need to run ParaDyn on a single processor. There are some other things that would also need to addressed,  but I think you are just trying to work on the initial build process of ParaDyn at the moment.    
 
The install file is our best guess at getting it to work on a system for the Navy.  There are other issues which need to be addressed on a case by case basis such as mpi and hdf libraries.     
 
As far as shown to work at LLNL, we dont use this script here.   The owner of each piece install each item separately.  The script was just created to try to help external users as best we could and simply run to make sure it builds everything required.
 
Let me know if I can help out further.
 
Kevin    

 -------------

Kevin,
   Here is a description of my installation procedure on the Cray XE6
at ERDC, named garnet.  This recipe is rather long because I describe
what went wrong, in the hope that it will be useful for the developers.
I needed to do the installation in stages.  I hope my criticism does not
sound too harsh, I have expressed some opinions about the organization
of the build procedure.  When there are errors, the all-in-one approach
obscures the build procedure for the various applications.  For example,
"configure" calling another "configure".  Also, the Makefile changes the
group ownership of files, which I was not prepared for, so several make
procedures failed at first.
   I will put the recipe into this file because some DOD mail servers
strip attachments as a security precaution.

 -------------

