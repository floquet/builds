
Instructions for installing GDAL on garnet are in
gmt/INSTALL_gmt_garnet

Below, Nov. 22, 2016 , topaz

GDAL - Geospatial Data Abstraction Library

Got source from
http://trac.osgeo.org/gdal/wiki/DownloadSource

export GDAL_VERSION=1.11.5
# OR
export GDAL_VERSION=2.1.2

# Other compiler choices are possible, these are the current defaults.
export INTEL_VERSION=15.0.3
# OR
# HDF5 has not been bu
ilt for gnu 5.3.0
# Use GNU_VERSION=4.9.3 for extra and GNU_VERSION=5.3.0 for basic
export GNU_VERSION=4.9.3
# OR
export GNU_VERSION=5.3.0


module swap compiler/intel compiler/intel/$INTEL_VERSION
# OR
module swap compiler/intel compiler/gcc/$GNU_VERSION

module unload mpi/sgimpt/2.12-11218

export PREFIX=/p/home/apps/unsupported/gdal/basic-${GDAL_VERSION}-intel-${INTEL_VERSION}
# OR
export PREFIX=/p/home/apps/unsupported/gdal/basic-${GDAL_VERSION}-gcc-${GNU_VERSION}
# OR
export PREFIX=/p/home/apps/unsupported/gdal/extra-${GDAL_VERSION}-intel-${INTEL_VERSION}
# OR
export PREFIX=/p/home/apps/unsupported/gdal/extra-${GDAL_VERSION}-gcc-${GNU_VERSION}

mkdir $PREFIX

export BUILD_DIR=/p/home/scheinin/build/gdal/basic-${GDAL_VERSION}-intel-${INTEL_VERSION}
# OR
export BUILD_DIR=/p/home/scheinin/build/gdal/basic-${GDAL_VERSION}-gcc-${GNU_VERSION}
# OR
export BUILD_DIR=/p/home/scheinin/build/gdal/extra-${GDAL_VERSION}-intel-${INTEL_VERSION}
# OR
export BUILD_DIR=/p/home/scheinin/build/gdal/extra-${GDAL_VERSION}-gcc-${GNU_VERSION}

mkdir $BUILD_DIR
cp gdal-${GDAL_VERSION}.tar.gz $BUILD_DIR
cd $BUILD_DIR
tar xzf gdal-${GDAL_VERSION}.tar.gz
cd gdal-${GDAL_VERSION}

# For "extra" build, below.

export HDF5_VERSION=1.8.15

export HDF5_DIR=/apps/unsupported/hdf5/${HDF5_VERSION}-intel-${INTEL_VERSION}
# OR
export HDF5_DIR=/apps/unsupported/hdf5/${HDF5_VERSION}-gcc49

export LD_LIBRARY_PATH=${HDF5_DIR}/lib:$LD_LIBRARY_PATH

export NETCDF_VERSION=4.3.3.1

module load usp-netcdf/intel-${INTEL_VERSION}/${NETCDF_VERSION}
export NETCDF_DIR=/apps/unsupported/netcdf/${NETCDF_VERSION}-intel-${INTEL_VERSION}
# OR
module load usp-netcdf/gcc49/${NETCDF_VERSION}
export NETCDF_DIR=/apps/unsupported/netcdf/${NETCDF_VERSION}-gcc49

# Note, loading module usp-netcdf/gcc49/${NETCDF_VERSION} changes
# gcc to version 4.9.2 instead of version 4.9.3 .

# As check
which ncdump

# For "extra" build, above.

# For Intel below.
export CXX=icpc
export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort
export CFLAGS="-O2 -fPIC"
export CPPFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
export FFLAGS="-O2 -fPIC -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
export CXXFLAGS="-O2 -fPIC -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
export LIBS="  -lm"
export LDFLAGS=""
export CPPFLAGS=""
export LIBS=" -lm"
export LDFLAGS=""
# For Intel above.
# For Gnu below.
export CXX=g++
export CC=gcc
export FC=gfortran
export F77=gfortran
export F90=gfortran
export CFLAGS="-O2 -fPIC"
export CPPFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
export FFLAGS="-O2 -fPIC -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
export CXXFLAGS="-O2 -fPIC -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
export LIBS="  -lm"
export LDFLAGS=""
export CPPFLAGS=""
export LIBS=" -lm"
export LDFLAGS=""
# For Gnu above.

# For basic
./configure --prefix=$PREFIX \
 --without-python \
 --with-geotiff=internal
# For extra
./configure --prefix=$PREFIX \
 --without-python \
 --with-geotiff=internal \
 --with-hdf5=$HDF5_DIR \
 --with-netcdf=$NETCDF_DIR

Build instructions say:
If you find build problems with one of the format drivers
that you don't care about, just remove the format from the
GDAL_FORMATS line at the bottom of gdal/GDALmake.opt,
do a make clean, and make.  This will drop it from the build
and default runtime registration. 

make 2>&1 | tee make.log
# There is no "make check" or "make test" target.

find $PREFIX
make install
find $PREFIX

Just one example of ./configure output, below.

  LIBZ support:              external
  LIBLZMA support:           no
  cryptopp support:          no
  GRASS support:             no
  CFITSIO support:           no
  PCRaster support:          internal
  LIBPNG support:            external
  DDS support:               no
  GTA support:               no
  LIBTIFF support:           internal (BigTIFF=yes)
  LIBGEOTIFF support:        internal
  LIBJPEG support:           external
  12 bit JPEG:               no
  12 bit JPEG-in-TIFF:       no
  LIBGIF support:            external
  OGDI support:              no
  HDF4 support:              no
  HDF5 support:              no
  Kea support:               no
  NetCDF support:            no
  Kakadu support:            no
  JasPer support:            no
  OpenJPEG support:          no
  ECW support:               no
  MrSID support:             no
  MrSID/MG4 Lidar support:   no
  MSG support:               no
  GRIB support:              yes
  EPSILON support:           no
  WebP support:              no
  cURL support (wms/wcs/...):no
  PostgreSQL support:        no
  MRF support:               yes
  MySQL support:             no
  Ingres support:            no
  Xerces-C support:          no
  NAS support:               no
  Expat support:             yes
  libxml2 support:           yes
  Google libkml support:     no
  ODBC support:              no
  PGeo support:              no
  FGDB support:              no
  MDB support:               no
  PCIDSK support:            internal
  OCI support:               no
  GEORASTER support:         no
  SDE support:               no
  Rasdaman support:          no
  DODS support:              no
  SQLite support:            yes
  PCRE support:              yes
  SpatiaLite support:        no
  DWGdirect support          no
  INFORMIX DataBlade support:no
  GEOS support:              no
  QHull support:             internal
  Poppler support:           no
  Podofo support:            no
  PDFium support:            no
  OpenCL support:            no
  Armadillo support:         no
  FreeXL support:            no
  SOSI support:              no
  MongoDB support:           no

  SWIG Bindings:             no

  Statically link PROJ.4:    no
  enable GNM building:       no
  enable pthread support:    yes
  enable POSIX iconv support:yes
  hide internal symbols:     no

The point of the above list is to show the many optional
features that one can choose.

Just one example of ./configure output, above.

# For running,
# need to set below for basic
export PATH=${PREFIX}/bin:$PATH
export LD_LIBRARY_PATH=${PREFIX}/lib:$LD_LIBRARY_PATH
export GDAL_DATA=${PREFIX}/share/gdal
# and for extra need to set LD_LIBRARY_PATH as shown above,
# set LD_LIBRARY_PATH for HDF5 and load netcdf module.

# Test
gdalinfo --version

# Fix file permissions.

Above, Nov. 22, 2016 , topaz
