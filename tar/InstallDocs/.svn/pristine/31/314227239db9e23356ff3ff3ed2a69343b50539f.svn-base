

 -----------------------------------------------------------------------

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

export NCARG_ROOT=/usr/local/usp/ncarg/ncarg-4.4.1-intel
export NCARG=${NCARG_ROOT}/src/ncarg

export TMPDIR=${WORKDIR}/tmp

# For ncarg-4.4.1, the name of the directory after tar extract
# is ncarg-4.4.1, however, the ymake script expects "ncarg"
# so the directory needs to be renamed.

cd $NCARG_ROOT
mkdir bin include lib man src

extract source in src

cd ${NCARG_ROOT}/src
mv ncarg-4.4.1 ncarg

module load mpt/1.26
module load cc_11.1.056
module load fc_11.1.056
module load mkl_10.2.0.013

export CC=icc
export F77=ifort
export CXX=icc
export FC=ifort

# Within the distribution
cd config
make -f Makefile.ini
 ./ymake -config `pwd`
 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.INTEL
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.INTEL LINUX

Changes to LINUX
From
#define CcOptions    -ansi
#define FcOptions
remove      -size_lp64
Add
#define HDFlib  -lmfhdf -ldf -ljpeg -lsz -lz

cd ..
./Configure -v

Use serial versions.
Executable installation directory : /usr/local/usp/ncarg/ncarg-4.4.1-intel/bin
Library installation directory    : /usr/local/usp/ncarg/ncarg-4.4.1-intel/lib
Include file installation directory    :
   /usr/local/usp/ncarg/ncarg-4.4.1-intel/include
Man page installation directory   : /usr/local/usp/ncarg/ncarg-4.4.1-intel/man
System temp space directory   : /work/scheinin/tmp
Use Fortran 90 to build Fortran libraries? y
What is the name of your Fortran 90 compiler? ifort
Build HDF support (optional) into raster library? y
Enter local library search path(s) : /usr/lib64 /usr/X11R6/lib64 /usr/local/usp/hdf4/4.2r4/lib /usr/local/usp/hdf5/1.8.4-serial-intel/lib /usr/local/usp/netcdf/netcdf-4.0.1-serial-intel/lib /usr/local/usp/szip/2.1-intel/lib
Enter local library search path(s) : /usr/include /usr/X11R6/include /usr/local/usp/hdf4/4.2r4/include /usr/local/usp/hdf5/1.8.4-serial-intel/include /usr/local/usp/netcdf/netcdf-4.0.1-serial-intel/include /usr/local/usp/szip/2.1-intel/include


 make Everything 2>&1 | tee make-output

# To continue

 make All 2>&1 | tee -a make-output

cd $NCARG_ROOT
find . -type d -exec chmod ugo+rx {} \; -print
find . -exec chmod o-w {} \;
chmod -R o-rwx src
chown -R scheinin:staff $NCARG_ROOT

 -----------------------------------------------------------------------

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

export NCARG_ROOT=/usr/local/usp/ncarg/ncl_ncarg-5.1.0-intel
export NCARG=${NCARG_ROOT}/src/ncl_ncarg-5.1.0

cd $NCARG_ROOT
mkdir bin include lib man src

extract source in src

module load mpt/1.26
module load cc_11.1.056
module load fc_11.1.056
module load mkl_10.2.0.013

export CC=icc
export F77=ifort
export CXX=icc
export FC=ifort

The definition of int_p_NULL is not in the most recent libpng
but is used by ncarg so in
/usr/local/usp/libpng/1.4.0-{intel|gnu}/include/libpng14/png.h
added
#define int_p_NULL                (int *)NULL

 cd $NCARG/config
 make -f Makefile.ini
 ./ymake -config `pwd`

 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.INTEL
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.INTEL LINUX

Changes to LINUX
The ifport library is needed for CALL FLUSH()
Change to
#define CtoFLibraries   -lm -lifcore -lifport
Add
#define HDFlib  -lmfhdf -ldf -ljpeg -lsz -lz

cd ..
./Configure -v

Build NCL > y
Parent installation directory > /usr/local/usp/ncarg/ncl_ncarg-5.1.0-intel
System temp space directory > /work/scheinin/tmp
Build png/zlib support (optional) into GKS library? > y
Did you build HDF-4 with szip support? > n
Build Triangle support (optional) into NCL > n
Build NetCDF-4 support (optional) into NCL > y
Build Udunits support (optional) into NCL > n
Build Vis5d+ support (optional) into NCL > n
Build HDFEOS support (optional) into NCL > n
Build GRIB2 support (optional) into NCL > n
Build OPeNDAP support (optional) into NCL > n
Enter local library search path(s) > /usr/lib64 /usr/X11R6/lib64 /usr/local/usp/hdf4/4.2r4-nonetcdf/lib /usr/local/usp/hdf5/1.8.4-serial-intel/lib /usr/local/usp/netcdf/netcdf-4.0.1-serial-intel/lib /usr/local/usp/szip/2.1-intel/lib /usr/local/usp/libpng/1.4.0-intel/lib
Enter local include search path(s) > /usr/include /usr/X11R6/include /usr/local/usp/hdf4/4.2r4-nonetcdf/include /usr/local/usp/hdf5/1.8.4-serial-intel/include /usr/local/usp/netcdf/netcdf-4.0.1-serial-intel/include /usr/local/usp/szip/2.1-intel/include /usr/local/usp/libpng/1.4.0-intel/include


 make Everything 2>&1 | tee make-output

# To continue
 make All 2>&1 | tee -a make-output

cd $NCARG_ROOT
find . -type d -exec chmod ugo+rx {} \; -print
find . -exec chmod o-w {} \;
chmod -R o-rwx src
chown -R scheinin:staff $NCARG_ROOT

 -----------------------------------------------------------------------

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

export NCARG_ROOT=/usr/local/usp/ncarg/ncl_ncarg-5.1.1-intel
export NCARG=${NCARG_ROOT}/src/ncl_ncarg-5.1.1

cd $NCARG_ROOT
mkdir bin include lib man src

extract source in src

module load mpt/1.26
module load cc_11.1.056
module load fc_11.1.056
module load mkl_10.2.0.013

export CC=icc
export F77=ifort
export CXX=icc
export FC=ifort

The definition of int_p_NULL is not in the most recent libpng
but is used by ncarg so in
/usr/local/usp/libpng/1.4.0-{intel|gnu}/include/libpng14/png.h
added
#define int_p_NULL                (int *)NULL

# This really should be LINUX.64.INTEL
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.INTEL LINUX

Changes to LINUX
Change to (append -lifport because of Fortran CALL FLUSH())
#define CtoFLibraries   -lm -lifcore -lifport
Add
#define HDFlib  -lmfhdf -ldf -ljpeg -lsz -lz

cd ..
./Configure -v

Build NCL > y
Parent installation directory > /usr/local/usp/ncarg/ncl_ncarg-5.1.1-intel
System temp space directory > /work/scheinin/tmp
Build png/zlib support (optional) into GKS library? > y
Did you build HDF-4 with szip support? > n
Build Triangle support (optional) into NCL > n
Build NetCDF-4 support (optional) into NCL > y
Build GDAL support (optional) into NCL > n
Build Udunits support (optional) into NCL > n
Build Vis5d+ support (optional) into NCL > n
Build HDFEOS support (optional) into NCL > n
Build GRIB2 support (optional) into NCL > n
Build OPeNDAP support (optional) into NCL > n
Enter local library search path(s) > /usr/lib64 /usr/X11R6/lib64 /usr/local/usp/hdf4/4.2r4-nonetcdf/lib /usr/local/usp/hdf5/1.8.4-serial-intel/lib /usr/local/usp/netcdf/netcdf-4.0.1-serial-intel/lib /usr/local/usp/szip/2.1-intel/lib /usr/local/usp/libpng/1.4.0-intel/lib
Enter local include search path(s) > /usr/include /usr/X11R6/include /usr/local/usp/hdf4/4.2r4-nonetcdf/include /usr/local/usp/hdf5/1.8.4-serial-intel/include /usr/local/usp/netcdf/netcdf-4.0.1-serial-intel/include /usr/local/usp/szip/2.1-intel/include /usr/local/usp/libpng/1.4.0-intel/include

 make Everything 2>&1 | tee make-output

# To continue
 make All 2>&1 | tee -a make-output

cd $NCARG_ROOT
find . -type d -exec chmod ugo+rx {} \; -print
find . -exec chmod o-w {} \;
chmod -R o-rwx src
chown -R scheinin:staff $NCARG_ROOT

 -----------------------------------------------------------------------


