
Get from
http://www.quantum-espresso.org/
Useful information in
http://www.quantum-espresso.org/users-manual/

July 22, 2015

extra packages are automatically downloaded on demand and put into
directory archive/ .  Directory archive/ begins with
scheinin@topaz06:..espresso-5.2.0/archive> ls
blas-1.tar.gz    iotk-1.2.beta.tar.gz  README
ELPA-0.3.tar.gz  lapack-3.2.tar.gz
After "make all"
scheinin@topaz06:..espresso-5.2.0/archive> ls
iotk-1.2.beta.tar.gz  README
lapack-3.2.tar.gz     tddfpt-5.2.0.tar.gz
atomic-5.2.0.tar.gz  neb-5.2.0.tar.gz      xspectra-5.2.0.tar.gz
blas-1.tar.gz        PHonon-5.2.0.tar.gz
ELPA-0.3.tar.gz      pwcond-5.2.0.tar.gz

 ================== Intel Compiler, SGI MPT, below ==================

export PREFIX=/p/home/apps/unsupported/espresso/5.2.0-intel-sgimpt
mkdir $PREFIX
cd /p/home/scheinin/build/espresso-intel-sgimpt/src/espresso-5.2.0

module unload mpt/2.11-sgi711r13
module load mpt/2.12-11203
# module list includes
# intel-compilers-15/15.0.1.133

export MPICC_CC=icc
export MPICXX_CXX=icpc
export MPIF90_F90=ifort

export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort
export CXX=icpc
export MPICC=mpicc
export MPIF90=mpif90

export CFLAGS="-O2 -openmp"
export CXXFLAGS="-O2 -openmp"
export FFLAGS="-O2 -openmp -I${MPI_ROOT}/include -I${MKLROOT}/include"
export F90FLAGS="-O2 -openmp -I${MPI_ROOT}/include -I${MKLROOT}/include"
export FCFLAGS="-O2 -openmp -I${MPI_ROOT}/include -I${MKLROOT}/include"
export CPPFLAGS="-I${MPI_ROOT}/include -I${MKLROOT}/include"
export LDFLAGS="-L${MPI_ROOT}/lib -L${MKLROOT}/lib/intel64 -openmp"
export LIBS="-lmpi -Wl,--start-group -lmkl_scalapack_lp64 -lmkl_blacs_lp64 -lmkl_blacs_sgimpt_lp64 -lmkl_lapack95_lp64 -lmkl_intel_lp64  -lmkl_sequential -lmkl_core -Wl,--end-group"
export BLAS_LIBS="-lmkl_intel_lp64  -lmkl_sequential -lmkl_core"
export SCALAPACK_LIBS="-Wl,--start-group -lmkl_scalapack_lp64 -lmkl_blacs_lp64 -lmkl_blacs_sgimpt_lp64 -lmkl_lapack95_lp64 -lmkl_intel_lp64  -lmkl_sequential -lmkl_core -Wl,--end-group"

./configure --prefix=$PREFIX --enable-parallel --enable-openmp --with-scalapack=intel  --enable-shared

# --enable-static is not an option

Can check some configure results in  make.sys .

Note, large configure in install/configure and if there are
configure errors, they are written to install/config.log .

make all 2>&1 | tee make.log

See 2.6 Running tests and examples
http://www.quantum-espresso.org/wp-content/uploads/Doc/user_guide/node13.html

# "make install" only moves the executables and puts them directly
# into $PREFIX, so instead use

cp -R . $PREFIX

Testing.

mkdir $WORKDIR/tmp/espressompt
# Edit /p/home/scheinin/build/espresso-intel-sgimpt/src/espresso-5.2.0/environment_variables
# Note, PREFIX in file environment_variables different from install PREFIX.
# Here set PREFIX to build directory.
PREFIX=/p/home/scheinin/build/espresso-intel-sgimpt/src/espresso-5.2.0
BIN_DIR=$PREFIX/bin
PSEUDO_DIR=$PREFIX/pseudo
# Beware: everything in $TMP_DIR will be destroyed !
TMP_DIR=/workspace/scheinin/tmp/espressompt
PARA_PREFIX="mpiexec_mpt -n 4" # not mpirun
PARA_POSTFIX=" "

# Set PREFIX to build directory for testing.
export PREFIX=/p/home/apps/unsupported/espresso/5.2.0-intel-sgimpt
cd /p/home/scheinin/build/espresso-intel-sgimpt/src/espresso-5.2.0
cd PW/tests/
# Modify check-pw.x.j around line 244 and add
for file in $files
do
  name=`basename $file .in`
  get_pp $name
done
# Will fail to run but will do download
./check-pw.x.j
cd CPV/tests/
# Modify check-cp.x.j around line 217 and add
for file in $files
do
  name=`basename $file .in1`
  for i in 1 2 3 4 5 6 7 8 9
  do
    if test -f $TESTDIR/$name.in$i ; then
      get_pp $TESTDIR/$name.in$i
    fi
  done
done
# Above is odd because it gets the file only if it already exists.
# Will fail to run but will do download
./check-cp.x.j

temp below

qsub -l ncpus=16,walltime=1:00:00 -A ERDCS97290STA -q debug -I
module swap intel-compilers/12.1.0 intel-compilers/14.0.2
export PREFIX=/home/scheinin/espresso/5.1.1-sgimpt
cd $PREFIX/src/espresso-5.1.1
cd PW/tests/
./check-pw.x.j
   Tests OK  (Did not do all tests due to debug queue limit of one hour.)
cd CPV/tests/
./check-cp.x.j
   Segmentation fault for all four test types.
   Intel version of tests did not fail.

temp above
 ================== Intel Compiler, SGI MPT, above ==================
 ================== Intel Compiler, Intel MPI, below ==================

export PREFIX=/p/home/apps/unsupported/espresso/5.2.0-intel-intelmpi
mkdir $PREFIX
cd /p/home/scheinin/build/espresso-intel-intelmpi/src/espresso-5.2.0

module unload mpt/2.11-sgi711r13  #  Or some other mpt version.
module load intel-mpi-15/15.0.1.133
# Already have intel-compilers-15/15.0.1.133

export I_MPI_CXX=icpc 
export I_MPI_CC=icc 
export I_MPI_FC=ifort 
export I_MPI_F90=ifort 
export I_MPI_F77=ifort 

export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort
export CXX=icpc
export MPICC=mpiicc
export MPIF90=mpiifort

export MPI_ROOT=/p/home/apps/intel/parallel_studio_2015_u2/impi/5.0.3.048
export CFLAGS="-O2 -openmp"
export CXXFLAGS="-O2 -openmp"
export FFLAGS="-O2 -openmp -I${MPI_ROOT}/include64 -I${MKLROOT}/include"
export F90FLAGS="-O2 -openmp -I${MPI_ROOT}/include64 -I${MKLROOT}/include"
export FCFLAGS="-O2 -openmp -I${MPI_ROOT}/include64 -I${MKLROOT}/include"
export CPPFLAGS="-I${MPI_ROOT}/include64 -I${MKLROOT}/include"
export LDFLAGS="-L${MPI_ROOT}/lib64 -L${MKLROOT}/lib/intel64 -openmp"
export LIBS="-lmpi -Wl,--start-group -lmkl_scalapack_lp64 -lmkl_blacs_lp64 -lmkl_blacs_intelmpi_lp64 -lmkl_lapack95_lp64 -lmkl_intel_lp64  -lmkl_sequential -lmkl_core -Wl,--end-group"
export BLAS_LIBS="-lmkl_intel_lp64  -lmkl_sequential -lmkl_core"
export SCALAPACK_LIBS="-Wl,--start-group -lmkl_scalapack_lp64 -lmkl_blacs_lp64 -lmkl_blacs_intelmpi_lp64 -lmkl_lapack95_lp64 -lmkl_intel_lp64  -lmkl_sequential -lmkl_core -Wl,--end-group"

./configure --prefix=$PREFIX --enable-parallel --enable-openmp --with-scalapack=intel  --enable-shared

# --enable-static is not an option

Note, large configure in install/configure and if there are
configure errors, they are written to install/config.log .

Can check some configure results in  make.sys .

make all 2>&1 | tee make.log

cp -R . $PREFIX

 ================== Intel Compiler, Intel MPI, above ==================


spirit has

total 112
drwx------  6 espresso espresso  4096 Mar 21  2013 Doc
drwx------  3 espresso espresso  4096 Mar 18  2013 bin
drwx------ 21 espresso espresso  4096 Apr  7 09:27 build
drwxr-xr-x  5 espresso espresso  4096 May 27  2011 examples
drwx------  3 espresso espresso  4096 Jul 15 12:35 intel
drwxr-xr-x  4 espresso espresso  4096 May 13  2011 modulefiles
drwxr-xr-x 16 espresso espresso  4096 Jul 15 13:35 platforms
drwxr-xr-x  2 espresso espresso 77824 Jan 13  2015 pseudo
drwx------ 10 espresso espresso  4096 Apr  7 09:26 src

kajihasa:x:1080:1080:Scott A. Kajihara:/home/kajihasa:/bin/ksh
kajihasa.ctr@afrl.hpc.mil

Dear Scott Kajihara,
   I have built Quantum Espresso on the new machine topaz,
here at ERDC.  Could you give me advice concerning the
installation procedure?  The "make install" command just
copies the executables into "prefix".  At some sites,
the entire built source is copied in order to make
available the documentation, module files, examples,
and data such as that in pseudo directory.  The machine
lightning has a more refined installation, i.e. not
everything is copied and what is copied is put into
certain directories such as Doc, examples, modulefiles,
pseudo.  Do you have an installation procedure or a
script that you could send me for espresso?
Regards,


lightning
scheinin@lightning12:~> ls -l /app/espresso/
total 116
drwxrwxr-x  6 kajihasa wpappmgr  4096 Mar 21  2013 Doc
drwxrw---- 20 kajihasa wpappmgr  4096 Apr  8 11:37 build
drwxrwxr-x  5 kajihasa wpappmgr  4096 May 27  2011 examples
drwxrwxr-x  4 kajihasa wpappmgr  4096 May 13  2011 modulefiles
drwxrwxr-x 13 kajihasa wpappmgr  4096 Apr  8 14:54 platforms
drwxrwxr-x  2 kajihasa wpappmgr 90112 Jan 13  2015 pseudo
drwxrw---- 10 kajihasa wpappmgr  4096 Apr  8 11:36 src




export PREFIX=/p/home/apps/unsupported/espresso/5.2.0-gcc49-sgimpt
mkdir $PREFIX
cd /p/home/scheinin/build/espresso-gcc49-sgimpt/src/espresso-5.2.0


export GCC_PATH=/apps/unsupported/gcc/4.9.2

# Need to add compilers to PATH.
export PATH=${GCC_PATH}/bin:$PATH

# Need to add shared libraries to LD_LIBRARY_PATH.
export LD_LIBRARY_PATH=${GCC_PATH}/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpc/1.0.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpfr/3.1.2/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/gmp/6.0.0a/lib:$LD_LIBRARY_PATH

export CXX=${GCC_PATH}/bin/g++
export CC=${GCC_PATH}/bin/gcc
export FC=${GCC_PATH}/bin/gfortran
export F77=${GCC_PATH}/bin/gfortran
export F90=${GCC_PATH}/bin/gfortran
export CFLAGS="-fPIC"
export CXXFLAGS="-fPIC"

./configure --prefix=$PREFIX


 ------------

Adjust permissions.

topdir=$PREFIX
cd $topdir
# Look carefully at what is actual current directory before
# making changes of permission.
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

