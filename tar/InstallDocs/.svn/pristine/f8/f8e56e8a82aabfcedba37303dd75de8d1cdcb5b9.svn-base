
http://www.vtk.org/VTK/resources/software.html

Intel below.
Fri Feb 28 13:59:11 CST 2014

Command "make" includes running built software, which is dynamic
and needs ALPS library.

qsub -l select=1:ncpus=32:mpiprocs=32,walltime=4:00:00 -A ERDCS97290STA -q standard -I

module swap PrgEnv-pgi/4.1.40 PrgEnv-intel
module list
PrgEnv-intel/4.1.40
intel/13.1.2.183

export PATH=/usr/local/usp/PETtools/CE/pkgs/cmake-2.8.11.2/bin:$PATH

export CC=cc
export CXX=CC
# For Intel compiler, need the following
export LDFLAGS='-dynamic'

mkdir /usr/local/usp/VTK/6.1.0-intel/src/build_vtk-intel
cd build_vtk-intel

ccmake ../VTK-6.1.0
c

edit CMakeCache.txt
CMAKE_INSTALL_PREFIX:PATH=/usr/local/usp/VTK/6.1.0-intel
CMAKE_EXE_LINKER_FLAGS:STRING=' -dynamic '
CMAKE_MODULE_LINKER_FLAGS:STRING=' -dynamic '
CMAKE_SHARED_LINKER_FLAGS:STRING=' -dynamic '
X11_ICE_LIB:FILEPATH=/usr/lib64/libICE.so
X11_SM_LIB:FILEPATH=/usr/lib64/libSM.so
X11_X11_LIB:FILEPATH=/usr/lib64/libX11.so
X11_XRes_LIB:FILEPATH=/usr/lib64/libXRes.so
X11_Xau_LIB:FILEPATH=/usr/lib64/libXau.so
X11_Xcomposite_LIB:FILEPATH=/usr/lib64/libXcomposite.so
X11_Xcursor_LIB:FILEPATH=/usr/lib64/libXcursor.so
X11_Xdamage_LIB:FILEPATH=/usr/lib64/libXdamage.so
X11_Xdmcp_LIB:FILEPATH=/usr/lib64/libXdmcp.so
X11_Xext_LIB:FILEPATH=/usr/lib64/libXext.so
X11_Xfixes_LIB:FILEPATH=/usr/lib64/libXfixes.so
X11_Xft_LIB:FILEPATH=/usr/lib64/libXft.so
X11_Xi_LIB:FILEPATH=/usr/lib64/libXi.so
X11_Xinerama_LIB:FILEPATH=/usr/lib64/libXinerama.so
X11_Xmu_LIB:FILEPATH=/usr/lib64/libXmu.so
X11_Xpm_LIB:FILEPATH=/usr/lib64/libXpm.so
X11_Xrandr_LIB:FILEPATH=/usr/lib64/libXrandr.so
X11_Xrender_LIB:FILEPATH=/usr/lib64/libXrender.so
X11_Xt_LIB:FILEPATH=/usr/lib64/libXt.so
X11_Xv_LIB:FILEPATH=/usr/lib64/libXv.so
X11_Xxf86misc_LIB:FILEPATH=/usr/lib64/libXxf86misc.so
X11_Xxf86vm_LIB:FILEPATH=/usr/lib64/libXxf86vm.so
OPENGL_gl_LIBRARY:FILEPATH=/usr/lib64/libGL.so
vtkftgl_LIB_DEPENDS:STATIC=general;/usr/lib64/libGL.so;general;vtkfreetype;
vtkgl2ps_LIB_DEPENDS:STATIC=general;/usr/lib64/libGLU.so;general;
FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/usr/lib64/libGL.so][v()]

make sure there are no paths that have /usr/lib/ because
should use /usr/lib64/

ccmake ../VTK-6.1.0
c
g

In file
./Common/Core/vtkConfigure.h
change from
# define VTK_SIZEOF_VOID_P
to
# define VTK_SIZEOF_VOID_P 8

This is an error in cmake, specifically,
CMAKE_SIZEOF_VOID_P not given a value.
Also results in cmake not looking in /usr/lib64 first.
Try command shown below to see information about the variable.
cmake --help-variable CMAKE_SIZEOF_VOID_P

make
make install

building static VTK below

cd /usr/local/usp/VTK/6.1.0-intel/src
mkdir build_vtk_static-intel
cp vtk-intel-CMakeCache.txt vtk-intel-static-CMakeCache.txt

vi vtk-intel-static-CMakeCache.txt

//Build Shared Libraries
BUILD_SHARED_LIBS:BOOL=OFF

ALGLIB_SHARED_LIB:INTERNAL=OFF

//Value Computed by CMake
DICOMParser_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/Utilities/DICOMParser
//Value Computed by CMake
HDF5_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/hdf5/vtkhdf5
//Value Computed by CMake
HDF5_HL_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/hdf5/vtkhdf5/hl
//Value Computed by CMake
HDF5_HL_SRC_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/hdf5/vtkhdf5/hl/src
//Value Computed by CMake
HDF5_SRC_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/hdf5/vtkhdf5/src
//Value Computed by CMake
JsonCpp_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/jsoncpp/vtkjsoncpp
//Value Computed by CMake
VTKEXPAT_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/expat/vtkexpat
//Value Computed by CMake
VTKFREETYPE_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/freetype/vtkfreetype
//Value Computed by CMake
VTKFTGL_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/ftgl
//Value Computed by CMake
VTKGL2PS_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/gl2ps/vtkgl2ps
//Value Computed by CMake
VTKJPEG_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/jpeg/vtkjpeg
//Value Computed by CMake
VTKNETCDF_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/netcdf/vtknetcdf
//Value Computed by CMake
VTKOGGTHEORA_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/oggtheora/vtkoggtheora
//Value Computed by CMake
VTKPNG_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/png/vtkpng
//Value Computed by CMake
VTKSQLite_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/sqlite/vtksqlite
//Value Computed by CMake
VTKTIFF_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/tiff/vtktiff
//Value Computed by CMake
VTKZLIB_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/zlib/vtkzlib
//Value Computed by CMake
VTK_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel
//Value Computed by CMake
alglib_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/alglib
//Value Computed by CMake
libproj4_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/libproj4/vtklibproj4
//Value Computed by CMake
netcdf_cxx_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/netcdf/vtknetcdf/cxx
//Value Computed by CMake
netcdf_libdispatch_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/netcdf/vtknetcdf/libdispatch
//Value Computed by CMake
netcdf_liblib_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/netcdf/vtknetcdf/liblib
//Value Computed by CMake
netcdf_libsrc4_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/netcdf/vtknetcdf/libsrc4
//Value Computed by CMake
netcdf_libsrc_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/netcdf/vtknetcdf/libsrc
//Value Computed by CMake
verdict_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/verdict/vtkverdict
//Value Computed by CMake
vtkExodus2_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/exodusII/vtkexodusII
//Value Computed by CMake
vtklibxml2_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/ThirdParty/libxml2/vtklibxml2
//Value Computed by CMake
vtkmetaio_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/Utilities/MetaIO/vtkmetaio
//Value Computed by CMake
vtksys_BINARY_DIR:STATIC=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel/Utilities/KWSys/vtksys
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/usr/local/usp/VTK/6.1.0-intel/src/build_vtk_static-intel

cp vtk-intel-static-CMakeCache.txt build_vtk_static-intel/CMakeCache.txt

qsub -l select=1:ncpus=32:mpiprocs=32,walltime=4:00:00 -A ERDCS97290STA -q standard -I

module swap PrgEnv-pgi/4.1.40 PrgEnv-intel
module list
PrgEnv-intel/4.1.40
intel/13.1.2.183

export PATH=/usr/local/usp/PETtools/CE/pkgs/cmake-2.8.11.2/bin:$PATH

export CC=cc
export CXX=CC
# For Intel compiler, need the following
export LDFLAGS='-dynamic'

cd build_vtk_static-intel

ccmake ../VTK-6.1.0
c

diff ../vtk-intel-static-CMakeCache.txt ./CMakeCache.txt
# Only difference is a comment.

ccmake ../VTK-6.1.0
c
g

In file
./Common/Core/vtkConfigure.h
change from
# define VTK_SIZEOF_VOID_P
to
# define VTK_SIZEOF_VOID_P 8

make

cp  lib/lib*.a  ../../lib/
chmod g+rw,o+r  ../../lib/lib*.a

no make install

building static VTK above

Put in README:
Directory VTK/6.1.0-intel has been compiled
for the compute nodes, not for login nodes,
using cc and CC.
Utilizes dynamically loaded libraries.
When running a job, the user will need to add
/usr/local/usp/VTK/6.1.0-intel/lib to the LD_LIBRARY_PATH .
export LD_LIBRARY_PATH=/usr/local/usp/VTK/6.1.0-intel/lib:$LD_LIBRARY_PATH
setenv LD_LIBRARY_PATH /usr/local/usp/VTK/6.1.0-intel/lib:$LD_LIBRARY_PATH

topdir=/usr/local/usp/VTK
cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

# In each src/ directory
chmod -R o-rwx *

Save most recent version of this file under src.

Intel above.

PGI below.
Mon Mar  3 16:06:30 CST 2014

Command "make" includes running built software, which is dynamic
and needs ALPS library.

qsub -l select=1:ncpus=32:mpiprocs=32,walltime=4:00:00 -A ERDCS97290STA -q standard -I

module list
PrgEnv-pgi/4.1.40
pgi/13.6.0

export PATH=/usr/local/usp/PETtools/CE/pkgs/cmake-2.8.11.2/bin:$PATH

export CC=cc
export CXX=CC
export LDFLAGS='-dynamic'

mkdir /usr/local/usp/VTK/6.1.0-intel/src/build_vtk-pgi
cd build_vtk-pgi

ccmake ../VTK-6.1.0
c

PGI does not require "dynamic" and correctly chooses /usr/lib64/
directory and sets correctly
./Common/Core/vtkConfigure.h
# define VTK_SIZEOF_VOID_P 8

edit CMakeCache.txt
CMAKE_INSTALL_PREFIX:PATH=/usr/local/usp/VTK/6.1.0-pgi
CMAKE_EXE_LINKER_FLAGS:STRING=' -dynamic '
CMAKE_MODULE_LINKER_FLAGS:STRING=' -dynamic '
CMAKE_SHARED_LINKER_FLAGS:STRING=' -dynamic '

ccmake ../VTK-6.1.0
c
g

make
make install

topdir=/usr/local/usp/VTK
cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

# In each src/ directory
chmod -R o-rwx *

Save most recent version of this file under src.

PGI above.



