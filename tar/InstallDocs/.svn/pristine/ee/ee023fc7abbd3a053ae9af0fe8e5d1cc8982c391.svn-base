
Download from
https://wci.llnl.gov/simulation/computer-codes/silo/downloads

# When machine first became available,
# TMPDIR and WORKDIR were not defined.
# In that case,
export WORKDIR=/p/work1/scheinin
export TMPDIR=$WORKDIR/tmp
mkdir $TMPDIR

# As of June 3, readline-devel was installed.
# The version of readline built by hand is different from the RPM.

===============================================================
 January 8, 2017 , topaz , below

export SILO_VERSION=4.10.2
export HDF5_VERSION=1.8.18
export SZIP_VERSION=2.1
export READLINE_VERSION=6.3
export INTEL_VERSION=17.0.1
export GNU_VERSION=6.1.0

 --- Intel below. ---
export PATH=/apps/gnu_compiler/6.1.0/bin:$PATH
module unload compiler/intel/15.0.3
module load compiler/intel/17.0.1

export COMPILER_VERSION=$INTEL_VERSION
export COMPILER_TYPE=intel

export SZIP_DIR=/apps/unsupported/szip/${SZIP_VERSION}-${COMPILER_TYPE}-${COMPILER_VERSION}
export HDF5_DIR=/apps/unsupported/hdf5/${HDF5_VERSION}-${COMPILER_TYPE}-${COMPILER_VERSION}
export READLINE_DIR=/apps/unsupported/readline/${READLINE_VERSION}-${COMPILER_TYPE}-${COMPILER_VERSION}

export PREFIX=/apps/unsupported/silo/${SILO_VERSION}-${COMPILER_TYPE}-${COMPILER_VERSION}
export BUILD_DIR=/p/home/scheinin/build/silo/${SILO_VERSION}-${COMPILER_TYPE}-${COMPILER_VERSION}

# Check
echo $PREFIX ; echo $BUILD_DIR

mkdir $PREFIX
mkdir $BUILD_DIR
cd $BUILD_DIR

export CXX=icpc
export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort
export CFLAGS="-O2 -fPIC -gcc-name=`which gcc`"
export CXXFLAGS="-O2 -fPIC -gxx-name=`which g++`"
export LDFLAGS_ALSO="-O2 -gcc-name=`which gcc` -gxx-name=`which g++`"

export LD_LIBRARY_PATH=${READLINE_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${SZIP_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${HDF5_DIR}/lib:$LD_LIBRARY_PATH

export PATH=${HDF5_DIR}/bin:$PATH

export CPPFLAGS="-I${READLINE_DIR}/include -I${SZIP_DIR}/include -I${HDF5_DIR}/include"

export LDFLAGS="${LDFLAGS_ALSO} -L${READLINE_DIR}/lib -L${SZIP_DIR}/lib -L${HDF5_DIR}/lib"

export LIBS="-lsz -lhdf5 -lhdf5_hl -lhdf5 -lhdf5_fortran -lhdf5hl_fortran -lreadline -lncurses"

./configure --prefix=$PREFIX \
  --with-readline \
  --with-szlib=${SZIP_DIR} \
  --with-hdf5=${HDF5_DIR}/include,${HDF5_DIR}/lib \
  --enable-fortran \
  --enable-shared --enable-static

make 2>&1 | tee make.log
cd tests
# See notes lower down about changing Makefile
make check 2>&1 | tee check.log

cd ..
make install

Fix permissions.

 --- Intel above. ---
 --- Gnu below. ---
module unload compiler/intel/15.0.3
module load compiler/gcc/6.1.0

export COMPILER_VERSION=$GNU_VERSION
export COMPILER_TYPE=gcc

export SZIP_DIR=/apps/unsupported/szip/${SZIP_VERSION}-${COMPILER_TYPE}-${COMPILER_VERSION}
export HDF5_DIR=/apps/unsupported/hdf5/${HDF5_VERSION}-${COMPILER_TYPE}-${COMPILER_VERSION}
export READLINE_DIR=/apps/unsupported/readline/${READLINE_VERSION}-${COMPILER_TYPE}-${COMPILER_VERSION}

export PREFIX=/apps/unsupported/silo/${SILO_VERSION}-${COMPILER_TYPE}-${COMPILER_VERSION}
export BUILD_DIR=/p/home/scheinin/build/silo/${SILO_VERSION}-${COMPILER_TYPE}-${COMPILER_VERSION}

# Check
echo $PREFIX ; echo $BUILD_DIR

mkdir $PREFIX
mkdir $BUILD_DIR
cd $BUILD_DIR

export CXX=g++
export CC=gcc
export FC=gfortran
export F77=gfortran
export F90=gfortran
export CFLAGS="-O2 -fPIC"
export CXXFLAGS="-O2 -fPIC"
export LDFLAGS_ALSO="-O2"

export LD_LIBRARY_PATH=${READLINE_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${SZIP_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${HDF5_DIR}/lib:$LD_LIBRARY_PATH

export PATH=${HDF5_DIR}/bin:$PATH

export CPPFLAGS="-I${READLINE_DIR}/include -I${SZIP_DIR}/include -I${HDF5_DIR}/include"

export LDFLAGS="${LDFLAGS_ALSO} -L${READLINE_DIR}/lib -L${SZIP_DIR}/lib -L${HDF5_DIR}/lib"

export LIBS="-lsz -lhdf5 -lhdf5_hl -lhdf5 -lhdf5_fortran -lhdf5hl_fortran -lreadline -lncurses"

./configure --prefix=$PREFIX \
  --with-readline \
  --with-szlib=${SZIP_DIR} \
  --with-hdf5=${HDF5_DIR}/include,${HDF5_DIR}/lib \
  --enable-fortran \
  --enable-shared --enable-static

make 2>&1 | tee make.log
cd tests
# See notes lower down about changing Makefile
make check 2>&1 | tee check.log

cd ..
make install

Fix permissions.

 --- Gnu above. ---

Two different notes on changing the Makefile, from past builds.

# Change tests/Makefile .
#  mk_nasf_h5 needs to be linked with g++
Change from
mk_nasf_h5$(EXEEXT): $(mk_nasf_h5_OBJECTS) $(mk_nasf_h5_DEPENDENCIES)
        @rm -f mk_nasf_h5$(EXEEXT)
        $(LINK) $(mk_nasf_h5_OBJECTS) $(mk_nasf_h5_LDADD) $(LIBS)
Change to
mk_nasf_h5$(EXEEXT): $(mk_nasf_h5_OBJECTS) $(mk_nasf_h5_DEPENDENCIES)
        @rm -f mk_nasf_h5$(EXEEXT)
        $(CXXLINK) $(mk_nasf_h5_OBJECTS) $(mk_nasf_h5_LDADD) $(LIBS)

# Change CXXLINK in tests/Makefile , otherwise,
# testing fails because tries to link Fortran using icpc
arrayf77$(EXEEXT): $(arrayf77_OBJECTS) $(arrayf77_DEPENDENCIES)
        $(CXXLINK) $(arrayf77_OBJECTS) $(arrayf77_LDADD) $(LIBS)
arrayf90$(EXEEXT): $(arrayf90_OBJECTS) $(arrayf90_DEPENDENCIES)
        $(CXXLINK) $(arrayf90_OBJECTS) $(arrayf90_LDADD) $(LIBS)
to F77LINK or FCLINK (for F90)
Do also for curvef77, matf77, pointf77, quadf77, ucdf77,
testallf77 and csgmesh.

check_PROGRAMS =
        rocket$(EXEEXT) mmadjacency$(EXEEXT) largefile$(EXEEXT) \
remove rocket$(EXEEXT)
PROGS = 
        rocket mmadjacency largefile version namescheme efcentering \
remove rocket
 because there was a compilation error

topdir=$PREFIX
cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

 January 8, 2017 , topaz , above
===============================================================


 --- Intel below. ---

export PREFIX=/apps/unsupported/silo/4.10.2-intel
mkdir $PREFIX
cd /p/home/scheinin/build/silo/src
wget https://wci.llnl.gov/content/assets/docs/simulation/computer-codes/silo/silo-4.10.2/silo-4.10.2.tar.gz

export LD_LIBRARY_PATH=/app/unsupported/readline/6.3-intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/app/unsupported/szip/2.1-intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/app/unsupported/hdf5/1.8.15-intel/lib:$LD_LIBRARY_PATH

export PATH=/app/unsupported/hdf5/1.8.15-intel/bin:$PATH

export CPPFLAGS="-I/app/unsupported/readline/6.3-intel/include -I/app/unsupported/szip/2.1-intel/include -I/app/unsupported/hdf5/1.8.15-intel/include"

export LDFLAGS="-L/app/unsupported/readline/6.3-intel/lib -L/app/unsupported/szip/2.1-intel/lib -L/app/unsupported/hdf5/1.8.15-intel/lib"

export LIBS="-lsz -lhdf5 -lhdf5_hl -lhdf5 -lhdf5_fortran -lhdf5hl_fortran"

export CXX=icpc
export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort

./configure --prefix=$PREFIX \
  --with-readline \
  --with-szlib=/app/unsupported/szip/2.1-intel \
  --with-hdf5=/app/unsupported/hdf5/1.8.15-intel/include,/app/unsupported/hdf5/1.8.15-intel/lib \
  --with-qt \
  --enable-fortran \
  --enable-shared --enable-static


make 2>&1 | tee make.log
cd tests
make check 2>&1 | tee check.log

# Change CXXLINK in tests/Makefile , otherwise,
# testing fails because tries to link Fortran using icpc
arrayf77$(EXEEXT): $(arrayf77_OBJECTS) $(arrayf77_DEPENDENCIES)
        $(CXXLINK) $(arrayf77_OBJECTS) $(arrayf77_LDADD) $(LIBS)
arrayf90$(EXEEXT): $(arrayf90_OBJECTS) $(arrayf90_DEPENDENCIES)
        $(CXXLINK) $(arrayf90_OBJECTS) $(arrayf90_LDADD) $(LIBS)
to F77LINK or FCLINK (for F90)

cd ..
make install
 -------------------------------------------------------------
Compiler Intel 15.0.2 below

export PREFIX=/apps/unsupported/silo/4.10.2-intel-15.0.2
mkdir $PREFIX
cd /p/home/scheinin/build/silo/src-intel-15.0.2
wget https://wci.llnl.gov/content/assets/docs/simulation/computer-codes/silo/silo-4.10.2/silo-4.10.2.tar.gz

export LD_LIBRARY_PATH=/p/home/apps/unsupported/szip/2.1-intel-15.0.2/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/hdf5/1.8.15-intel-15.0.2/lib:$LD_LIBRARY_PATH
export PATH=/p/home/apps/unsupported/hdf5/1.8.15-intel-15.0.2/bin:$PATH

export CPPFLAGS="-I/app/unsupported/szip/2.1-intel-15.0.2/include -I/app/unsupported/hdf5/1.8.15-intel-15.0.2/include"

export LDFLAGS="-L/app/unsupported/szip/2.1-intel-15.0.2/lib -L/app/unsupported/hdf5/1.8.15-intel-15.0.2/lib"

export LIBS="-lsz -lhdf5 -lhdf5_hl -lhdf5 -lhdf5_fortran -lhdf5hl_fortran"

export CXX=icpc
export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort

./configure --prefix=$PREFIX \
  --with-readline \
  --with-szlib=/app/unsupported/szip/2.1-intel-15.0.2 \
  --with-hdf5=/app/unsupported/hdf5/1.8.15-intel-15.0.2/include,/app/unsupported/hdf5/1.8.15-intel-15.0.2/lib \
  --with-qt \
  --enable-fortran \
  --enable-shared --enable-static


make 2>&1 | tee make.log
cd tests

# Change CXXLINK in tests/Makefile , otherwise,
# testing fails because tries to link Fortran using icpc
arrayf77$(EXEEXT): $(arrayf77_OBJECTS) $(arrayf77_DEPENDENCIES)
        $(CXXLINK) $(arrayf77_OBJECTS) $(arrayf77_LDADD) $(LIBS)
arrayf90$(EXEEXT): $(arrayf90_OBJECTS) $(arrayf90_DEPENDENCIES)
        $(CXXLINK) $(arrayf90_OBJECTS) $(arrayf90_LDADD) $(LIBS)
csgmesh$(EXEEXT): $(csgmesh_OBJECTS) $(csgmesh_DEPENDENCIES)
        $(CXXLINK) $(csgmesh_OBJECTS) $(csgmesh_LDADD) $(LIBS)
curvef77$(EXEEXT): $(curvef77_OBJECTS) $(curvef77_DEPENDENCIES)
        $(CXXLINK) $(curvef77_OBJECTS) $(curvef77_LDADD) $(LIBS)
matf77$(EXEEXT): $(matf77_OBJECTS) $(matf77_DEPENDENCIES)
        $(CXXLINK) $(matf77_OBJECTS) $(matf77_LDADD) $(LIBS)
pointf77$(EXEEXT): $(pointf77_OBJECTS) $(pointf77_DEPENDENCIES)
        $(CXXLINK) $(pointf77_OBJECTS) $(pointf77_LDADD) $(LIBS)
quadf77$(EXEEXT): $(quadf77_OBJECTS) $(quadf77_DEPENDENCIES)
        $(CXXLINK) $(quadf77_OBJECTS) $(quadf77_LDADD) $(LIBS)
ucdf77$(EXEEXT): $(ucdf77_OBJECTS) $(ucdf77_DEPENDENCIES)
        $(CXXLINK) $(ucdf77_OBJECTS) $(ucdf77_LDADD) $(LIBS)
testallf77$(EXEEXT): $(testallf77_OBJECTS) $(testallf77_DEPENDENCIES)
        $(CXXLINK) $(testallf77_OBJECTS) $(testallf77_LDADD) $(LIBS)
to F77LINK or FCLINK (for F90)


make check 2>&1 | tee check.log
cd ..
make install

Compiler Intel 15.0.2 above
 -------------------------------------------------------------
Compiler Intel 15.0.3 below

export PREFIX=/apps/unsupported/silo/4.10.2-intel-15.0.3
mkdir $PREFIX
cd /p/home/scheinin/build/silo/src-intel-15.0.3
wget https://wci.llnl.gov/content/assets/docs/simulation/computer-codes/silo/silo-4.10.2/silo-4.10.2.tar.gz

export LD_LIBRARY_PATH=/p/home/apps/unsupported/szip/2.1-intel-15.0.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/hdf5/1.8.15-intel-15.0.3/lib:$LD_LIBRARY_PATH
export PATH=/p/home/apps/unsupported/hdf5/1.8.15-intel-15.0.3/bin:$PATH

export CPPFLAGS="-I/app/unsupported/szip/2.1-intel-15.0.3/include -I/app/unsupported/hdf5/1.8.15-intel-15.0.3/include"

export LDFLAGS="-L/app/unsupported/szip/2.1-intel-15.0.3/lib -L/app/unsupported/hdf5/1.8.15-intel-15.0.3/lib"

export LIBS="-lsz -lhdf5 -lhdf5_hl -lhdf5 -lhdf5_fortran -lhdf5hl_fortran"

export CXX=icpc
export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort

./configure --prefix=$PREFIX \
  --with-readline \
  --with-szlib=/app/unsupported/szip/2.1-intel-15.0.3 \
  --with-hdf5=/app/unsupported/hdf5/1.8.15-intel-15.0.3/include,/app/unsupported/hdf5/1.8.15-intel-15.0.3/lib \
  --with-qt \
  --enable-fortran \
  --enable-shared --enable-static


make 2>&1 | tee make.log
cd tests

# Change CXXLINK in tests/Makefile , otherwise,
# testing fails because tries to link Fortran using icpc
arrayf77$(EXEEXT): $(arrayf77_OBJECTS) $(arrayf77_DEPENDENCIES)
        $(CXXLINK) $(arrayf77_OBJECTS) $(arrayf77_LDADD) $(LIBS)
arrayf90$(EXEEXT): $(arrayf90_OBJECTS) $(arrayf90_DEPENDENCIES)
        $(CXXLINK) $(arrayf90_OBJECTS) $(arrayf90_LDADD) $(LIBS)
to F77LINK or FCLINK (for F90)

make check 2>&1 | tee check.log
cd ..
make install

Compiler Intel 15.0.3 above
 -------------------------------------------------------------
Compiler Intel 16.0.0 below

export PREFIX=/apps/unsupported/silo/4.10.2-intel-16.0.0
mkdir $PREFIX
cd /p/home/scheinin/build/silo/src-intel-16.0.0
wget https://wci.llnl.gov/content/assets/docs/simulation/computer-codes/silo/silo-4.10.2/silo-4.10.2.tar.gz

export LD_LIBRARY_PATH=/p/home/apps/unsupported/szip/2.1-intel-16.0.0/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/hdf5/1.8.15-intel-16.0.0/lib:$LD_LIBRARY_PATH
export PATH=/p/home/apps/unsupported/hdf5/1.8.15-intel-16.0.0/bin:$PATH

export CPPFLAGS="-I/app/unsupported/szip/2.1-intel-16.0.0/include -I/app/unsupported/hdf5/1.8.15-intel-16.0.0/include"

export LDFLAGS="-L/app/unsupported/szip/2.1-intel-16.0.0/lib -L/app/unsupported/hdf5/1.8.15-intel-16.0.0/lib"

export LIBS="-lsz -lhdf5 -lhdf5_hl -lhdf5 -lhdf5_fortran -lhdf5hl_fortran"

export CXX=icpc
export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort

./configure --prefix=$PREFIX \
  --with-readline \
  --with-szlib=/app/unsupported/szip/2.1-intel-16.0.0 \
  --with-hdf5=/app/unsupported/hdf5/1.8.15-intel-16.0.0/include,/app/unsupported/hdf5/1.8.15-intel-16.0.0/lib \
  --with-qt \
  --enable-fortran \
  --enable-shared --enable-static


make 2>&1 | tee make.log
cd tests

make check 2>&1 | tee check.log
cd ..
make install

Compiler Intel 16.0.0 above

 --- Intel above. ---
 --- GNU below. ---

    --- native GNU below

June 12, 2015

export PREFIX=/apps/unsupported/silo/4.10.2-gcc43
mkdir $PREFIX
cd /p/home/scheinin/build/silo/src-gcc43
wget https://wci.llnl.gov/content/assets/docs/simulation/computer-codes/silo/silo-4.10.2/silo-4.10.2.tar.gz

export LD_LIBRARY_PATH=/app/unsupported/readline/6.3-gcc43/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/app/unsupported/szip/2.1-gcc43/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/app/unsupported/hdf5/1.8.15-gcc43/lib:$LD_LIBRARY_PATH

export PATH=/app/unsupported/hdf5/1.8.15-gcc43/bin:$PATH

export CPPFLAGS="-I/app/unsupported/readline/6.3-gcc43/include -I/app/unsupported/szip/2.1-gcc43/include -I/app/unsupported/hdf5/1.8.15-gcc43/include"

export LDFLAGS="-L/app/unsupported/readline/6.3-gcc43/lib -L/app/unsupported/szip/2.1-gcc43/lib -L/app/unsupported/hdf5/1.8.15-gcc43/lib"

# GCC 4.3 was not able to compiler the Fortran libraries of HDF5.

export LIBS="-lsz -lhdf5 -lhdf5_hl -lhdf5"

export CXX=g++
export CXXFLAGS="-O2"
export CC=gcc
export CFLAGS="-O2"
export CPPFLAGS=""
export LIBS=""
export LDFLAGS=""
export FC=gfortran
export F77=gfortran
export F90=gfortran

./configure --prefix=$PREFIX \
  --with-readline \
  --with-szlib=/app/unsupported/szip/2.1-gcc43 \
  --with-hdf5=/app/unsupported/hdf5/1.8.15-gcc43/include,/app/unsupported/hdf5/1.8.15-gcc43/lib \
  --with-qt \
  --disable-fortran \
  --enable-shared --enable-static

make 2>&1 | tee make.log
cd tests

# Change tests/Makefile .
#  mk_nasf_h5 needs to be linked with g++
Change from
mk_nasf_h5$(EXEEXT): $(mk_nasf_h5_OBJECTS) $(mk_nasf_h5_DEPENDENCIES)
        @rm -f mk_nasf_h5$(EXEEXT)
        $(LINK) $(mk_nasf_h5_OBJECTS) $(mk_nasf_h5_LDADD) $(LIBS)
Change to
mk_nasf_h5$(EXEEXT): $(mk_nasf_h5_OBJECTS) $(mk_nasf_h5_DEPENDENCIES)
        @rm -f mk_nasf_h5$(EXEEXT)
        $(CXXLINK) $(mk_nasf_h5_OBJECTS) $(mk_nasf_h5_LDADD) $(LIBS)

make check 2>&1 | tee check.log

# If in tests,
cd ..
make install

# Fix permissions of installed files.

    --- native GNU above
    --- new GNU below

June 12, 2015

export PREFIX=/apps/unsupported/silo/4.10.2-gcc49
mkdir $PREFIX
cd /p/home/scheinin/build/silo/src-gcc49
wget https://wci.llnl.gov/content/assets/docs/simulation/computer-codes/silo/silo-4.10.2/silo-4.10.2.tar.gz

export LD_LIBRARY_PATH=/app/unsupported/readline/6.3-gcc49/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/app/unsupported/szip/2.1-gcc49/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/app/unsupported/hdf5/1.8.15-gcc49/lib:$LD_LIBRARY_PATH

export PATH=/app/unsupported/hdf5/1.8.15-gcc49/bin:$PATH

export CPPFLAGS="-I/app/unsupported/readline/6.3-gcc49/include -I/app/unsupported/szip/2.1-gcc49/include -I/app/unsupported/hdf5/1.8.15-gcc49/include"

export LDFLAGS="-L/app/unsupported/readline/6.3-gcc49/lib -L/app/unsupported/szip/2.1-gcc49/lib -L/app/unsupported/hdf5/1.8.15-gcc49/lib"

export LIBS="-lsz -lhdf5 -lhdf5_hl -lhdf5 -lhdf5_fortran -lhdf5hl_fortran"

# Need to add compilers to PATH.
export PATH=/apps/unsupported/gcc/4.9.2/bin:$PATH

# Need to add shared libraries to LD_LIBRARY_PATH.
export LD_LIBRARY_PATH=/apps/unsupported/gcc/4.9.2/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpc/1.0.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpfr/3.1.2/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/gmp/6.0.0a/lib:$LD_LIBRARY_PATH

export CXX=/apps/unsupported/gcc/4.9.2/bin/g++
export CXXFLAGS="-O2"
export CC=/apps/unsupported/gcc/4.9.2/bin/gcc
export CFLAGS="-O2"
export FC=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F77=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F90=/apps/unsupported/gcc/4.9.2/bin/gfortran
export LIBS=""
export LDFLAGS=""

./configure --prefix=$PREFIX \
  --with-readline \
  --with-szlib=/app/unsupported/szip/2.1-gcc49 \
  --with-hdf5=/app/unsupported/hdf5/1.8.15-gcc49/include,/app/unsupported/hdf5/1.8.15-gcc49/lib \
  --with-qt \
  --enable-fortran \
  --enable-shared --enable-static

make 2>&1 | tee make.log
cd tests
make check 2>&1 | tee check.log

# If in tests,
cd ..
make install

# Fix permissions of installed files.

    --- new GNU above

 --- GNU above. ---

# Note, there is more than one PREFIX .

topdir=$PREFIX
cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *
