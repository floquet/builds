
utility server, below

export PATH=/app/Qt/4.6.2/bin:$PATH
export LD_LIBRARY_PATH=/app/Qt/4.6.2/lib:$LD_LIBRARY_PATH

./configure --prefix=/app/cmake/2.8.3 \
 --qt-gui --qt-qmake=/app/Qt/4.6.2/bin/qmake

make
make test
make install

# Change permissions

topdir=/app/cmake

cd $topdir
chmod ugo+xr $topdir
chown cots.staff $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *
# In each src/ directory
chmod -R o-rwx *
cd $topdir
chown -R cots.staff *

# Make sure last minute changes such as the README file are readable.

utility server, above

diamond below

Thu Sep 12 10:18:34 CDT 2013
wget http://www.cmake.org/files/v2.8/cmake-2.8.11.2.tar.gz

cd /usr/local/usp/cmake/2.8.11.2-intel/src/cmake-2.8.11.2
export CC=icc
export CXX=icpc

bootstrap --prefix=/usr/local/usp/cmake/2.8.11.2-intel
make
make test
make install


topdir=/usr/local/usp/cmake
cd $topdir
chmod ugo+xr $topdir
chown cots.staff $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *
# In each src/ directory
chmod -R o-rwx *
cd $topdir
chown -R cots.staff *

diamond above
=====================================================================
phoenix02 below

Tue Apr 14 13:06:34 CDT 2015

# For testing build procedure, do it in my $HOME hierarchy.
export PREFIX=/home/scheinin/apps/cmake/3.2.2/intel

mkdir -p ${PREFIX}/src

cd ${PREFIX}/src

wget http://www.cmake.org/files/v3.2/cmake-3.2.2.tar.gz

tar xzf cmake-3.2.2.tar.gz
cd cmake-3.2.2

# cmake needs to be built for each compiler, at least that
# was the case on a Cray, because it is a dynamic executable
# that uses shared libraries.  The LD_LIBRARY_PATH may be
# different between Intel vs Gnu, moreover, the environment
# needs to be set for one or the other, depending on which
# compiler is used to build the application.

module list
Currently Loaded Modulefiles:
  1) compiler/intel/15.0.2   2) mpi/sgimpt/2.11

export CC=icc
export CXX=icpc
export FC=ifort
export CFLAGS="-fPIC"
export CXXFLAGS="-fPIC"

./configure --prefix=$PREFIX

# configure actually runs bootstrap

make 2>&1 | tee make.log
make test
make install

# Alternative, Gnu compiler suite.

export PREFIX=/home/scheinin/apps/cmake/3.2.2/gnu

module unload compiler/intel/15.0.2
module unload mpi/sgimpt/2.11
module load mpi/sgimpt/2.11
module list
Currently Loaded Modulefiles:
  1) mpi/sgimpt/2.11

export CC=gcc
export CXX=g++
export FC=gfortran
export CFLAGS="-fPIC"
export CXXFLAGS="-fPIC"

./configure --prefix=$PREFIX

# configure actually runs bootstrap

make 2>&1 | tee make.log
make test 2>&1 | tee test.log
make install

For gcc compiler, result of "make test":
99% tests passed, 1 tests failed out of 395
Total Test time (real) = 7227.13 sec
The following tests FAILED:
	126 - CPackComponentsForAll-RPM-IgnoreGroup (Failed)

# For either of two intel or gnu, change permissions.

topdir=$PREFIX
cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *
# In each src/ directory
chmod -R o-rwx *

# Make sure any last-minute files such as README and INSTALL
# are readable by others.

phoenix02 above

=====================================================================
garnet below



April 7, 2014

cmake-2.8.12.2.tar.gz

module swap PrgEnv-pgi/4.1.40 PrgEnv-gnu/4.1.40
export PREFIX=/usr/local/usp/cmake/2.8.12.2
cd /usr/local/usp/cmake/2.8.12.2/src
tar xzf cmake-2.8.12.2.tar.gz
cd cmake-2.8.12.2

export CC=gcc
export CXX=g++
# Motive for using -static is so the cmake can be use
# when compiling for a different compiler, a different PrgEnv.
export CFLAGS="-static -fPIC"
export CXXFLAGS="-static -fPIC"

./configure --prefix=$PREFIX

make

Error
Linking C shared module libcmsysTestDynload.so
/usr/bin/ld: /lustre/home1/opt/gcc/4.8.0/snos/bin/../lib/gcc/x86_64-suse-linux/4.8.0/crtbeginT.o: relocation R_X86_64_32 against `__TMC_END__' can not be used when making a shared object; recompile with -fPIC

Doing
find . -name link.txt -exec grep shared {} \; -print
/opt/gcc/4.8.0/bin/gcc  -fPIC -static -fPIC    -shared -Wl,-soname,libcmsysTestDynload.so -o libcmsysTestDynload.so CMakeFiles/cmsysTestDynload.dir/testDynload.c.o 
./Source/kwsys/CMakeFiles/cmsysTestDynload.dir/link.txt
shows that only one link.txt uses -shared

For just that one link.txt, removed "-fPIC -static" and left in
"-fPIC -shared".

make test
87% tests passed, 40 tests failed out of 315
Total Test time (real) = 6628.60 sec
The following tests FAILED:
         12 - kwsys.testDynamicLoader (SEGFAULT)
         25 - FindPackageTest (Failed)
         36 - VSGNUFortran (Failed)
         37 - COnly (Failed)
         38 - CxxOnly (Failed)
         39 - IPO (Failed)
         40 - OutDir (Failed)
         41 - ObjectLibrary (Failed)
         46 - LoadCommand (Failed)
         57 - ExportImport (Failed)
         63 - CompatibleInterface (Failed)
         64 - AliasTarget (Failed)
         67 - BundleUtilities (Failed)
         68 - CMakeBuildTest (Failed)
         72 - Module.GenerateExportHeader (Failed)
         73 - PositionIndependentTargets (Failed)
         93 - Framework (Failed)
         95 - LibName (Failed)
         96 - CustComDepend (Failed)
         99 - CustomCommand (Failed)
        102 - OutOfSource (Failed)
        103 - BuildDepends (Failed)
        104 - SimpleInstall (Failed)
        105 - SimpleInstall-Stage2 (Failed)
        120 - LoadedCommandOneConfig (Failed)
        121 - complex (Failed)
        122 - complexOneConfig (Failed)
        136 - testing (Failed)
        143 - JumpWithLibOut (Failed)
        144 - JumpNoLibOut (Failed)
        145 - Plugin (Failed)
        146 - RuntimePath (Failed)
        149 - kwsys (Failed)
        180 - CMakeCommands.target_link_libraries (Failed)
        210 - Java (Failed)
        212 - CompileCommandOutput (Failed)
        213 - IncludeDirectories (Failed)
        214 - InterfaceLinkLibraries (Failed)
        262 - RunCMake.include_directories (Failed)
        284 - CTestTestMemcheckDummyValgrindInvalidSupFile (Failed)
Errors while running CTest

make install


topdir=$PREFIX
cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

# In each src/ directory
chmod -R o-rwx *

---------------------------------------------------------------------

April 8, 2014

Compilation of dynamic executables in order to see
if the number of test errors is less.

cmake-2.8.12.2.tar.gz

module swap PrgEnv-pgi/4.1.40 PrgEnv-gnu/4.1.40
export PREFIX=/usr/local/usp/cmake/2.8.12.2-dyna-gnu
cd /usr/local/usp/cmake/2.8.12.2-dyna-gnu/src
tar xzf cmake-2.8.12.2.tar.gz
cd cmake-2.8.12.2

export CC=gcc
export CXX=g++
export CFLAGS="-fPIC"
export CXXFLAGS="-fPIC"

./configure --prefix=$PREFIX

make
make test

99% tests passed, 4 tests failed out of 315
Total Test time (real) = 2113.75 sec
The following tests FAILED:
         25 - FindPackageTest (Failed)
        210 - Java (Failed)
        262 - RunCMake.include_directories (Failed)
        284 - CTestTestMemcheckDummyValgrindInvalidSupFile (Failed)
Errors while running CTest

make install

topdir=$PREFIX

cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

# In each src/ directory
chmod -R o-rwx *

# Make sure any last-minute files such as README and INSTALL
# are readable by others.

---------------------------------------------------------------------

Test:
Static ccmake failed when running for Metis,
a failure that was not seen in original build of Metis.
 CMake Error at CMakeLists.txt:10 (ADD_EXECUTABLE):
   Cannot find source file:
     GKlib/conf/check_thread_storage.c
   Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp
   .hxx .in .txx
 CMake Error: Internal CMake error, TryCompile generation of cmake failed

---------------------------------------------------------------------

Making dynamic executable for three different compilers.

cd /usr/local/usp/cmake

mkdir 2.8.12.2-pgi (PrgEnv-pgi/4.1.40)
mkdir 2.8.12.2-gnu (PrgEnv-gnu/4.1.40
mkdir 2.8.12.2-intel (PrgEnv-intel/4.1.40)
(mkdir 2.8.12.2-cray -- failed during configure)

As appropriate
module swap PrgEnv-pgi/4.1.40 PrgEnv-[intel|gnu]

cd /usr/local/usp/cmake/2.8.12.2-[pgi|intel|gnu]
export PREFIX=`pwd`
mkdir src
cd /usr/local/usp/cmake/2.8.12.2-dyna-gnu/src
tar xzf cmake-2.8.12.2.tar.gz
cd cmake-2.8.12.2

#pgi
export CC=pgcc
export CXX=pgCC
export FC=pgf90
export CFLAGS="-fPIC"
export CXXFLAGS="-fPIC"

#gnu
export CC=gcc
export CXX=g++
export FC=gfortran
export CFLAGS="-fPIC"
export CXXFLAGS="-fPIC"

#intel
export CC=icc
export CXX=icpc
export FC=ifort
export CFLAGS="-fPIC"
export CXXFLAGS="-fPIC"

#cray
Configure failed in a variety of ways.
Using CC=craycc, could not find craycc.
Using CC=cc and CFLAGS="-dynamic", there is no
shared library libalpslli.so.0.

./configure --prefix=$PREFIX

# configure actually runs bootstrap

make 2>&1 | tee make.log
make test 2>&1 | tee check.log

make install

topdir=$PREFIX

cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

# In each src/ directory
chmod -R o-rwx *

# Make sure any last-minute files such as README and INSTALL
# are readable by others.


garnet above
=====================================================================

 cat /usr/local/modulefiles/unsupported/cmake/2.8.10.2
#%Module
##########################################################################
## modules modulefile
##
##
# note that this is read by a Tcl interpretor
#
proc ModulesHelp { } {
        global version 

        puts stderr "\tcmake - loads cmake into the path\n"
        puts stderr "\n\tVersion $version\n"
}

module-whatis   "loads cmake"

# for Tcl script use only
set     version     2.8.10.2

prepend-path    PATH            /usr/local/usp/cmake/2.8.10.2/bin

 cat /usr/local/modulefiles/unsupported/cmake/.version
#%Module
set ModulesVersion "2.8.10.2"

above is copper

garnet has
/usr/local/modulefiles/unsupported

 cat /usr/local/modulefiles/unsupported/subversion/1.6.2
#%Module
##########################################################################
## modules modulefile
##
##
# note that this is read by a Tcl interpretor
#
# Change Log:
# 2012-12-11  EAK  New module for subversion-1.6.2 copied from Chugach


proc ModulesHelp { } {
        global version svnroot

        puts stderr "\tsubversion- adds the subversion version control package to the PATH.\n"
        puts stderr "\n\tVersion $version\n"
}

module-whatis   "loads subversion into the environment"

# for Tcl script use only
set     version     1.6.2
set     svnroot     /usr/local/usp/subversion/1.6.2

prepend-path  PATH        $svnroot/bin
prepend-path  MANPATH     $svnroot/share/man

Note that cmake has
2.8.12.2/man

only compiler dependent is
namd/2.9-gnu(default) 
namd/CVS-2013-02-25-gnu


if { [ info exists env(PE_ENV) ] } {
       set LCcompiler $env(PE_ENV)
} else {
       set LCcompiler "GNU"
}

 env | grep PE_ENV

CRAY
INTEL
GNU
PGI

 ------------------

PGI test
--------
ccmake ../metis-5.1.0
c  (configure)

 CMake Error at CMakeLists.txt:10 (ADD_EXECUTABLE):
   Cannot find source file:

     GKlib/conf/check_thread_storage.c

   Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp
   .hxx .in .txx



 CMake Error: Internal CMake error, TryCompile generation of cmake failed

[ 79%] Building C object programs/CMakeFiles/cmpfillin.dir/smbfactor.c.o
Linking C executable cmpfillin
pgcc-Error-Unknown switch: -dynamic


GNU test
--------
ccmake ../metis-5.1.0
c  (configure)

 CMake Error at CMakeLists.txt:10 (ADD_EXECUTABLE):
   Cannot find source file:

     GKlib/conf/check_thread_storage.c

   Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp
   .hxx .in .txx


 CMake Error: Internal CMake error, TryCompile generation of cmake failed



INTEL test
--------
ccmake ../metis-5.1.0
c  (configure)

 CMake Error at CMakeLists.txt:10 (ADD_EXECUTABLE):
   Cannot find source file:

     GKlib/conf/check_thread_storage.c

   Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp
   .hxx .in .txx

 CMake Error: Internal CMake error, TryCompile generation of cmake failed

 ======================================================================

March 3, 2016 garnet, below
/usr/local/usp/cmake/3.4.3-pgi
The following tests FAILED:
	 29 - FindModulesExecuteAll (Failed)
	115 - BuildDepends (Failed)
	120 - CPackComponentsForAll-RPM-default (Failed)
	121 - CPackComponentsForAll-RPM-OnePackPerGroup (Failed)
	122 - CPackComponentsForAll-RPM-IgnoreGroup (Failed)
	123 - CPackComponentsForAll-RPM-AllInOne (Failed)
	175 - CTest.UpdateSVN (Failed)
	181 - CTestCoverageCollectGCOV (Failed)
	232 - Java.Jar (Failed)
	233 - Java.JarSourceList (Failed)
	253 - CMakeOnly.AllFindModules (Failed)
	379 - RunCMake.IfacePaths_INCLUDE_DIRECTORIES (Failed)
	385 - RunCMake.CPack_RPM (Failed)
	386 - RunCMake.CPack_TGZ (Failed)


/usr/local/usp/cmake/3.4.3-intel
The following tests FAILED:
	 29 - FindModulesExecuteAll (Failed)
	116 - BuildDepends (Failed)
	121 - CPackComponentsForAll-RPM-default (Failed)
	122 - CPackComponentsForAll-RPM-OnePackPerGroup (Failed)
	123 - CPackComponentsForAll-RPM-IgnoreGroup (Failed)
	124 - CPackComponentsForAll-RPM-AllInOne (Failed)
	179 - CTest.UpdateSVN (Failed)
	185 - CTestCoverageCollectGCOV (Failed)
	236 - Java.Jar (Failed)
	237 - Java.JarSourceList (Failed)
	257 - CMakeOnly.AllFindModules (Failed)
	383 - RunCMake.IfacePaths_INCLUDE_DIRECTORIES (Failed)
	389 - RunCMake.CPack_RPM (Failed)
	390 - RunCMake.CPack_TGZ (Failed)

/usr/local/usp/cmake/3.4.3-gnu
The following tests FAILED:
	 29 - FindModulesExecuteAll (Failed)
	 79 - Qt4Deploy (Failed)
	119 - BuildDepends (Failed)
	124 - CPackComponentsForAll-RPM-default (Failed)
	125 - CPackComponentsForAll-RPM-OnePackPerGroup (Failed)
	126 - CPackComponentsForAll-RPM-IgnoreGroup (Failed)
	127 - CPackComponentsForAll-RPM-AllInOne (Failed)
	183 - CTest.UpdateSVN (Failed)
	189 - CTestCoverageCollectGCOV (Failed)
	240 - Java.Jar (Failed)
	241 - Java.JarSourceList (Failed)
	261 - CMakeOnly.AllFindModules (Failed)
	387 - RunCMake.IfacePaths_INCLUDE_DIRECTORIES (Failed)
	393 - RunCMake.CPack_RPM (Failed)
	394 - RunCMake.CPack_TGZ (Failed)


March 3, 2016 garnet, above

 ======================================================================
 Intel Vtune C