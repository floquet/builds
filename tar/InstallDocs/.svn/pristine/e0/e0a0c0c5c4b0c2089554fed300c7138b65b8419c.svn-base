
May 21, 2010
On diamond, a user was unable to get documents (checkout, co) using
http protocol.  My notes about subversion indicated that subversion
was not built with the optional package serf.  The subversion notes
say that serf is needed for an http client.  Here are my notes about
building subversion with serf.  It is not easy because of dependencies
due to serf and strange errors such as openssl testing giving many
errors when building with icc.  In the end everything was compiled
with gcc.  The next day the user said that after changing firewall
at the site that hosts coamps, the user was able to "co" to his
HOME on diamond using the subversion already installed.  Nonetheless,
I continued to work on building this version.  The already installed
version is in /usr/local/usp/subversion/1.6.2 and this version
is being built in /work/scheinin/subversion/1.6.11, so everything
could be copied-over to /usr/local/usp/subversion without clobbering
the version already present.

After the change in the firewall was made, both of the "older"
version of svn worked.

/usr/local/applic/COTS/svn co \
  http://coamps.nrlmry.navy.mil:8000/svn/coamps4
/usr/local/usp/subversion/1.6.2/bin/svn co \
  http://coamps.nrlmry.navy.mil:8000/svn/coamps4

Both of the above arrives at asking for a password,
which is a good sign.

There is really only one version being tested above because
 /usr/local/applic/COTS/svn -> /usr/local/usp/subversion/default/bin/svn
 /usr/local/usp/subversion/default -> 1.6.2

---------------------------------------------------------------------

This build was a failure, the text here has been copied from
the end of this file.

For various reasons, when building with openssl and serf it was necessary
to use dynamic libraries.  Unfortunately, the result is that
LD_LIBRARY_PATH needs to be set before using svn.

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/work/scheinin/subversion/1.6.11/lib:/work/scheinin/subversion/1.6.11/lib64

The following command works
/work/scheinin/subversion/1.6.11/bin/svn --help

But the following simple command gives a segmentation fault

/work/scheinin/subversion/1.6.11/bin/svn co \
  http://coamps.nrlmry.navy.mil:8000/svn/coamps4
Segmentation fault

despite the fact the src/subversion-1.6.11/check.log generated by
"make check" does not contain either the word "segmentation"
nor "fault".

---------------------------------------------------------------------

mkdir -p /work/scheinin/subversion/1.6.11
cd /work/scheinin/subversion/1.6.11
mkdir bin  build-1  include  lib  share  src
export PREFIX=/work/scheinin/subversion/1.6.11
cd src
Put into src

subversion-1.6.11.tar.bz2
subversion-deps-1.6.11.tar.bz2
serf-0.6.1.tar.bz2
openssl-1.0.0.tar.gz

In order to use http protocol for transfering files, serf is needed.
Serf requires openssl, the whole distribution, in particular, the
header files.  Diamond has openssl but not openssl-devel , so openssl
source was downloaded.  The tests of openssl failed badly when the
Intel compiler was used, so gcc will be used for everything.
It was also discovered by trial and error that the libraries need
to be compiled with -fPIC.

module unload mpi/sgi_mpi-1.26
module unload compilers/intel11.1
export CC=/usr/bin/gcc
export CXX=/usr/bin/g++
export FC=/usr/bin/gfortran
export F77=/usr/bin/gfortran
export F90=/usr/bin/gfortran

tar xjf subversion-1.6.11.tar.bz2
tar xjf subversion-deps-1.6.11.tar.bz2
tar xjf serf-0.6.1.tar.bz2
tar xzf openssl-1.0.0.tar.gz

cd openssl-1.0.0

# Because there are various Makefile files that seem to be
# independent, force -fPIC,
export CC="/usr/bin/gcc -fPIC"

./config --prefix=$PREFIX shared zlib -L/usr/lib64

# edit Makefile
Change from:
CC= /usr/bin/gcc
Change to:
CC= /usr/bin/gcc -fPIC
Change from:
CFLAG= [ ... stuff ... ] -O3
Change to:
CFLAG= [ ... stuff ... ] -O

# edit ./crypto/bn/Makefile
Change from:
CC=	cc
Change to:
CC= /usr/bin/gcc -fPIC
Change from:
CFLAG=-g
Change to:
CFLAG=-g -fPIC

make
make test
ALL TESTS SUCCESSFUL.
make install

It is noteworthy that the SSL libraries were installed in
$PREFIX/lib64 since many applications use $PREFIX/lib
even on 64-bit architectures.

The tools apr and apr-util are needed by serf.

# Don't force complicated definition of CC if not necessary.
export CC=/usr/bin/gcc

cd $PREFIX/src/subversion-1.6.11/apr
./configure --prefix=$PREFIX
make
make test
All tests passed.
make install

 cd ../apr-util/
./configure --prefix=$PREFIX --with-apr=$PREFIX
make
make test
All tests passed.
make install

cd $PREFIX/src/serf-0.6.1

# For SSL
export LDFLAGS=-L${PREFIX}/lib64

./configure --prefix=$PREFIX \
  --with-apr=$PREFIX --with-apr-util=$PREFIX --with-openssl=$PREFIX

In program outgoing.c, line 473
Changed from;
  ((char *) conn->vec[0].iov_base) += conn->vec[0].iov_len - (len - written);
Changed to:
           (conn->vec[0].iov_base) += conn->vec[0].iov_len - (len - written);
because otherwise compiler gives error
outgoing.c:473: error: invalid lvalue in assignment

make

export LD_LIBRARY_PATH=${PREFIX}/lib:${PREFIX}/lib64

make check
OK (15 tests)

make install

cd $PREFIX/src/subversion-1.6.11

./configure --prefix=$PREFIX \
  --with-berkeley-db \
  --enable-shared --enable-static \
  --with-serf=$PREFIX  --without-neon \
  2>&1 | tee configure.output

# The option "--enable-all-static" would seem like a good idea
# in order to avoid setting LD_LIBRARY_PATH but compilation
# when that option was set without "--enable-shared --enable-static"
# resulted in linking errors.  For example, missing dladdr, specifically
# nm /work/scheinin/subversion/1.6.11/lib64/libcrypto.a | grep dladdr
#                 U dladdr
# dladdr is used for dynamic libraries, so what is the point of putting
# it in a static library?  There were many other errors when only
# "--enable-all-static" was used.
# Use --without-neon because neon finds /usr/KRB5 but there is no
# dynamic ssl library there.  It should be noted that this subversion
# is being build with an SSL that is not "kerberos-ised".
# Previously used "--with-berkeley-db=db.h:/usr/include/db4:/usr/lib64:db"
# but for this compilation apr-util is being used and it has
# a different definition of --with-berkeley-db.  Apr-util is included
# in subversion-deps-1.6.11.tar.bz2 and the flag --with-berkeley-db is
# passed to apr-util but the value (=stuff) has a different syntax
# for subversion compared to apr-util and as a consequence if the
# longer version is used an erroneous "-Ldb" is added to the linker
# libtool line.  Using "--with-berkeley-db" without setting it equal
# to some value works OK.

make  2>&1 | tee make.log
make check  2>&1 | tee check.log

All tests declared "success" (71/71) then the final summary says
Summary of test results:
  24 tests SKIPPED
  25 tests XFAILED
but the failures subtests within various tests.

For various reasons, when building with openssl and serf it was necessary
to use dynamic libraries.  Unfortunately, the result is that
LD_LIBRARY_PATH needs to be set before using svn.

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/work/scheinin/subversion/1.6.11/lib:/work/scheinin/subversion/1.6.11/lib64

The following command works
/work/scheinin/subversion/1.6.11/bin/svn --help

But the following simple command gives a segmentation fault
/work/scheinin/subversion/1.6.11/bin/svn co \
  http://coamps.nrlmry.navy.mil:8000/svn/coamps4

despite the fact the src/subversion-1.6.11/check.log generated by
"make check" does not contain the word "segmentation" nor "fault".
