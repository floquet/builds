

garnet for COST below ================================================


 ================ UDUNITS as prerequisite , below ====================

Download from  ftp://ftp.unidata.ucar.edu/pub/udunits/
version udunits-2.2.9.tar.gz  on April 2014

 ----------------------------------

export PREFIX=/usr/local/usp/COST/udunits-2.2.9-pgi-pgcc
# default PrgEnv-pgi
export CXX=pgCC
export CC=pgcc
export FC=pgf90
export F77=pgf77
export F90=pgf90
export TMPDIR=${WORKDIR}/tmp

./configure --prefix=$PREFIX \
  --enable-shared  --enable-static

make 2>&1 | tee make.log
make install

 ----------------------------------

export PREFIX=/usr/local/usp/COST/udunits-2.2.9-gnu-gcc
module swap PrgEnv-pgi PrgEnv-gnu
export CXX=g++
export CC=gcc
export FC=gfortran
export F77=gfortran
export F90=gfortran
export TMPDIR=${WORKDIR}/tmp

./configure --prefix=$PREFIX \
  --enable-shared  --enable-static

make 2>&1 | tee make.log
make install

 ----------------------------------

export PREFIX=/usr/local/usp/COST/udunits-2.2.9-intel-icc
module swap PrgEnv-pgi PrgEnv-intel
export CXX=icpc
export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort
export TMPDIR=${WORKDIR}/tmp

./configure --prefix=$PREFIX \
  --enable-shared  --enable-static

make 2>&1 | tee make.log
make install

 ----------------------------------

For three installation locations:
topdir=/usr/local/usp/COST/udunits-2.2.9-pgi-pgcc
topdir=/usr/local/usp/COST/udunits-2.2.9-gnu-gcc
topdir=/usr/local/usp/COST/udunits-2.2.9-intel-icc

cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

 ================ UDUNITS as prerequisite , above ====================

NCL-NCARG-6.2.0  Last updated 2014-04-15

Download:
https://www.earthsystemgrid.org/
Near bottom of page there is item called
NCL: NCAR Command Language

Because it provide libraries, compile for three compilers suites.
Compile for login nodes rather than compute nodes because
it is graphics.

Installation destinations:
/usr/local/usp/COST/ncl_ncarg-6.2.0-pgi-pgcc
/usr/local/usp/COST/ncl_ncarg-6.2.0-gnu-gcc
/usr/local/usp/COST/ncl_ncarg-6.2.0-intel-icc

Prerequisites include
hdf4-nonetcdf  #  Ignore this.
hdf5           #  Use Cray module
netcdf         #  Use Cray module
szip           #  Use what was built for COST
udunits        #  Use what was built for COST


# Default PrgEnv-pgi
garnet:
module load netcdf/4.3.0
module load cray-hdf5/1.8.11
copper:
module load  netcdf
module load  cray-hdf5
export CXX=pgCC
export CC=pgcc
export FC=pgf90
export F77=pgf77
export F90=pgf90
export TMPDIR=${WORKDIR}/tmp

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

# garnet:
export NCARG=/lustre/work1/scheinin/COST/ncl_ncarg-6.2.0-pgi-pgcc/ncl_ncarg-6.2.0
# copper: 
export NCARG=/work/scheinin/COST/ncl_ncarg-6.2.0-pgi-pgcc/ncl_ncarg-6.2.0
export NCARG_ROOT=/usr/local/usp/COST/ncl_ncarg-6.2.0-pgi-pgcc

 cd $NCARG/config
 make -f Makefile.ini
 ./ymake -config `pwd`

cd config
 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.PGI
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.PGI LINUX

Edit Project
Because even the "devel" version of PNG,
does not have libpng12.a, so skip it.

change from
#define	PNGlib	-lpng -lz
change to
#define	PNGlib	-lz

Edit Template

change from
#define XLibrary -lX11
change to
#define XLibrary -lX11 -lxcb -lxcb-xlib -lXau  -ldl

Edit LINUX

#define CtoFLibraries -lpgf90  -lpgf90_rpm1  -lpgf902 -lpgftnrtl -lpghpf -lrt -lsz
/*
#define CtoFLibraries -L/usr/pgi/linux86-64/12.9/lib  -lpgmp -lnuma -lpthread -lpgf90 -lpgf90_rpm1 -lpgf902 -lpgf90rtl -lpgftnrtl -lnspgc -lpgc -lrt -lpthread -lm
#define CtoFLibraries -pgf90libs
*/
#define CtoFLibrariesUser -lpgf90  -lpgf90_rpm1  -lpgf902 -lpgftnrtl -lpghpf -lrt -lsz
/*
#define CtoFLibrariesUser -pgf90libs
*/

# Note that previously above included  -lpgc  but that now conflicts with
# -lpgmp that is added by cc compiler.

# Note that the symbol aio_return is not defined in
# /usr/lib64/libaio.a but rather
# it is defined in /usr/lib64/librt.a .

#define LibSearchUser -L/usr/lib64
#define IncSearchUser -I/usr/include/X11

#define ArchRecLibSearch -L/usr/lib64
#define ArchRecIncSearch -I/usr/include/X11

Add
#define XawLibrary  -lXaw8

Change to
#define XToolLibrary -lXt -lXpm -lSM -lICE -lxcb

End of editing of LINUX

cd ..
./Configure -v

Build NCL (y)? y
Parent installation directory : /usr/local/usp/COST/ncl_ncarg-6.2.0-pgi-pgcc
System temp space directory   : /work/scheinin/tmp
Build NetCDF4 feature support (optional)? y
Did you build HDF-4 with szip support? n
Build Triangle support (optional) into NCL? n
Build NetCDF-4 support (optional) into NCL? y
Build OPeNDAP support (optional) into NCL? n
Build Udunits support (optional) into NCL? y
Build HDF5 support (optional) into NCL? y
Build Vis5d+ support (optional) into NCL? n
Build HDFEOS support (optional) into NCL? n
Build GRIB2 support (optional) into NCL? n
garnet:
Enter local library search path(s) : /usr/lib64 /opt/cray/hdf5/1.8.11/PGI/121/lib /opt/cray/netcdf/4.3.0/PGI/121/lib /usr/local/usp/COST/szip-2.1-pgi-pgcc/lib /usr/local/usp/COST/udunits-2.2.9-pgi-pgcc/lib
Enter local include search path(s) : /usr/include /usr/include/X11 /opt/cray/hdf5/1.8.11/PGI/121/include /opt/cray/netcdf/4.3.0/PGI/121/include /usr/local/usp/COST/szip-2.1-pgi-pgcc/include /usr/local/usp/COST/udunits-2.2.9-pgi-pgcc/include
copper:
Enter local library search path(s) : /usr/lib64 /opt/cray/hdf5/1.8.11/PGI/121/lib /opt/cray/netcdf/4.3.0/PGI/121/lib /usr/local/usp/COST/szip-2.1-pgi-pgcc/lib /usr/local/usp/COST/udunits-2.2.9-pgi-pgcc/lib
Enter local include search path(s) : /usr/include /usr/include/X11 /opt/cray/hdf5/1.8.11/PGI/121/include /opt/cray/netcdf/4.3.0/PGI/121/include /usr/local/usp/COST/szip-2.1-pgi-pgcc/include /usr/local/usp/COST/udunits-2.2.9-pgi-pgcc/include

 make Everything 2>&1 | tee make.log

# To continue if compiled only partially
make All 2>&1 | tee -a make.log
make install 2>&1 | tee -a make.log

 ----------------------------------

module swap PrgEnv-pgi PrgEnv-gnu
garnet:
module load netcdf/4.3.0
module load cray-hdf5/1.8.11
copper:
module load  netcdf
module load  cray-hdf5
export CXX=g++
export CC=gcc
export FC=gfortran
export F77=gfortran
export F90=gfortran
export TMPDIR=${WORKDIR}/tmp

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

# garnet:
export NCARG=/lustre/work1/scheinin/COST/ncl_ncarg-6.2.0-gnu-gcc/ncl_ncarg-6.2.0
# copper:
export NCARG=/work/scheinin/COST/ncl_ncarg-6.2.0-gnu-gcc/ncl_ncarg-6.2.0
export NCARG_ROOT=/usr/local/usp/COST/ncl_ncarg-6.2.0-gnu-gcc

 cd $NCARG/config
 make -f Makefile.ini
 ./ymake -config `pwd`

cd config
 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.PGI
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.GNU LINUX

Edit Project
Because even the "devel" version of PNG,
does not have libpng12.a, so skip it.

change from
#define	PNGlib	-lpng -lz
change to
#define	PNGlib	-lz

Edit Template

change from
#define XLibrary -lX11
change to
#define XLibrary -lX11 -lxcb -lxcb-xlib -lXau  -ldl

Edit LINUX

#define LibSearchUser -L/usr/lib64
#define IncSearchUser -I/usr/include/X11

#define ArchRecLibSearch -L/usr/lib64
#define ArchRecIncSearch -I/usr/include/X11

Add
#define XawLibrary  -lXaw8

Change to
#define XToolLibrary -lXt -lXpm -lSM -lICE -lxcb

End of editing of LINUX

cd ..
./Configure -v

Build NCL (y)? y
Parent installation directory : /usr/local/usp/COST/ncl_ncarg-6.2.0-gnu-gcc
System temp space directory   : /work/scheinin/tmp
Build NetCDF4 feature support (optional)? y
Did you build HDF-4 with szip support? n
Build Triangle support (optional) into NCL? n
Build NetCDF-4 support (optional) into NCL? y
Build OPeNDAP support (optional) into NCL? n
Build Udunits support (optional) into NCL? y
Build HDF5 support (optional) into NCL? y
Build Vis5d+ support (optional) into NCL? n
Build HDFEOS support (optional) into NCL? n
Build GRIB2 support (optional) into NCL? n
garnet:
Enter local library search path(s) : /usr/lib64 /opt/cray/hdf5/1.8.11/GNU/48/lib /opt/cray/netcdf/4.3.0/GNU/48/lib /usr/local/usp/COST/szip-2.1-gnu-gcc/lib /usr/local/usp/COST/udunits-2.2.9-gnu-gcc/lib
Enter local include search path(s) : /usr/include /usr/include/X11 /opt/cray/hdf5/1.8.11/GNU/48/include /opt/cray/netcdf/4.3.0/GNU/48/lib  /usr/local/usp/COST/szip-2.1-gnu-gcc/include /usr/local/usp/COST/udunits-2.2.9-gnu-gcc/include
copper:
Enter local library search path(s) : /usr/lib64 /opt/cray/hdf5/1.8.11/GNU/48/lib /opt/cray/netcdf/4.3.0/GNU/48/lib /usr/local/usp/COST/szip-2.1-gnu-gcc/lib /usr/local/usp/COST/udunits-2.2.9-gnu-gcc/lib
Enter local include search path(s) : /usr/include /usr/include/X11 /opt/cray/hdf5/1.8.11/GNU/48/include  /opt/cray/netcdf/4.3.0/GNU/48/include /usr/local/usp/COST/szip-2.1-gnu-gcc/include /usr/local/usp/COST/udunits-2.2.9-gnu-gcc/include


 make Everything 2>&1 | tee make.log

# To continue if compiled only partially
make All 2>&1 | tee -a make.log
make install 2>&1 | tee -a make.log

 ----------------------------------

module swap PrgEnv-pgi PrgEnv-intel
garnet:
module load netcdf/4.3.0
module load cray-hdf5/1.8.11
copper:
module load  netcdf
module load  cray-hdf5
export CXX=icpc
export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort
export TMPDIR=${WORKDIR}/tmp

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

# garnet:
export NCARG=/lustre/work1/scheinin/COST/ncl_ncarg-6.2.0-intel-icc/ncl_ncarg-6.2.0
# copper:
export NCARG=/work/scheinin/COST/ncl_ncarg-6.2.0-intel-icc/ncl_ncarg-6.2.0
export NCARG_ROOT=/usr/local/usp/COST/ncl_ncarg-6.2.0-intel-icc

 cd $NCARG/config
 make -f Makefile.ini
 ./ymake -config `pwd`

cd config
 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.INTEL
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.INTEL LINUX

Edit Project
Because even the "devel" version of PNG,
does not have libpng12.a, so skip it.

change from
#define	PNGlib	-lpng -lz
change to
#define	PNGlib	-lz

Edit Template

change from
#define XLibrary -lX11
change to
#define XLibrary -lX11 -lxcb -lxcb-xlib -lXau  -ldl

Edit LINUX

#define LibSearchUser -L/usr/lib64
#define IncSearchUser -I/usr/include/X11

#define ArchRecLibSearch -L/usr/lib64
#define ArchRecIncSearch -I/usr/include/X11

Add
#define XawLibrary  -lXaw8

Change to
#define XToolLibrary -lXt -lXpm -lSM -lICE -lxcb

End of editing of LINUX

cd ..
./Configure -v

Build NCL (y)? y
Parent installation directory : /usr/local/usp/COST/ncl_ncarg-6.2.0-intel-icc
System temp space directory   : /work/scheinin/tmp
Build NetCDF4 feature support (optional)? y
Did you build HDF-4 with szip support? n
Build Triangle support (optional) into NCL? n
Build NetCDF-4 support (optional) into NCL? y
Build OPeNDAP support (optional) into NCL? n
Build Udunits support (optional) into NCL? y
Build HDF5 support (optional) into NCL? y
Build Vis5d+ support (optional) into NCL? n
Build HDFEOS support (optional) into NCL? n
Build GRIB2 support (optional) into NCL? n
garnet:
Enter local library search path(s) : /usr/lib64 /opt/cray/hdf5/1.8.11/INTEL/130/lib /opt/cray/netcdf/4.3.0/INTEL/130/lib /usr/local/usp/COST/szip-2.1-intel-icc/lib /usr/local/usp/COST/udunits-2.2.9-intel-icc/lib
Enter local include search path(s) : /usr/include /usr/include/X11 /opt/cray/hdf5/1.8.11/INTEL/130/include /opt/cray/netcdf/4.3.0/INTEL/130/include /usr/local/usp/COST/szip-2.1-intel-icc/include /usr/local/usp/COST/udunits-2.2.9-intel-icc/include
copper:
Enter local library search path(s) : /usr/lib64 /opt/cray/hdf5/1.8.11/INTEL/130/lib /opt/cray/netcdf/4.3.0/INTEL/130/lib /usr/local/usp/COST/szip-2.1-intel-icc/lib /usr/local/usp/COST/udunits-2.2.9-intel-icc/lib
Enter local include search path(s) : /usr/include /usr/include/X11 /opt/cray/hdf5/1.8.11/INTEL/130/include /opt/cray/netcdf/4.3.0/INTEL/130/include /usr/local/usp/COST/szip-2.1-intel-icc/include /usr/local/usp/COST/udunits-2.2.9-intel-icc/include


 make Everything 2>&1 | tee make.log

# To continue if compiled only partially
make All 2>&1 | tee -a make.log
make install 2>&1 | tee -a make.log

 ----------------------------------

For three destination directories

topdir=/usr/local/usp/COST/ncl_ncarg-6.2.0-pgi-pgcc
topdir=/usr/local/usp/COST/ncl_ncarg-6.2.0-gnu-gcc
topdir=/usr/local/usp/COST/ncl_ncarg-6.2.0-intel-icc

cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *


garnet for COST above ================================================


User name: si29em3xa
Password: eov9ndkw8x

OpenID
https://www.earthsystemgrid.org/myopenid/si29em3xa


On the date Thu Oct 17 09:33:12 CDT 2013
rebuilt ncl_ncarg-5.2.1-cle and ncl_ncarg-5.2.1-pgi

Instructions
http://www.ncl.ucar.edu/Download/build_from_src.shtml

Registration
Login name: si29em3xa
Password: eov9ndkw8x

/usr/local/usp/ncarg/
./ncl_ncarg-5.2.1-cnl
./ncl_ncarg-5.2.1-cnl/bin
./ncl_ncarg-5.2.1-cnl/include
./ncl_ncarg-5.2.1-cnl/lib
./ncl_ncarg-5.2.1-cnl/man
./ncl_ncarg-5.2.1-cnl/src
./ncl_ncarg-5.2.1-cnl/src/ncl_ncarg_src-5.2.1.tar.gz
./ncl_ncarg-5.2.1-pgi
./ncl_ncarg-5.2.1-pgi/bin
./ncl_ncarg-5.2.1-pgi/include
./ncl_ncarg-5.2.1-pgi/lib
./ncl_ncarg-5.2.1-pgi/man
./ncl_ncarg-5.2.1-pgi/src
./ncl_ncarg-5.2.1-pgi/src/ncl_ncarg_src-5.2.1.tar.gz

cle below

export CC=cc
export F77=ftn
export CXX=CC
export FC=ftn

export TMPDIR=${WORKDIR}/tmp

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

export NCARG=/usr/local/usp/ncarg/ncl_ncarg-5.2.1-cle/src/ncl_ncarg-5.2.1
export NCARG_ROOT=/usr/local/usp/ncarg/ncl_ncarg-5.2.1-cle

 cd $NCARG/config
 make -f Makefile.ini
 ./ymake -config `pwd`

 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.PGI
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.PGI LINUX

Edit Project

change from
#define	PNGlib	-lpng -lz
change to
#define	PNGlib	-lz

Even the "devel" version of PNG, which installs libpng12.so, not
called libpng.so, does not have a *.a version .

Edit Template

change from
#define XLibrary -lX11
change to
#define XLibrary -lX11 -lxcb -lxcb-xlib -lXau  -ldl


Edit LINUX

Changed from
/*
#define CtoFLibraries -lpgc -lpgf90  -lpgf90_rpm1  -lpgf902 -lpgftnrtl -lpghpf
 */
#define CtoFLibraries -pgf90libs
to
#define CtoFLibraries -lpgf90  -lpgf90_rpm1  -lpgf902 -lpgftnrtl -lpgf90rtl -lpghpf -lrt -lsz
/*
#define CtoFLibraries -pgf90libs
*/

# Note that previously above included  -lpgc  but that now conflicts with
# -lpgmp that is added by cc compiler.

# Note that the symbol aio_return is not defined in
# /usr/lib64/libaio.a but rather
# it is defined in /usr/lib64/librt.a .

Change to
#define CCompiler  cc -O -Msignextend -Mreentrant -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
#define FCompiler  ftn -O -Msignextend -Mreentrant -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
/*
#define ExtraExportFlags -Wl,--export-dynamic
*/
FC = ftn

Make sure X11 library is 64-bit
garnet: #define ArchRecLibSearch -L/usr/lib64
(jade was : #define ArchRecLibSearch -L/usr/X11R6/lib64)
#define ArchRecIncSearch -I/usr/include/X11

Add
#define XawLibrary  -lXaw8

Change to
#define XToolLibrary -lXt -lXpm -lSM -lICE -lxcb


End of editing of LINUX

# Need
# /usr/local/usp/hdf4/4.2.5-nonetcdf
# /usr/local/usp/hdf5/1.8.5p1-cle
# /usr/local/usp/netcdf/netcdf-4.1.1-cle
# /usr/local/usp/szip/2.1-cle
# /usr/local/usp/udunits/2.1.21-cle

cd ..
./Configure -v


Build NCL (y)? y
Parent installation directory : /usr/local/usp/ncarg/ncl_ncarg-5.2.1-cle
System temp space directory   : /work/scheinin/tmp
Build cairo support (optional) into GKS library? n
Did you build HDF-4 with szip support? y
Build Triangle support (optional) into NCL? n
Build NetCDF-4 support (optional) into NCL? y
Build OPeNDAP support (optional) into NCL? n
Build Udunits support (optional) into NCL? y
Build Vis5d+ support (optional) into NCL? n
Build HDFEOS support (optional) into NCL? n
Build GRIB2 support (optional) into NCL? n
Enter local library search path(s) : /usr/lib64 /usr/local/usp/hdf4/4.2.5-nonetcdf/lib /usr/local/usp/hdf5/1.8.5p1-cle/lib /usr/local/usp/netcdf/netcdf-4.1.1-cle/lib /usr/local/usp/szip/2.1-cle/lib /usr/local/usp/udunits/2.1.21-cle/lib
Enter local include search path(s) : /usr/include /usr/include/X11 /usr/local/usp/hdf4/4.2.5-nonetcdf/include /usr/local/usp/hdf5/1.8.5p1-cle/include /usr/local/usp/netcdf/netcdf-4.1.1-cle/include /usr/local/usp/szip/2.1-cle/include /usr/local/usp/udunits/2.1.21-cle/include

 make Everything 2>&1 | tee make.log

# To continue if compiled only partially
 make All 2>&1 | tee -a make.log


cle above
pgi below

export CC=pgcc
export F77=pgf90
export CXX=pgCC
export FC=pgf90

export TMPDIR=${WORKDIR}/tmp

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

export NCARG=/usr/local/usp/ncarg/ncl_ncarg-5.2.1-pgi/src/ncl_ncarg-5.2.1
export NCARG_ROOT=/usr/local/usp/ncarg/ncl_ncarg-5.2.1-pgi

 cd $NCARG/config
 make -f Makefile.ini
 ./ymake -config `pwd`

 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.PGI
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.PGI LINUX

Edit Project

change from
#define	PNGlib	-lpng -lz
change to
#define	PNGlib	-lz

Even the "devel" version of PNG, which installs libpng12.so, not
called libpng.so, does not have a *.a version .

Edit Template

change from
#define XLibrary -lX11
change to
#define XLibrary -lX11 -lxcb -lxcb-xlib -lXau  -ldl

Edit LINUX

Changed from
/*
#define CtoFLibraries -lpgc -lpgf90  -lpgf90_rpm1  -lpgf902 -lpgftnrtl -lpghpf
 */
#define CtoFLibraries -pgf90libs
to
#define CtoFLibraries -lpgf90  -lpgf90_rpm1  -lpgf902 -lpgftnrtl -lpgf90rtl -lpghpf -lrt -lsz
/*
#define CtoFLibraries -pgf90libs
*/

# Note that previously above included  -lpgc  but that now conflicts with
# -lpgmp that is added by cc compiler.

# Note that the symbol aio_return is not defined in
# /usr/lib64/libaio.a but rather
# it is defined in /usr/lib64/librt.a .

Change to
#define CCompiler  pgcc -O -Msignextend -Mreentrant -fPIC -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
#define FCompiler  pgf90 -O -Msignextend -Mreentrant -fPIC -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
/*
#define ExtraExportFlags -Wl,--export-dynamic
*/
FC = pgf90 -fPIC

Make sure X11 library is 64-bit
garnet: #define ArchRecLibSearch -L/usr/lib64
(jade was : #define ArchRecLibSearch -L/usr/X11R6/lib64)
#define ArchRecIncSearch -I/usr/include/X11

Add
#define XawLibrary  -lXaw8

Change to
#define XToolLibrary -lXt -lXpm -lSM -lICE -lxcb

End of editing of LINUX

# Need
# /usr/local/usp/hdf4/4.2.5-nonetcdf
# /usr/local/usp/hdf5/1.8.5p1-pgi
# /usr/local/usp/netcdf/netcdf-4.1.1-pgi
# /usr/local/usp/szip/2.1-pgi

cd ..
./Configure -v

Build NCL (y)? y
Parent installation directory : /usr/local/usp/ncarg/ncl_ncarg-5.2.1-pgi
System temp space directory   : /work/scheinin/tmp
Build cairo support (optional) into GKS library? n
Did you build HDF-4 with szip support? y
Build Triangle support (optional) into NCL? n
Build NetCDF-4 support (optional) into NCL? y
Build OPeNDAP support (optional) into NCL? n
Build Udunits support (optional) into NCL? y
Build Vis5d+ support (optional) into NCL? n
Build HDFEOS support (optional) into NCL? n
Build GRIB2 support (optional) into NCL? n
Enter local library search path(s) : /usr/lib64 /usr/local/usp/hdf4/4.2.5-nonetcdf/lib /usr/local/usp/hdf5/1.8.5p1-pgi/lib /usr/local/usp/netcdf/netcdf-4.1.1-pgi/lib /usr/local/usp/szip/2.1-pgi/lib /usr/local/usp/udunits/2.1.21-pgi/lib
Enter local include search path(s) : /usr/include /usr/include/X11 /usr/local/usp/hdf4/4.2.5-nonetcdf/include /usr/local/usp/hdf5/1.8.5p1-pgi/include /usr/local/usp/netcdf/netcdf-4.1.1-pgi/include /usr/local/usp/szip/2.1-pgi/include /usr/local/usp/udunits/2.1.21-pgi/include

 make Everything 2>&1 | tee make.log

# To continue if compiled only partially
 make All 2>&1 | tee -a make.log

pgi above

Need to change permissions.

cd /usr/local/usp/ncarg
Make sure last minute changes such as the README file are readable.

 =============== more recent NCARG request, below ===============

Request was made for NCARG with Intel compiler
around December 2015.

The NCARG documentation says,
"At a minimum, you should have the following libraries (and
associated include files) installed on your system:
 X11, Xaw, Xext, Xm, Xmu, Xt."

Garnet has
X11
   xorg-x11-libX11-devel
Xaw
   xorg-x11-devel
Xext
   xorg-x11-libXext-devel
Xm
   openmotif-devel
Xmu
   xorg-x11-libXmu-devel
Xt
   xorg-x11-libXt-devel

# Set version numbers, below.
export PGI_VERSION=14.2.0
export INTEL_VERSION=14.0.2.144
export GNU_VERSION=4.9.2

export CAIRO_VERSION=1.14.4
export UDUNITS_VERSION=2.2.20
export SZIP_VERSION=2.1
export BZIP2_VERSION=1.0.6
export NCARG_VERSION=6.2.1
# Set version numbers, above.

Built udunits as shown at top of this file.
Got from
wget ftp://ftp.unidata.ucar.edu/pub/udunits/udunits-2.2.20.tar.gz

Development version of expat is needed,
garnet has libexpat-devel

Below, installing bzip2.
The development version of bzip2 is needed in order to build ncl
and garnet does not have the devel package, so build bzip2.
export BZIP2_DIR=/usr/local/usp/bzip2/${BZIP2_VERSION}-pgi-${PGI_VERSION}
export BZIP2_DIR=/usr/local/usp/bzip2/${BZIP2_VERSION}-intel-${INTEL_VERSION}
export BZIP2_DIR=/usr/local/usp/bzip2/${BZIP2_VERSION}-gnu-${GNU_VERSION}
mkdir $BZIP2_DIR
cd $HOME/build/bzip2-${BZIP2_VERSION}-pgi-${PGI_VERSION}
cd $HOME/build/bzip2-${BZIP2_VERSION}-intel-${INTEL_VERSION}
cd $HOME/build/bzip2-${BZIP2_VERSION}-gnu-${GNU_VERSION}
wget http://www.bzip.org/1.0.6/bzip2-1.0.6.tar.gz
tar xzf bzip2-1.0.6.tar.gz
cd bzip2-1.0.6
---
vi Makefile
CC=pgcc OR CC=icc OR CC=gcc
vi Makefile-libbz2_so
CC=pgcc OR CC=icc OR CC=gcc
For both files, for PGI remove -Wall, -Winline => -Minline
For both files, for INTEL  -Winline => -finline-functions
---
make -f Makefile-libbz2_so
make clean
make
make -n install PREFIX=$BZIP2_DIR
make install PREFIX=$BZIP2_DIR
cp ./libbz2.so.1.0.6 ${BZIP2_DIR}/lib
cd $BZIP2_DIR/lib
ln -s libbz2.so.1.0.6 libbz2.so.1.0
ln -s libbz2.so.1.0.6 libbz2.so.1
ln -s libbz2.so.1.0.6 libbz2.so
fix permissions
Above, installing bzip2.

Download of ncarg:
https://www.earthsystemgrid.org/
Near bottom of page there is item called
NCL: NCAR Command Language

# Make sure TMPDIR is defined and exists.
export TMPDIR=${WORKDIR}/tmp

# Environment variable NCARG is source and
# NCARG_ROOT is the installation location that users need to set.

# PGI:
module load cray-netcdf
module load cray-hdf5
# module list
# PrgEnv-pgi/5.2.82
# pgi/14.2.0
# cray-netcdf/4.3.2
# cray-hdf5/1.8.13

export CXX=pgCC
export CC=pgcc
export FC=pgf90
export F77=pgf77
export F90=pgf90

export TMPDIR=${WORKDIR}/tmp

export BUILD_DIR=/u/scheinin/build/ncarg/${NCARG_VERSION}-pgi-${PGI_VERSION}
export PREFIX=/usr/local/usp/ncarg/${NCARG_VERSION}-pgi-${PGI_VERSION}

mkdir $BUILD_DIR
mkdir $PREFIX

export CAIRO_DIR=/usr/local/usp/cairo/${CAIRO_VERSION}-pgi-${PGI_VERSION}
export UDUNITS_DIR=/usr/local/usp/udunits/${UDUNITS_VERSION}-pgi-${PGI_VERSION}
export SZIP_DIR=/usr/local/usp/szip/${SZIP_VERSION}-pgi-${PGI_VERSION}
export BZIP2_DIR=/usr/local/usp/bzip2/${BZIP2_VERSION}-pgi-${PGI_VERSION}

# For ncarg-4.4.1, the name of the directory after tar extract
# is ncarg-4.4.1, however, the ymake script expects "ncarg"
# so the directory needs to be renamed.
# Here we are installing ncl_ncarg-6.2.1 but do the same
# just in case the problem still exists.
cd $BUILD_DIR
tar xzf ncl_ncarg-6.2.1.tar.gz
mv ncl_ncarg-6.2.1 ncarg

export NCARG=$BUILD_DIR/ncarg
export NCARG_ROOT=$PREFIX

cd $NCARG/config
make -f Makefile.ini
./ymake -config `pwd`

 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.PGI
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.PGI LINUX

Edit Project

change from
#define	PNGlib	-lpng -lz
change to
#define	PNGlib	-lz

Even the "devel" version of PNG, which installs libpng12.so
and libpng.so does not have a *.a version, so there is no
library for static linking.

Edit Template

change from
#define XLibrary -lX11
change to
#define XLibrary -lX11 -lxcb -lxcb-xlib -lXau  -ldl

change from
#define LexLibrary      -ll
Change to
#define LexLibrary      -lfl

Edit LINUX

Changed from
/*
#define CtoFLibraries -lpgc -lpgf90  -lpgf90_rpm1  -lpgf902 -lpgftnrtl -lpghpf
 */
#define CtoFLibraries -pgf90libs
to
#define CtoFLibraries -lpgf90  -lpgf90_rpm1  -lpgf902 -lpgftnrtl -lpgf90rtl -lpgf90 -lrt -lsz

Also, give same values to CtoFLibrariesUser .

# Note that libpghpf.so exists but has an undefined symbol,
# and it seems I can ignore it.

Change to
#define CCompiler  pgcc -O -Msignextend -Mreentrant -fPIC -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
#define FCompiler  pgf90 -O -Msignextend -Mreentrant -fPIC -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
/*
#define ExtraExportFlags -Wl,--export-dynamic
*/
FC = pgf90 -fPIC
# remove -tp k8-64 from #define CcOptions and #define FcOptions

Make sure X11 library is 64-bit
#define ArchRecLibSearch -L/usr/lib64
#define ArchRecIncSearch -I/usr/include/X11

Add
#define XawLibrary  -lXaw8

Change to
#define XToolLibrary -lXt -lXpm -lSM -lICE -lxcb

End of editing of LINUX

export LD_LIBRARY_PATH=${BZIP2_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${UDUNITS_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${SZIP_DIR}/lib:$LD_LIBRARY_PATH
# Some compilation looks for hdf4 but do not have the on garnet.
export LD_LIBRARY_PATH=${HDF5_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${NETCDF_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${CAIRO_DIR}/lib:$LD_LIBRARY_PATH

echo $PREFIX
echo $TMPDIR
# Put standard libraries and header directories last to avoid
# the use of the Linux distribution cairo.
# Use for Enter local library search path(s) >
echo "${BZIP2_DIR}/lib ${UDUNITS_DIR}/lib ${SZIP_DIR}/lib ${HDF5_DIR}/lib ${NETCDF_DIR}/lib ${CAIRO_DIR}/lib /usr/lib64 /usr/X11R6/lib64"
# Use for Enter local include search path(s) >
echo "/usr/include/freetype2 ${BZIP2_DIR}/include ${UDUNITS_DIR}/include ${SZIP_DIR}/include ${HDF5_DIR}/include ${NETCDF_DIR}/include ${CAIRO_DIR}/include /usr/include"

cd ..
./Configure -v
Build NCL (y)? y
(Must already have bin/ include/ lib/ man/ under $PREFIX )
Parent installation directory : [value of $PREFIX]
System temp space directory   : [value of $TMPDIR]
Build NetCDF4 feature support (optional)? y
Build HDF4 support (optional) into NCL? n
(it [HDF4] is a prerequisite if you need HDF-EOS2 support)
Also build HDF4 support (optional) into raster library? n
Build Triangle support (optional) into NCL? n
If you are using NetCDF V4.x, did you enable NetCDF-4 support? y
Did you build NetCDF with OPeNDAP support? n
Build GDAL support (optional) into NCL? n
Build Udunits-2 support (optional) into NCL? y
Build Vis5d+ support (optional) into NCL? n
Build HDF-EOS2 support (optional) into NCL? n
Build HDF5 support (optional) into NCL? y
Build HDF-EOS5 support (optional) into NCL? n
Build GRIB2 support (optional) into NCL? n
Enter local library search path(s) > [see above]
Enter local include search path(s) > [see above]

make Everything 2>&1 | tee make.log

# To continue if compiled only partially
make All 2>&1 | tee -a make.log

Errors:
When compiling NclHDF.c,
cannot find include file mfhdf.h.
There is no such file in HDF5.
As a consequence, libnio.a was not built.

Look at files in $PREFIX.

Executables ictrans and ncl were built.

fix file permissions

# PGI above

# INTEL:
module swap PrgEnv-pgi PrgEnv-intel
module load cray-netcdf
module load cray-hdf5
# module list
# PrgEnv-intel/5.2.82
# intel/14.0.2.144
# cray-netcdf/4.3.2
# cray-hdf5/1.8.13

export CXX=icpc
export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort

export TMPDIR=${WORKDIR}/tmp

export BUILD_DIR=/u/scheinin/build/ncarg/${NCARG_VERSION}-intel-${INTEL_VERSION}
export PREFIX=/usr/local/usp/ncarg/${NCARG_VERSION}-intel-${INTEL_VERSION}

mkdir $BUILD_DIR
mkdir $PREFIX

export CAIRO_DIR=/usr/local/usp/cairo/${CAIRO_VERSION}-intel-${INTEL_VERSION}
export UDUNITS_DIR=/usr/local/usp/udunits/${UDUNITS_VERSION}-intel-${INTEL_VERSION}
export SZIP_DIR=/usr/local/usp/szip/${SZIP_VERSION}-intel-${INTEL_VERSION}
export BZIP2_DIR=/usr/local/usp/bzip2/${BZIP2_VERSION}-intel-${INTEL_VERSION}

# For ncarg-4.4.1, the name of the directory after tar extract
# is ncarg-4.4.1, however, the ymake script expects "ncarg"
# so the directory needs to be renamed.
# Here we are installing ncl_ncarg-6.2.1 but do the same
# just in case the problem still exists.
cd $BUILD_DIR
tar xzf ncl_ncarg-6.2.1.tar.gz
mv ncl_ncarg-6.2.1 ncarg

export NCARG=$BUILD_DIR/ncarg
export NCARG_ROOT=$PREFIX

cd $NCARG/config
make -f Makefile.ini
./ymake -config `pwd`

 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.PGI
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.INTEL LINUX

Edit Project

Did NOT do this change, might compile because Intel compiler
might use shared libraries.
change from
#define	PNGlib	-lpng -lz
change to
#define	PNGlib	-lz
Even the "devel" version of PNG, which installs libpng12.so
and libpng.so does not have a *.a version, so there is no
library for static linking.

Edit Template

change from
#define XLibrary -lX11
change to
#define XLibrary -lX11 -lxcb -lxcb-xlib -lXau  -ldl

change from
#define LexLibrary      -ll
Change to
#define LexLibrary      -lfl

Edit LINUX

change from
#define XToolLibrary    -lXt -lSM -lICE
change to
#define XToolLibrary -lXt -lXpm -lSM -lICE -lxcb

Add
#define XawLibrary  -lXaw8

Change to
#define LibSearchUser    -L/usr/lib64
#define IncSearchUser    -I/usr/include/X11

#define ArchRecLibSearch    -L/usr/lib64
#define ArchRecIncSearch    -I/usr/include/X11

Change to
FC = ifort -fPIC

Change to
#define CCompiler   icc  -fPIC -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
#define FCompiler   ifort  -fPIC -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE

Change from
#define CcOptions    -ansi -openmp
Change to
#define CcOptions    -fPIC -openmp
Change from
#define FcOptions     -openmp
Change to
#define FcOptions     -fPIC -openmp

End of editing of LINUX

export LD_LIBRARY_PATH=${BZIP2_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${UDUNITS_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${SZIP_DIR}/lib:$LD_LIBRARY_PATH
# Some compilation looks for hdf4 but do not have the on garnet.
export LD_LIBRARY_PATH=${HDF5_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${NETCDF_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${CAIRO_DIR}/lib:$LD_LIBRARY_PATH

(cd $PREFIX ; mkdir bin include lib man )

echo $PREFIX
echo $TMPDIR
# Put standard libraries and header directories last to avoid
# the use of the Linux distribution cairo.
# Use for Enter local library search path(s) >
echo "${BZIP2_DIR}/lib ${UDUNITS_DIR}/lib ${SZIP_DIR}/lib ${HDF5_DIR}/lib ${NETCDF_DIR}/lib ${CAIRO_DIR}/lib /usr/lib64 /usr/X11R6/lib64"
# Use for Enter local include search path(s) >
echo "/usr/include/freetype2 ${BZIP2_DIR}/include ${UDUNITS_DIR}/include ${SZIP_DIR}/include ${HDF5_DIR}/include ${NETCDF_DIR}/include ${CAIRO_DIR}/include /usr/include"

cd ..
./Configure -v
Build NCL (y)? y
(Must already have bin/ include/ lib/ man/ under $PREFIX )
Parent installation directory : [value of $PREFIX]
System temp space directory   : [value of $TMPDIR]
Build NetCDF4 feature support (optional)? y
Build HDF4 support (optional) into NCL? n
(it [HDF4] is a prerequisite if you need HDF-EOS2 support)
Also build HDF4 support (optional) into raster library? n
Build Triangle support (optional) into NCL? n
If you are using NetCDF V4.x, did you enable NetCDF-4 support? y
Did you build NetCDF with OPeNDAP support? n
Build GDAL support (optional) into NCL? n
Build Udunits-2 support (optional) into NCL? y
Build Vis5d+ support (optional) into NCL? n
Build HDF-EOS2 support (optional) into NCL? n
Build HDF5 support (optional) into NCL? y
Build HDF-EOS5 support (optional) into NCL? n
Build GRIB2 support (optional) into NCL? n
Enter local library search path(s) > [see above]
Enter local include search path(s) > [see above]

make Everything 2>&1 | tee make.log

# To continue if compiled only partially
make All 2>&1 | tee -a make.log

Errors:
When compiling NclHDF.c,
cannot find include file mfhdf.h.
There is no such file in HDF5.
As a consequence, libnio.a was not built.

Look at files in $PREFIX.

Executables ictrans and ncl were built.

fix file permissions

# INTEL above
  >>>>>>>>>>>>>>>>>>>>>>>>   herehere TODO start here
  >>>>>>>>>>>>>>>>>>>>>>>>   look at all the lines versus PGI install
# GNU:
module swap PrgEnv-pgi PrgEnv-gnu
module load cray-netcdf
module load cray-hdf5
# module list
# PrgEnv-gnu/5.2.82
# gcc/4.9.2
# cray-netcdf/4.3.2
# cray-hdf5/1.8.13

export CXX=g++
export CC=gcc
export FC=gfortran
export F77=gfortran
export F90=gfortran
export TMPDIR=${WORKDIR}/tmp

export BUILD_DIR=/u/scheinin/build/ncarg/${NCARG_VERSION}-gnu-${GNU_VERSION}
export PREFIX=/usr/local/usp/ncarg/${NCARG_VERSION}-gnu-${GNU_VERSION}

mkdir $BUILD_DIR
mkdir $PREFIX

export CAIRO_DIR=/usr/local/usp/cairo/${CAIRO_VERSION}-gnu-${GNU_VERSION}
export UDUNITS_DIR=/usr/local/usp/udunits/${UDUNITS_VERSION}-gnu-${GNU_VERSION}
export SZIP_DIR=/usr/local/usp/szip/${SZIP_VERSION}-gnu-${GNU_VERSION}
export BZIP2_DIR=/usr/local/usp/bzip2/${BZIP2_VERSION}-gnu-${GNU_VERSION}

# For ncarg-4.4.1, the name of the directory after tar extract
# is ncarg-4.4.1, however, the ymake script expects "ncarg"
# so the directory needs to be renamed.
# Here we are installing ncl_ncarg-6.2.1 but do the same
# just in case the problem still exists.
cd $BUILD_DIR
# untar
mv ncl_ncarg-6.2.1 ncarg

export NCARG=$BUILD_DIR/ncarg
export NCARG_ROOT=$PREFIX

 >>>>>>>>>>>>>>>>>>> herehere TODO for three compilers,
 >>>>>>>>>>>>>>>>>>> make compiler-specific changes
# GNU above

export LD_LIBRARY_PATH=${BZIP2_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${UDUNITS_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${SZIP_DIR}/lib:$LD_LIBRARY_PATH
# Some compilation looks for hdf4 but do not have the on garnet.
export LD_LIBRARY_PATH=${HDF5_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${NETCDF_DIR}/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${CAIRO_DIR}/lib:$LD_LIBRARY_PATH

Use for Enter local library search path(s) >
echo "/usr/lib64 /usr/X11R6/lib64 ${BZIP2_DIR}/lib ${UDUNITS_DIR}/lib ${SZIP_DIR}/lib ${HDF5_DIR}/lib ${NETCDF_DIR}/lib ${CAIRO_DIR}/lib"
Use for Enter local include search path(s) >
echo "/usr/include /usr/include/freetype2 ${BZIP2_DIR}/include ${UDUNITS_DIR}/include ${SZIP_DIR}/include ${HDF5_DIR}/include ${NETCDF_DIR}/include ${CAIRO_DIR}/include"

./Configure -v
Build NCL (y)? y
(Must already have bin/ include/ lib/ man/ under $PREFIX.)
Parent installation directory : [value of $PREFIX]
System temp space directory   : [value of $TMPDIR]
Build NetCDF4 feature support (optional)? y
Build HDF4 support (optional) into NCL? n
(it [HDF4] is a prerequisite if you need HDF-EOS2 support)
Also build HDF4 support (optional) into raster library? n
Build Triangle support (optional) into NCL? n
If you are using NetCDF V4.x, did you enable NetCDF-4 support? y
Did you build NetCDF with OPeNDAP support? n
Build GDAL support (optional) into NCL? n
Build Udunits-2 support (optional) into NCL? y
Build Vis5d+ support (optional) into NCL? n
Build HDF-EOS2 support (optional) into NCL? n
Build HDF5 support (optional) into NCL? y
Build HDF-EOS5 support (optional) into NCL? n
Build GRIB2 support (optional) into NCL? n
Enter local library search path(s) > [see above]
Enter local include search path(s) > [see above]

 make Everything 2>&1 | tee make.log

# To continue if compiled only partially
 make All 2>&1 | tee -a make.log
temp gnu below

 cd $NCARG/config
 make -f Makefile.ini
 ./ymake -config `pwd`

cd config
 grep SYSTEM_INCLUDE Makefile
SYSTEM_INCLUDE          = "LINUX"

# This really should be LINUX.64.PGI
# but just do the following.
mv LINUX LINUX_original
cp LINUX.64.GNU LINUX

Edit Project
Because even the "devel" version of PNG,
does not have libpng12.a, so skip it.

change from
#define	PNGlib	-lpng -lz
change to
#define	PNGlib	-lz

Edit Template

change from
#define XLibrary -lX11
change to
#define XLibrary -lX11 -lxcb -lxcb-xlib -lXau  -ldl

Edit LINUX

#define LibSearchUser -L/usr/lib64
#define IncSearchUser -I/usr/include/X11

#define ArchRecLibSearch -L/usr/lib64
#define ArchRecIncSearch -I/usr/include/X11

Add
#define XawLibrary  -lXaw8

Change to
#define XToolLibrary -lXt -lXpm -lSM -lICE -lxcb

End of editing of LINUX

cd ..
./Configure -v


 make Everything 2>&1 | tee make.log

# To continue if compiled only partially
make All 2>&1 | tee -a make.log
make install 2>&1 | tee -a make.log

temp gnu above

Need to change permissions.

 =============== more recent NCARG request, above ===============

find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *
# In each src/ directory
chmod -R o-rwx *
cd /usr/local/usp/ncarg
chown -R scheinin.staff *

