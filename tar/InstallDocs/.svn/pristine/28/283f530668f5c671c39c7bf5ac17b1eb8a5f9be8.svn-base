
Building instructions in
http://www.ks.uiuc.edu/Research/namd/development.html

 --------------------------------------------

   %%% Generalized Intel install below. %%%

export INTEL_VERSION=15.0.2
OR
export INTEL_VERSION=15.0.3
OR
export INTEL_VERSION=16.0.0

module swap compiler/intel compiler/intel/$INTEL_VERSION

# For parallel version.
export MPI_VENDOR=sgimpt
OR
export MPI_VENDOR=intelmpi
# Swap mpi if necessary.
# For intelmpi, not sgimpt:
module swap mpi/sgimpt mpi/intelmpi/$INTEL_VERSION

export NAMD_VERSION=2.10

export FFTW2_VERSION=2.1.5

export FFTWDIR=/p/home/apps/unsupported/fftw-serial/${FFTW2_VERSION}-intel-${INTEL_VERSION}
export LD_LIBRARY_PATH=${FFTWDIR}/lib:$LD_LIBRARY_PATH

export PREFIX=/p/home/apps/unsupported/namd/${NAMD_VERSION}-intel-${INTEL_VERSION}-${MPI_VENDOR}
mkdir $PREFIX

export BUILD_DIR=/p/home/scheinin/build/namd/${NAMD_VERSION}-intel-${INTEL_VERSION}-${MPI_VENDOR}
mkdir $BUILD_DIR
cd $BUILD_DIR

Download requires registration.
Got NAMD_2.10_Source.tar.gz

# checking
find $PREFIX ; pwd ; icc --version

export CXX=icpc
export CXXFLAGS="-O2"
export CC=icc
export CFLAGS="-O2"
export CPPFLAGS=""
export LIBS=""
export LDFLAGS=""
export FC=ifort
export F77=ifort
export F90=ifort

export I_MPI_CXX=icpc 
export I_MPI_CC=icc 
export I_MPI_FC=ifort 
export I_MPI_F90=ifort 
export I_MPI_F77=ifort 
export MPICXX_CXX=icpc 
export MPICC_CC=icc 
export MPIF90_F90=ifort 

export MPICC=mpicc
export MPIF77=mpif90
export MPICXX=mpicxx
# Either
export MPIEXE=mpiexec_mpt
export MPIEXEC=mpiexec_mpt
# or
export MPIEXE=mpirun
export MPIEXEC=mpirun

tar xzf NAMD_2.10_Source.tar.gz
cd NAMD_2.10_Source
tar xf charm-6.6.1.tar
cd charm-6.6.1

# Will build the MPI version rather than the multicore version.
./build charm++ mpi-linux-x86_64 --with-production \
 -f90 ifort 2>&1 | tee make.log

look for  error OR Error OR ERROR  in make.log

Error in copy, 
find . -name \*.mod
./mpi-linux-x86_64/tmp/charm.mod
./mpi-linux-x86_64/tmp/tracemod.mod
./mpi-linux-x86_64/tmp/pupmod.mod
# Just as a precaution, do by hand
cd mpi-linux-x86_64/include
mmm="charm.mod tracemod.mod pupmod.mod"
for i in $mmm ; do
ln -s ../tmp/$i $i
done
cd ../..

# Use -V to retain environment
qsub -q test -A ERDCS97290STA -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -V -I
cd $BUILD_DIR/NAMD_2.10_Source/charm-6.6.1
cd mpi-linux-x86_64/tests/charm++/megatest
echo $MPICXX_CXX ; which mpiexec_mpt
make pgm
export MPI_DSM_VERBOSE=1
export MPI_MEMMAP_OFF=true
# Should use mpirun for Intel MPI.
mpiexec_mpt -n 4 ./pgm
mpiexec_mpt -n 36 ./pgm
mpiexec_mpt -n 72 ./pgm

exit from PBS job

# Test megatest was successful.  This is important before continuing.

mkdir $PREFIX/charm
rsync -aI --copy-links ${BUILD_DIR}/NAMD_2.10_Source/charm-6.6.1/mpi-linux-x86_64 $PREFIX/charm

cd ${BUILD_DIR}/NAMD_2.10_Source/
./config
Possible options for <arch> on this machine based on uname: 
Linux-x86_64-g++		    Linux-x86_64-MPI-pathcc
Linux-x86_64-icc

cd ${BUILD_DIR}/NAMD_2.10_Source/arch

Edit Linux-x86_64.fftw
FFTDIR=[ value of $FFTWDIR ]

Edit Linux-x86_64.tcl
TCLDIR=/p/home/apps/unsupported/COST/tcltk/8.6/intel
TCLLIB=-L$(TCLDIR)/lib -ltcl8.6 -ldl -lpthread

cd ${BUILD_DIR}/NAMD_2.10_Source

./config Linux-x86_64-icc --charm-arch mpi-linux-x86_64 \
  --with-fftw --with-tcl \
  --cxx icpc --cc icc  2>&1 | tee config.output

cd Linux-x86_64-icc

make 2>&1 | tee make.log

Error repeated again and again:
  '-i-static' not supported
This option is equivalent to -static-intel which means that the
Intel-provided libraries are linked-in statically.
Cannot be used to --mcmodel=medium or -mcmodel=large

grep -i error make.log
No errors reported.

mkdir $PREFIX/bin
for i in charmrun flipbinpdb flipdcd namd2 psfgen sortreplicas ; do
cp ${BUILD_DIR}/NAMD_2.10_Source/Linux-x86_64-icc/$i $PREFIX/bin/
done
mkdir $PREFIX/include
cp ${BUILD_DIR}/NAMD_2.10_Source/Linux-x86_64-icc/inc/* $PREFIX/include

for i in lib plugins psfgen ug ; do
cp -R ${BUILD_DIR}/NAMD_2.10_Source/$i $PREFIX
done

Testing final build

export BUILD_DIR=/p/home/scheinin/build/namd/${NAMD_VERSION}-intel-${INTEL_VERSION}-${MPI_VENDOR}
cd $BUILD_DIR
mkdir test
cd test
wget http://www.ks.uiuc.edu/Research/namd/utilities/f1atpase.tar.gz
wget http://www.ks.uiuc.edu/Research/namd/utilities/apoa1.tar.gz
tar xzf apoa1.tar.gz
tar xzf f1atpase.tar.gz

# Do not use -V to retain environment because this is a test
# as a normal user.
qsub -q test -A ERDCS97290STA -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -I

export INTEL_VERSION=15.0.3
OR
export INTEL_VERSION=16.0.0

module swap compiler/intel compiler/intel/$INTEL_VERSION

# For parallel version.
export MPI_VENDOR=sgimpt
OR
export MPI_VENDOR=intelmpi
# Swap mpi if necessary.
# For intelmpi, not sgimpt:
module swap mpi/sgimpt mpi/intelmpi/$INTEL_VERSION

export NAMD_VERSION=2.10

export FFTW2_VERSION=2.1.5

export FFTWDIR=/p/home/apps/unsupported/fftw-serial/${FFTW2_VERSION}-intel-${INTEL_VERSION}
export LD_LIBRARY_PATH=${FFTWDIR}/lib:$LD_LIBRARY_PATH

TCLDIR=/p/home/apps/unsupported/COST/tcltk/8.6/intel
export LD_LIBRARY_PATH=${TCLDIR}/lib:$LD_LIBRARY_PATH

export PREFIX=/p/home/apps/unsupported/namd/${NAMD_VERSION}-intel-${INTEL_VERSION}-${MPI_VENDOR}

export PATH=$PREFIX/bin:$PATH

export BUILD_DIR=/p/home/scheinin/build/namd/${NAMD_VERSION}-intel-${INTEL_VERSION}-${MPI_VENDOR}
cd $BUILD_DIR/test

# Check
which namd2 ; pwd

cd apoa1

mkdir tmp
Edit apoa1.namd
outputname           [tmp directory created]/apoa1-out

Either
LAUNCH=mpiexec_mpt
or
LAUNCH=mpirun

$LAUNCH -n 2 namd2 apoa1.namd  2>&1 | tee run02.log
OK
$LAUNCH -n 4 namd2 apoa1.namd  2>&1 | tee run04.log
OK
$LAUNCH -n 8 namd2 apoa1.namd  2>&1 | tee run08.log
OK
$LAUNCH -n 32 namd2 apoa1.namd  2>&1 | tee run32.log
OK
$LAUNCH -n 64 namd2 apoa1.namd  2>&1 | tee run64.log
OK

cd ../f1atpase
mkdir tmp
Edit f1atpase.namd
outputname              [tmp directory created]/f1atpase

$LAUNCH -n 2 namd2 f1atpase.namd  2>&1 | tee run02.log
OK
$LAUNCH -n 4 namd2 f1atpase.namd  2>&1 | tee run04.log
OK
$LAUNCH -n 8 namd2 f1atpase.namd  2>&1 | tee run08.log
OK
$LAUNCH -n 32 namd2 f1atpase.namd  2>&1 | tee run32.log
OK
$LAUNCH -n 64 namd2 f1atpase.namd  2>&1 | tee run64.log
OK

Fix permissions

   %%% Generalized Intel install above. %%%

export PREFIX=/p/home/apps/unsupported/namd/6.6.1-intel-sgimpt
mkdir $PREFIX
# There is no installation procedure, so build within $PREFIX location.
cd $PREFIX
tar xzf NAMD_2.10_Source.tar.gz
cd NAMD_2.10_Source
tar xf charm-6.6.1.tar
cd charm-6.6.1

# default modules
# mpt/2.11-sgi711r13
# intel-compilers-15/15.0.1.133

export CXX=icpc
export CXXFLAGS="-O2"
export CC=icc
export CFLAGS="-O2"
export CPPFLAGS=""
export LIBS=""
export LDFLAGS=""
export FC=ifort
export F77=ifort
export F90=ifort

export MPICC=mpicc
export MPIF77=mpif90
export MPICXX=mpicxx
export MPIEXE=mpiexec_mpt
export MPIEXEC=mpiexec_mpt

# Compiling might use mpicc so set to Intel compiler.
export MPICXX_CXX=icpc 
export MPICC_CC=icc 
export MPIF90_F90=ifort 

# Will build the MPI version rather than the multicore version.
./build charm++ mpi-linux-x86_64 --with-production -f90 ifort 2>&1 | tee make.log

look for  error OR Error OR ERROR  in make.log

Error in copy,
find . -name \*.mod
./mpi-linux-x86_64/tmp/charm.mod
./mpi-linux-x86_64/tmp/tracemod.mod
./mpi-linux-x86_64/tmp/pupmod.mod
# Just as a precaution, do by hand
cd mpi-linux-x86_64/include
mmm="charm.mod tracemod.mod pupmod.mod"
for i in $mmm ; do
ln -s ../tmp/$i $i
done
cd ../..

# Use -V to retain environment
qsub -q workq -l place=scatter:excl -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -V -I
echo $PREFIX
  cd $PREFIX/NAMD_2.10_Source/charm-6.6.1
  cd mpi-linux-x86_64/tests/charm++/megatest
echo $MPICXX_CXX ; which mpiexec_mpt
  make pgm
export MPI_DSM_VERBOSE=1
export MPI_MEMMAP_OFF=true
  mpiexec_mpt -n 4 ./pgm
  mpiexec_mpt -n 36 ./pgm
  mpiexec_mpt -n 72 ./pgm

# Test megatest was successful.  This is important before continuing.

cd $PREFIX/NAMD_2.10_Source/
./config
Possible options for <arch> on this machine based on uname: 
Linux-x86_64-g++		    Linux-x86_64-MPI-pathcc
Linux-x86_64-icc

cd $PREFIX/NAMD_2.10_Source/arch

Edit Linux-x86_64.fftw
FFTDIR=/p/home/apps/unsupported/fftw-serial/2.1.5-intel

Edit Linux-x86_64.tcl
TCLDIR=/p/home/apps/unsupported/COST/tcltk/8.6/intel
TCLLIB=-L$(TCLDIR)/lib -ltcl8.6 -ldl -lpthread

cd $PREFIX/NAMD_2.10_Source/

./config Linux-x86_64-icc --charm-arch mpi-linux-x86_64 \
  --with-fftw --with-tcl \
  --cxx icpc --cc icc  2>&1 | tee config.output

cd Linux-x86_64-icc

make 2>&1 | tee make.log

Error repeated again and again:
  '-i-static' not supported
This option is equivalent to -static-intel which means that the
Intel-provided libraries are linked-in statically.
Cannot be used to --mcmodel=medium or -mcmodel=large

look for  error OR Error OR ERROR  in make.log
No errors reported.

# User would need to do
export LD_LIBRARY_PATH=/p/home/apps/unsupported/COST/tcltk/8.6/intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/fftw-serial/2.1.5-intel/lib:$LD_LIBRARY_PATH

cd /p/home/scheinin/Samples/namd
wget http://www.ks.uiuc.edu/Research/namd/utilities/f1atpase.tar.gz
wget http://www.ks.uiuc.edu/Research/namd/utilities/apoa1.tar.gz
tar xzf apoa1.tar.gz
tar xzf f1atpase.tar.gz

# Do not use -V to retain environment because this is a test
# as a normal user.
qsub -q workq -l place=scatter:excl -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -I

export PATH=/p/home/apps/unsupported/namd/6.6.1-intel-sgimpt/NAMD_2.10_Source/Linux-x86_64-icc:$PATH

export LD_LIBRARY_PATH=/p/home/apps/unsupported/COST/tcltk/8.6/intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/fftw-serial/2.1.5-intel/lib:$LD_LIBRARY_PATH

export MPI_DSM_VERBOSE=1
export MPI_MEMMAP_OFF=true

cd /p/home/scheinin/Samples/namd

cd apoa1

Edit apoa1.namd
outputname           /p/home/scheinin/Samples/namd/apoa1/tmp/apoa1-out
mkdir tmp

mpiexec_mpt -n 2 namd2 apoa1.namd  2>&1 | tee run02.log
OK
mpiexec_mpt -n 4 namd2 apoa1.namd  2>&1 | tee run04.log
OK
mpiexec_mpt -n 8 namd2 apoa1.namd  2>&1 | tee run08.log
OK
mpiexec_mpt -n 32 namd2 apoa1.namd  2>&1 | tee run32.log
OK
mpiexec_mpt -n 64 namd2 apoa1.namd  2>&1 | tee run64.log
OK

cd /p/home/scheinin/Samples/namd/f1atpase
mkdir tmp
Edit f1atpase.namd
outputname              /p/home/scheinin/Samples/namd/f1atpase/tmp/f1atpase

mpiexec_mpt -n 2 namd2 f1atpase.namd  2>&1 | tee run02.log
OK
mpiexec_mpt -n 4 namd2 f1atpase.namd  2>&1 | tee run04.log
OK
mpiexec_mpt -n 8 namd2 f1atpase.namd  2>&1 | tee run08.log
OK
mpiexec_mpt -n 32 namd2 f1atpase.namd  2>&1 | tee run32.log
OK
mpiexec_mpt -n 64 namd2 f1atpase.namd  2>&1 | tee run64.log

 --------------------------------------------

export PREFIX=/p/home/apps/unsupported/namd/6.6.1-intel-intelmpi
mkdir $PREFIX
# There is no installation procedure, so build within $PREFIX location.
cd $PREFIX
tar xzf NAMD_2.10_Source.tar.gz
cd NAMD_2.10_Source
tar xf charm-6.6.1.tar
cd charm-6.6.1

# default compiler
# intel-compilers-15/15.0.1.133
# different MPI
module unload mpt/2.11-sgi711r13
module load devel/mpi/intelmpi/15.0.1

export CXX=icpc
export CXXFLAGS="-O2"
export CC=icc
export CFLAGS="-O2"
export CPPFLAGS=""
export LIBS=""
export LDFLAGS=""
export FC=ifort
export F77=ifort
export F90=ifort

export MPICC=mpiicc
export MPIF77=mpiifort
export MPIF90=mpiifort
export MPICXX=mpiicpc
export MPIEXE=mpirun
export MPIEXEC=mpirun

# Compiling might use mpicc so set to Intel compiler.
export I_MPI_CXX=icpc 
export I_MPI_CC=icc 
export I_MPI_FC=ifort 
export I_MPI_F90=ifort 
export I_MPI_F77=ifort 

# Will build the MPI version rather than the multicore version.
./build charm++ mpi-linux-x86_64 --with-production -f90 ifort 2>&1 | tee make.log

look for  error OR Error OR ERROR  in make.log

Error in copy,
find . -name \*.mod
./mpi-linux-x86_64/tmp/charm.mod
./mpi-linux-x86_64/tmp/tracemod.mod
./mpi-linux-x86_64/tmp/pupmod.mod
# Just as a precaution, do by hand
cd mpi-linux-x86_64/include
mmm="charm.mod tracemod.mod pupmod.mod"
for i in $mmm ; do
ln -s ../tmp/$i $i
done
cd ../..

# Use -V to retain environment
qsub -q workq -l place=scatter:excl -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -V -I
source /usr/share/modules/init/bash
module unload mpt/2.11-sgi711r13
module load devel/mpi/intelmpi/15.0.1
echo $PREFIX
  cd $PREFIX/NAMD_2.10_Source/charm-6.6.1
  cd mpi-linux-x86_64/tests/charm++/megatest
echo $I_MPI_CXX ; which mpirun
  make pgm
  mpirun -n 4 ./pgm
  mpirun -n 36 ./pgm
  mpirun -n 72 ./pgm

# Test megatest was successful.  This is important before continuing.

cd $PREFIX/NAMD_2.10_Source/
./config
Possible options for <arch> on this machine based on uname: 
Linux-x86_64-g++		    Linux-x86_64-MPI-pathcc
Linux-x86_64-icc

cd $PREFIX/NAMD_2.10_Source/arch

Edit Linux-x86_64.fftw
FFTDIR=/p/home/apps/unsupported/fftw-serial/2.1.5-intel

Edit Linux-x86_64.tcl
TCLDIR=/p/home/apps/unsupported/COST/tcltk/8.6/intel
TCLLIB=-L$(TCLDIR)/lib -ltcl8.6 -ldl -lpthread

cd $PREFIX/NAMD_2.10_Source/

./config Linux-x86_64-icc --charm-arch mpi-linux-x86_64 \
  --with-fftw --with-tcl \
  --cxx icpc --cc icc  2>&1 | tee config.output

cd Linux-x86_64-icc

make 2>&1 | tee make.log

Error repeated again and again:
  '-i-static' not supported
This option is equivalent to -static-intel which means that the
Intel-provided libraries are linked-in statically.
Cannot be used to --mcmodel=medium or -mcmodel=large

look for  error OR Error OR ERROR  in make.log
No errors reported.

# User would need to do
export LD_LIBRARY_PATH=/p/home/apps/unsupported/COST/tcltk/8.6/intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/fftw-serial/2.1.5-intel/lib:$LD_LIBRARY_PATH

cd /p/home/scheinin/Samples/namd
wget http://www.ks.uiuc.edu/Research/namd/utilities/f1atpase.tar.gz
wget http://www.ks.uiuc.edu/Research/namd/utilities/apoa1.tar.gz
tar xzf apoa1.tar.gz
tar xzf f1atpase.tar.gz

# Do not use -V to retain environment because this is a test
# as a normal user.
qsub -q workq -l place=scatter:excl -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -I

export PATH=/p/home/apps/unsupported/namd/6.6.1-intel-intelmpi/NAMD_2.10_Source/Linux-x86_64-icc:$PATH

export LD_LIBRARY_PATH=/p/home/apps/unsupported/COST/tcltk/8.6/intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/fftw-serial/2.1.5-intel/lib:$LD_LIBRARY_PATH

module unload mpt/2.11-sgi711r13
module load devel/mpi/intelmpi/15.0.1

cd /p/home/scheinin/Samples/namd

cd apoa1

Edit apoa1.namd
outputname           /p/home/scheinin/Samples/namd/apoa1/tmp/apoa1-out
mkdir tmp

# Just to check
which namd2
module list

mpirun -n 2 namd2 apoa1.namd  2>&1 | tee run02.log
OK
mpirun -n 4 namd2 apoa1.namd  2>&1 | tee run04.log
OK
mpirun -n 8 namd2 apoa1.namd  2>&1 | tee run08.log
OK
mpirun -n 32 namd2 apoa1.namd  2>&1 | tee run32.log
OK
mpirun -n 64 namd2 apoa1.namd  2>&1 | tee run64.log
OK

cd /p/home/scheinin/Samples/namd/f1atpase
mkdir tmp
Edit f1atpase.namd
outputname              /p/home/scheinin/Samples/namd/f1atpase/tmp/f1atpase

mpirun -n 2 namd2 f1atpase.namd  2>&1 | tee run02.log
OK
mpirun -n 4 namd2 f1atpase.namd  2>&1 | tee run04.log
OK
mpirun -n 8 namd2 f1atpase.namd  2>&1 | tee run08.log
OK
mpirun -n 32 namd2 f1atpase.namd  2>&1 | tee run32.log
OK
mpirun -n 64 namd2 f1atpase.namd  2>&1 | tee run64.log
OK
 --------------------------------------------

export PREFIX=/p/home/apps/unsupported/namd/6.6.1-gcc49-sgimpt
mkdir $PREFIX
# There is no installation procedure, so build within $PREFIX location.
cd $PREFIX
tar xzf NAMD_2.10_Source.tar.gz
cd NAMD_2.10_Source
tar xf charm-6.6.1.tar
cd charm-6.6.1

# Need to add compilers to PATH.
# As of July 2015, there is no module for gcc version 4.9
export PATH=/apps/unsupported/gcc/4.9.2/bin:$PATH

# Need to add shared libraries to LD_LIBRARY_PATH.
export LD_LIBRARY_PATH=/apps/unsupported/gcc/4.9.2/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpc/1.0.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpfr/3.1.2/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/gmp/6.0.0a/lib:$LD_LIBRARY_PATH

export CXX=/apps/unsupported/gcc/4.9.2/bin/g++
export CXXFLAGS="-O2"
export CC=/apps/unsupported/gcc/4.9.2/bin/gcc
export CFLAGS="-O2"
export FC=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F77=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F90=/apps/unsupported/gcc/4.9.2/bin/gfortran
export LIBS=""
export LDFLAGS=""

export MPICC=mpicc
export MPIF77=mpif90
export MPIF90=mpif90
export MPICXX=mpicxx
export MPIEXE=mpiexec_mpt
export MPIEXEC=mpiexec_mpt

# default MPI
# mpt/2.11-sgi711r13

# Compiling might use mpicc so set to GCC compiler.
# Change from default set by MPI module.
export MPICXX_CXX=`which g++`
export MPICC_CC=`which gcc`
export MPIF90_F90=`which gfortran`

# Will build the MPI version rather than the multicore version.
./build charm++ mpi-linux-x86_64 --with-production -f90 gfortran 2>&1 | tee make.log

look for  error OR Error OR ERROR  in make.log

Error in copy,
find . -name \*.mod
./mpi-linux-x86_64/tmp/charm.mod
./mpi-linux-x86_64/tmp/tracemod.mod
./mpi-linux-x86_64/tmp/pupmod.mod
# Just as a precaution, do by hand
cd mpi-linux-x86_64/include
mmm="charm.mod tracemod.mod pupmod.mod"
for i in $mmm ; do
ln -s ../tmp/$i $i
done
cd ../..

# Use -V to retain environment
qsub -q workq -l place=scatter:excl -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -V -I
echo $PREFIX
  cd $PREFIX/NAMD_2.10_Source/charm-6.6.1
  cd mpi-linux-x86_64/tests/charm++/megatest
which gcc ; which gfortran ; echo $MPICXX_CXX ; which mpiexec_mpt
  make pgm
export MPI_DSM_VERBOSE=1
export MPI_MEMMAP_OFF=true
  mpiexec_mpt -n 4 ./pgm
  mpiexec_mpt -n 36 ./pgm
  mpiexec_mpt -n 72 ./pgm

# Test megatest was successful.  This is important before continuing.

cd $PREFIX/NAMD_2.10_Source/
./config
Possible options for <arch> on this machine based on uname: 
Linux-x86_64-g++		    Linux-x86_64-MPI-pathcc
Linux-x86_64-icc

cd $PREFIX/NAMD_2.10_Source/arch

Edit Linux-x86_64.fftw
FFTDIR=/p/home/apps/unsupported/fftw-serial/2.1.5-gcc43

Edit Linux-x86_64.tcl
TCLDIR=/p/home/apps/unsupported/COST/tcltk/8.6/gnu
TCLLIB=-L$(TCLDIR)/lib -ltcl8.6 -ldl -lpthread

cd $PREFIX/NAMD_2.10_Source/

./config Linux-x86_64-g++ --charm-arch mpi-linux-x86_64 \
  --with-fftw --with-tcl \
  --cxx g++ --cc gcc  2>&1 | tee config.output

cd Linux-x86_64-g++

# User would need to do
export LD_LIBRARY_PATH=/apps/unsupported/gcc/4.9.2/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpc/1.0.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpfr/3.1.2/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/gmp/6.0.0a/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/COST/tcltk/8.6/gnu/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/fftw-serial/2.1.5-gcc43/lib:$LD_LIBRARY_PATH

make 2>&1 | tee make.log

Error repeated again and again:
  '-i-static' not supported
This option is equivalent to -static-intel which means that the
Intel-provided libraries are linked-in statically.
Cannot be used to --mcmodel=medium or -mcmodel=large

look for  error OR Error OR ERROR  in make.log

cd /p/home/scheinin/Samples/namd
wget http://www.ks.uiuc.edu/Research/namd/utilities/f1atpase.tar.gz
wget http://www.ks.uiuc.edu/Research/namd/utilities/apoa1.tar.gz
tar xzf apoa1.tar.gz
tar xzf f1atpase.tar.gz

# Do not use -V to retain environment because this is a test
# as a normal user.
qsub -q workq -l place=scatter:excl -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -I

export PATH=/p/home/apps/unsupported/namd/6.6.1-gcc49-sgimpt/NAMD_2.10_Source/Linux-x86_64-g++:$PATH

export LD_LIBRARY_PATH=/apps/unsupported/gcc/4.9.2/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpc/1.0.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpfr/3.1.2/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/gmp/6.0.0a/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/COST/tcltk/8.6/gnu/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/fftw-serial/2.1.5-gcc43/lib:$LD_LIBRARY_PATH

export MPI_DSM_VERBOSE=1
export MPI_MEMMAP_OFF=true

cd /p/home/scheinin/Samples/namd

cd apoa1

Edit apoa1.namd
outputname           /p/home/scheinin/Samples/namd/apoa1/tmp/apoa1-out
mkdir tmp

mpiexec_mpt -n 2 namd2 apoa1.namd  2>&1 | tee run02.log
OK
mpiexec_mpt -n 4 namd2 apoa1.namd  2>&1 | tee run04.log
OK
mpiexec_mpt -n 8 namd2 apoa1.namd  2>&1 | tee run08.log
OK
mpiexec_mpt -n 32 namd2 apoa1.namd  2>&1 | tee run32.log
OK
mpiexec_mpt -n 64 namd2 apoa1.namd  2>&1 | tee run64.log
OK

cd /p/home/scheinin/Samples/namd/f1atpase
mkdir tmp
Edit f1atpase.namd
outputname              /p/home/scheinin/Samples/namd/f1atpase/tmp/f1atpase

mpiexec_mpt -n 2 namd2 f1atpase.namd  2>&1 | tee run02.log
OK
mpiexec_mpt -n 4 namd2 f1atpase.namd  2>&1 | tee run04.log
OK
mpiexec_mpt -n 8 namd2 f1atpase.namd  2>&1 | tee run08.log
OK
mpiexec_mpt -n 32 namd2 f1atpase.namd  2>&1 | tee run32.log
OK
mpiexec_mpt -n 64 namd2 f1atpase.namd  2>&1 | tee run64.log
OK

 --------------------------------------------

Below is a possibility, but as of July 2015,
mpicc calls mpigcc which has
prefix=/p/home/apps/intel//impi/5.0.2.044
which does not exist.

export PREFIX=/p/home/apps/unsupported/namd/6.6.1-gcc49-intelmpi
mkdir $PREFIX
# There is no installation procedure, so build within $PREFIX location.
cd $PREFIX
tar xzf NAMD_2.10_Source.tar.gz
cd NAMD_2.10_Source
tar xf charm-6.6.1.tar
cd charm-6.6.1

# Need to add compilers to PATH.
# As of July 2015, there is no module for gcc version 4.9
export PATH=/apps/unsupported/gcc/4.9.2/bin:$PATH

# Need to add shared libraries to LD_LIBRARY_PATH.
export LD_LIBRARY_PATH=/apps/unsupported/gcc/4.9.2/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpc/1.0.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpfr/3.1.2/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/gmp/6.0.0a/lib:$LD_LIBRARY_PATH

export CXX=/apps/unsupported/gcc/4.9.2/bin/g++
export CXXFLAGS="-O2"
export CC=/apps/unsupported/gcc/4.9.2/bin/gcc
export CFLAGS="-O2"
export FC=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F77=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F90=/apps/unsupported/gcc/4.9.2/bin/gfortran
export LIBS=""
export LDFLAGS=""

export MPICC=mpicc
export MPIF77=mpif77
export MPIF90=mpif90
export MPICXX=mpicxx
export MPIEXE=mpirun
export MPIEXEC=mpirun

# different MPI
module unload mpt/2.11-sgi711r13
module load devel/mpi/intelmpi/15.0.1

# Compiling might use mpicc so set to GCC compiler.
# Change from default set by MPI module.
export I_MPI_CXX=`which g++`
export I_MPI_CC=`which gcc`
export I_MPI_FC=`which gfortran`
export I_MPI_F90=`which gfortran`
export I_MPI_F77=`which gfortran`

# Will build the MPI version rather than the multicore version.
./build charm++ mpi-linux-x86_64 --with-production -f90 gfortran 2>&1 | tee make.log

Error, see
emacs ./mpi-linux-x86_64/tmp/charmconfig.out &

look for  error OR Error OR ERROR  in make.log

Error in copy,
find . -name \*.mod
./mpi-linux-x86_64/tmp/charm.mod
./mpi-linux-x86_64/tmp/tracemod.mod
./mpi-linux-x86_64/tmp/pupmod.mod
# Just as a precaution, do by hand
cd mpi-linux-x86_64/include
mmm="charm.mod tracemod.mod pupmod.mod"
for i in $mmm ; do
ln -s ../tmp/$i $i
done
cd ../..

# Use -V to retain environment
qsub -q workq -l place=scatter:excl -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -V -I
source /usr/share/modules/init/bash
module unload mpt/2.11-sgi711r13
module load devel/mpi/intelmpi/15.0.1
echo $PREFIX
  cd $PREFIX/NAMD_2.10_Source/charm-6.6.1
  cd mpi-linux-x86_64/tests/charm++/megatest
which gcc ; which gfortran ; echo $I_MPI_CXX ; which mpirun
  make pgm
  mpirun -n 4 ./pgm
  mpirun -n 36 ./pgm
  mpirun -n 72 ./pgm


 --------------------------------------------

For each PREFIX

topdir=$PREFIX
cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *



IGNORE BELOW, NOTES FROM PREVIOUS ATTEMPTS BELOW


export PREFIX=/p/home/apps/unsupported/namd/6.6.1-intel
mkdir $PREFIX
cd $PREFIX
tar xzf NAMD_2.10_Source.tar.gz
cd NAMD_2.10_Source
tar xf charm-6.6.1.tar
cd charm-6.6.1


export CXX=icpc
export CXXFLAGS="-O2"
export CC=icc
export CFLAGS="-O2"
export CPPFLAGS=""
export LIBS=""
export LDFLAGS=""
export FC=ifort
export F77=ifort
export F90=ifort

export MPICC=mpicc
export MPIF77=mpif90
export MPICXX=mpicxx
export MPIEXE=mpiexec_mpt
export MPIEXEC=mpiexec_mpt
# Compiling might use mpicc so set to Intel compiler.
export MPICC_CC=icc
export MPICXX_CXX=icpc
export MPIF90_F90=ifort

# Will build the MPI version rather than the multicore version.
./build charm++ mpi-linux-x86_64 --with-production -f90 ifort 2>&1 | tee make.log

look for  error OR Error OR ERROR  in make.log

Error in copy of
/p/home/scheinin/build/namd-intel/src/NAMD_2.10_Source/charm-6.6.1
./mpi-linux-x86_64/tmp/charm.mod
./mpi-linux-x86_64/tmp/tracemod.mod
./mpi-linux-x86_64/tmp/pupmod.mod
# Just as a precaution, do by hand
cd mpi-linux-x86_64/include
mmm="charm.mod tracemod.mod pupmod.mod"
for i in $mmm ; do
ln -s ../tmp/$i $i
done

# Use -V to retain environment
qsub -q workq -l place=scatter:excl -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -V -I
  cd /p/home/scheinin/build/namd-intel/src/NAMD_2.10_Source/charm-6.6.1
  cd mpi-linux-x86_64/tests/charm++/megatest
  make pgm
  mpiexec_mpt -n 4 ./pgm

After namd failure for 8 processes, came back here and tried
  mpiexec_mpt -n 8 ./pgm
Same error as shown below for namd.

# Test megatest was successful.  This is important before continuing.

cd /p/home/scheinin/build/namd-intel/src/NAMD_2.10_Source
./config
# Possible options for <arch> on this machine based on uname: 
# Linux-x86_64-g++		    Linux-x86_64-MPI-pathcc
# Linux-x86_64-icc

cd /p/home/scheinin/build/namd-intel/src/NAMD_2.10_Source/arch

Edit Linux-x86_64.fftw
FFTDIR=/p/home/apps/unsupported/fftw-serial/2.1.5-intel

Edit Linux-x86_64.tcl
TCLDIR=/p/home/apps/unsupported/COST/tcltk/8.6/intel
TCLLIB=-L$(TCLDIR)/lib -ltcl8.6 -ldl -lpthread

cd /p/home/scheinin/build/namd-intel/src/NAMD_2.10_Source

./config Linux-x86_64-icc --charm-arch mpi-linux-x86_64 \
  --with-fftw --with-tcl \
  --cxx icpc --cc icc  2>&1 | tee config.output

cd Linux-x86_64-icc

make 2>&1 | tee make.log

Error repeated again and again:
  '-i-static' not supported
This option is equivalent to -static-intel which means that the
Intel-provided libraries are linked-in statically.
Cannot be used to --mcmodel=medium or -mcmodel=large

look for  error OR Error OR ERROR  in make.log
No errors reported.

# User would need to do
export LD_LIBRARY_PATH=/p/home/apps/unsupported/COST/tcltk/8.6/intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/fftw-serial/2.1.5-intel/lib:$LD_LIBRARY_PATH

cd /p/home/scheinin/Samples/namd
wget http://www.ks.uiuc.edu/Research/namd/utilities/f1atpase.tar.gz
wget http://www.ks.uiuc.edu/Research/namd/utilities/apoa1.tar.gz
tar xzf apoa1.tar.gz
tar xzf f1atpase.tar.gz

# Do not use -V to retain environment because this is a test
# as a normal user.
qsub -q workq -l place=scatter:excl -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -I

export PATH=/p/home/scheinin/build/namd-intel/src/NAMD_2.10_Source/Linux-x86_64-icc:$PATH

export LD_LIBRARY_PATH=/p/home/apps/unsupported/COST/tcltk/8.6/intel/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/p/home/apps/unsupported/fftw-serial/2.1.5-intel/lib:$LD_LIBRARY_PATH

cd /p/home/scheinin/Samples/namd

cd apoa1
export OMP_NUM_THREADS=1

Edit apoa1.namd
outputname           /p/home/scheinin/Samples/namd/apoa1/tmp/apoa1-out
mkdir tmp
mpiexec_mpt -n 32 namd2 apoa1.namd

Error:
Charm++> Running on MPI version: 3.0
Charm++> level of thread support used: MPI_THREAD_SINGLE (desired: MPI_THREAD_SINGLE)
Charm++> Running in non-SMP mode: numPes 32
Charm++> Using recursive bisection (scheme 3) for topology aware partitions
Converse/Charm++ Commit ID: v6.6.1-rc1-1-gba7c3c3-namd-charm-6.6.1-build-2014-Dec-08-28969
Charm++> MPI timer is synchronized
MPT: MPI_COMM_WORLD rank 29 has terminated without calling MPI_Finalize()
	aborting job
MPT: Received signal 9

Same error using
 mpiexec_mpt -n 32  /p/home/scheinin/build/namd-intel/src/NAMD_2.10_Source/Linux-x86_64-icc/namd2  apoa1.namd

mpiexec_mpt -n 2 namd2 apoa1.namd  2>&1 | tee run02.log
mpiexec_mpt -n 4 namd2 apoa1.namd  2>&1 | tee run04.log
mpiexec_mpt -n 8 namd2 apoa1.namd  2>&1 | tee run08.log
 -n 2 and -n 4 ran OK
 -n 8 failed

cd /p/home/scheinin/Samples/namd/f1atpase
mkdir tmp
Edit f1atpase.namd
outputname              /p/home/scheinin/Samples/namd/f1atpase/tmp/f1atpase

mpiexec_mpt -n 2 namd2 f1atpase.namd  2>&1 | tee run02.log
mpiexec_mpt -n 4 namd2 f1atpase.namd  2>&1 | tee run04.log
mpiexec_mpt -n 8 namd2 f1atpase.namd  2>&1 | tee run08.log
 -n 2 and -n 4 ran OK
 -n 8 failed

Same problem using full path of executable
mpiexec_mpt -np 8  /p/home/scheinin/build/namd-intel/src/NAMD_2.10_Source/Linux-x86_64-icc/namd2  f1atpase.namd  2>&1 | tee run08b.log

Note, version that works on garnet is same as topaz w.r.t.
no threading.

garnet:
Charm++> Running on MPI version: 2.2
Charm++> level of thread support used: MPI_THREAD_SINGLE (desired: MPI_THREAD_SI
NGLE)
Charm++> Running on non-SMP mode

topaz:
Charm++> Running on MPI version: 3.0
Charm++> level of thread support used: MPI_THREAD_SINGLE (desired: MPI_THREAD_SINGL
E)
Charm++> Running in non-SMP mode: numPes 4


===========  hints below
TEST NOTES
    Two example NAMD cases are provided.
        Reference:
wget http://www.ks.uiuc.edu/Research/namd/utilities/f1atpase.tar.gz
wget http://www.ks.uiuc.edu/Research/namd/utilities/apoa1.tar.gz

    # Example 1: apoa1 (32 cores)
    chugach01 % cd $ROOT/NAMD_${V}_Source
    chugach01 % tar xzf ../wrk/apoa1.tar.gz
    chugach01 % cp ../wrk/Run_apo_32.pbs apoa1
    chugach01 % cp ../wrk/apoa1.namd.notmp apoa1/apoa1.namd   # don't use /usr/tmp
    chugach01 % cd apoa1
    chugach01 % chmod u+x ./Run_apo_32.pbs 
    *** copper01 % qsub -I -A ERDCS97290STA \
        -l select=1:ncpus=32:mpiprocs=32:ompthreads=1,walltime=1:00:00 -q standard
    or
    ***chugach01 % qsub -I -A ERDCS97290STA -l ncpus=32,walltime=1:00:00 -q standard
    chugnet3 % cd $PBS_O_WORKDIR
    chugnet3 % ./Run_apo_32.pbs 
    chugnet3 % # The first run creates the FFTW training file and will be slow.
    chugnet3 % # When this finishes, run it again for a better time.
    chugnet3 % ./Run_apo_32.pbs 
    Times expected:
    WallClock: 59.096245  CPUTime: 59.096245  Memory: 905.320312 MB     # Chugach
    WallClock: 36.113220  CPUTime: 36.113220  Memory: 965.320312 MB     # Chugach

    # Example: apoa1 (128 cores)
    chugach01 % cp ../../wrk/Run_apo_128.pbs .
    chugach01 % chmod u+x ./Run_apo_128.pbs .
    *** copper01 % qsub -I -A ERDCS97290STA \
        -l select=4:ncpus=32:mpiprocs=32:ompthreads=1,walltime=1:00:00 -q standard
    or
    ***chugach01 % qsub -I -A ERDCS97290STA -l ncpus=128,walltime=1:00:00 -q standard
    chugnet3 % cd $PBS_O_WORKDIR
    chugnet3 % ./Run_apo_128.pbs 
    chugnet3 % ./Run_apo_128.pbs 
    Times expected:
    WallClock: 20.302324  CPUTime: 20.302324  Memory: 3702.699219 MB    # Chugach
    WallClock: 12.208100  CPUTime: 12.208101  Memory: 3666.699219 MB    # Chugach

=========== hints above




Ed has files
apoa1.tar.gz  f1atpase.tar.gz  NAMD_2.9_Source.tar.gz  tcl8.5.9-crayxe.tar.gz

README.ORS below
> cat README.ORS
INSTALLATION:

PRODUCT  namd

VERSION  2.9

INSTALLER(S)  Ed Kornkven

DATE INSTALLED  December 13, 2012

CONTACT PERSON(S)  Ed Kornkven

DESCRIPTION
     NAMD is a molecular dynamics code.

REASON
    This is a user-requested application.

SOURCE
    http://www.ks.uiuc.edu/Development/Download/download.cgi?PackageName=NAMD
    http://www.ks.uiuc.edu/Research/namd/libraries/tcl8.5.9-crayxe.tar.gz

INSTALL NOTES

    chugach01 % PKG=namd
    chugach01 % V=2.9
    chugach01 % sudo mkdir -p /usr/local/usp/${PKG}/${V}-gnu/wrk
    Enter password:
    chugach01 % sudo chown -Rh kornkven:staff /usr/local/usp/${PKG}
    chugach01 % cd /usr/local/usp/${PKG}/${V}-gnu/wrk

    # Now build NAMD
    chugach01 % ./build_${PKG}.sh

    # Set permissions
    package=namd
    version=2.9-gnu
    cd /usr/local/usp/${package}/${version}     # To confirm variable settings
    chmod -R go+rX /usr/local/usp/${package}/${version}
    chmod -R o-rwx /usr/local/usp/${package}/${version}/wrk
    chmod go+rX /usr/local/usp/${package} 
    chmod 755 /usr/local/usp/modulefiles/${package}/${version}
    chmod 755 /usr/local/usp/modulefiles/${package}/.version
    

TEST NOTES
    Two example NAMD cases are provided.
        Reference:
        http://www.ks.uiuc.edu/Research/namd/utilities/f1atpase.tar.gz
        http://www.ks.uiuc.edu/Research/namd/utilities/apoa1.tar.gz

    # Example 1: apoa1 (32 cores)
    chugach01 % cd $ROOT/NAMD_${V}_Source
    chugach01 % tar xzf ../wrk/apoa1.tar.gz
    chugach01 % cp ../wrk/Run_apo_32.pbs apoa1
    chugach01 % cp ../wrk/apoa1.namd.notmp apoa1/apoa1.namd   # don't use /usr/tmp
    chugach01 % cd apoa1
    chugach01 % chmod u+x ./Run_apo_32.pbs 
    *** copper01 % qsub -I -A ERDCS97290STA \
        -l select=1:ncpus=32:mpiprocs=32:ompthreads=1,walltime=1:00:00 -q standard
    or
    ***chugach01 % qsub -I -A ERDCS97290STA -l ncpus=32,walltime=1:00:00 -q standard
    chugnet3 % cd $PBS_O_WORKDIR
    chugnet3 % ./Run_apo_32.pbs 
    chugnet3 % # The first run creates the FFTW training file and will be slow.
    chugnet3 % # When this finishes, run it again for a better time.
    chugnet3 % ./Run_apo_32.pbs 
    Times expected:
    WallClock: 59.096245  CPUTime: 59.096245  Memory: 905.320312 MB     # Chugach
    WallClock: 36.113220  CPUTime: 36.113220  Memory: 965.320312 MB     # Chugach

    # Example: apoa1 (128 cores)
    chugach01 % cp ../../wrk/Run_apo_128.pbs .
    chugach01 % chmod u+x ./Run_apo_128.pbs .
    *** copper01 % qsub -I -A ERDCS97290STA \
        -l select=4:ncpus=32:mpiprocs=32:ompthreads=1,walltime=1:00:00 -q standard
    or
    ***chugach01 % qsub -I -A ERDCS97290STA -l ncpus=128,walltime=1:00:00 -q standard
    chugnet3 % cd $PBS_O_WORKDIR
    chugnet3 % ./Run_apo_128.pbs 
    chugnet3 % ./Run_apo_128.pbs 
    Times expected:
    WallClock: 20.302324  CPUTime: 20.302324  Memory: 3702.699219 MB    # Chugach
    WallClock: 12.208100  CPUTime: 12.208101  Memory: 3666.699219 MB    # Chugach
    
    Results are compariable to NAMD 2.7 and 2.8 times.
	

LICENSING NOTES
    Developer asks agreement with their license for use.  The agreement is
    displayed in the module for the package.

MISCELLANEOUS


README.ORS above

Make.charm below

> cat Make.charm
# Set CHARMBASE to the top level charm directory.
# The config script will override this setting if there is a directory
# called charm-6.4.0 or charm in the NAMD base directory.

CHARMBASE = $(PWD)/charm-6.4.0


Make.charm above

build_namd.sh below
> cat build_namd.sh
#!/bin/bash

#
# There are different instrctions from different places for best Cray
# build configuration.  This one was from the Charm group, there are
# other ideas on the NAMD wiki at:
#   http://www.ks.uiuc.edu/Research/namd/wiki/index.cgi?NamdOnCrayXE6
#   and
#   http://www.ks.uiuc.edu/Research/namd/wiki/index.cgi?NamdOnCrayXT5
#
# For example, the NamdOnCrayXE6 advises *removing* the rca library.
# Someday maybe we will test all these out, but today I'm in a hurry.
# E. Kornkven, Dec 2012
#

#
# Base location for this installation
PKG=namd
V=2.9
ROOT=/usr/local/usp/${PKG}/${V}-gnu
    #ROOT=$(pwd)/..
    #echo ""
    #echo "***"
    #echo "*** Using test installation dir: $ROOT !!!"
    #echo "***"
    #echo ""

#
# Build with gcc
source /opt/modules/default/init/bash
module swap $(module -t list 2>&1 | grep PrgEnv) PrgEnv-gnu
module load rca                 # Recommended by Charm developers (see note above)
module load craype-hugepages8M  # Recommended by Charm developers (see note above)


cd $ROOT
tar xzf wrk/NAMD_${V}_Source.tar.gz 

#
# Set up Tcl (supplied on NAMD site)
cd $ROOT/NAMD_${V}_Source
mkdir depend
cp ../wrk/tcl8.5.9-crayxe.tar.gz depend
cd depend
tar xzf tcl8.5.9-crayxe.tar.gz

cd $ROOT/NAMD_${V}_Source/arch
cp CRAY-XT.tcl CRAY-XT.tcl.orig
cp $ROOT/wrk/CRAY-XE.tcl CRAY-XT.tcl
    ### diff CRAY-XT.tcl CRAY-XT.tcl.orig 
    ### 1c1
    ### < TCLDIR=$(PWD)/../depend/tcl8.5.9-crayxe
    ### ---
    ### > TCLDIR=$(HOME)/tcl
    ### 3c3
    ### < TCLLIB=-L$(TCLDIR)/lib -ltcl8.5 -ldl
    ### ---
    ### > TCLLIB=-L$(TCLDIR)/lib -ltcl8.3 -ldl

#
# Set up FFTW (already on XE6)
cd $ROOT/NAMD_${V}_Source/arch
module load fftw/2.1.5.4
cp CRAY-XT.fftw CRAY-XT.fftw.orig
cp $ROOT/wrk/CRAY-XE.fftw CRAY-XT.fftw
    ### diff CRAY-XT.fftw CRAY-XT.fftw.orig 
    ### 2c2
    ### < FFTDIR=/opt/fftw/2.1.5.2
    ### ---
    ### > FFTDIR=$(HOME)/fftw/crayxt4

#
# Build Charm
cd $ROOT/NAMD_${V}_Source
cp Make.charm Make.charm.orig 
cp $ROOT/wrk/Make.charm Make.charm
    ### diff Make.charm Make.charm.orig 
    ### 5c5
    ### < CHARMBASE = $(PWD)/charm-6.4.0
    ### ---
    ### > CHARMBASE = /Projects/namd2/charm-6.4.0

tar xf charm-6.4.0.tar
cd charm-6.4.0
# The following build command was recommended by the NAMD Wiki at: 
#   http://www.ks.uiuc.edu/Research/namd/wiki/index.cgi?NamdOnCrayXE6
./build charm++ mpi-crayxt -j8 2>&1 | tee compile.eo

#
# Build NAMD
cd $ROOT/NAMD_${V}_Source
./config CRAY-XT-g++ 2>&1 | tee config.eo
cd CRAY-XT-g++/
make 2>&1 | tee make.eo


build_namd.sh above

 ---------------

gcc 4.9

qsub -q workq -l place=scatter:excl -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -I

# Need to add compilers to PATH.
export PATH=/apps/unsupported/gcc/4.9.2/bin:$PATH

# Need to add shared libraries to LD_LIBRARY_PATH.
export LD_LIBRARY_PATH=/apps/unsupported/gcc/4.9.2/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpc/1.0.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpfr/3.1.2/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/gmp/6.0.0a/lib:$LD_LIBRARY_PATH

export CXX=/apps/unsupported/gcc/4.9.2/bin/g++
export CXXFLAGS="-fPIC -O2"
export CC=/apps/unsupported/gcc/4.9.2/bin/gcc
export CFLAGS="-fPIC -O2"
export CPPFLAGS=""
export LIBS=""
export LDFLAGS=""
export FC=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F77=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F90=/apps/unsupported/gcc/4.9.2/bin/gfortran
export FFLAGS=""

./build charm++ mpi-linux-x86_64 --with-production -f90 gfortran 2>&1 | tee make.log

Error in copy of
/p/home/scheinin/build/namd-intel/src/NAMD_2.10_Source/charm-6.6.1
./mpi-linux-x86_64/tmp/charm.mod
./mpi-linux-x86_64/tmp/tracemod.mod
./mpi-linux-x86_64/tmp/pupmod.mod
# Just as a precaution, do by hand
cd mpi-linux-x86_64/include
mmm="charm.mod tracemod.mod pupmod.mod"
for i in $mmm ; do
ln -s ../tmp/$i $i
done

  cd /p/home/scheinin/build/charm-gcc49/src/charm
  cd mpi-linux-x86_64/tests/charm++/megatest
  make pgm
  mpiexec_mpt -n 4 ./pgm

 charm@cs.illinois.edu
 ppl@cs.illinois.edu
 kale@illinois.edu

SGI Altix ICE-X


export MPICC=mpiicc
export MPIF77=mpiifort
export MPICXX=mpiicpc
export MPIEXE=mpirun
export MPIEXEC=mpirun

export CXX=icpc
export CXXFLAGS="-O2"
export CC=icc
export CFLAGS="-O2"
export CPPFLAGS=""
export LIBS=""
export LDFLAGS=""
export FC=ifort
export F77=ifort
export F90=ifort

./build charm++ mpi-linux-x86_64 --with-production -f90 ifort 2>&1 | tee make.log
> module list
Currently Loaded Modulefiles:
  1) pbs/12.2.4.142262               6) intel-tbb-15/15.0.1.133
  2) intel-cc-15/15.0.1.133          7) intel-ipp-15/15.0.1.133
  3) intel-fc-15/15.0.1.133          8) intel-compilers-15/15.0.1.133
  4) intel-debug-15/15.0.1.133       9) devel/mpi/intelmpi/15.0.2
  5) intel-mkl-15/15.0.1.133

checking "whether linker works"... 
checking "Native C++ compiler as"... "g++ -m64 -fPIC "

qsub -q workq -l place=scatter:excl -l select=2:ncpus=36:mpiprocs=36,walltime=1:00:00 -V -I

source /usr/share/modules/init/bash

module unload mpt
module load  devel/mpi/intelmpi/15.0.2

  cd /p/home/scheinin/build/charm-impi-intel/src/charm
  cd mpi-linux-x86_64/tests/charm++/megatest
  make pgm
  mpirun -n 4 ./pgm

 mpirun -n 72 ./pgm worked OK

spirit has
#Run program
setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/apps/intel/icsxe/2013.0.028/composer_xe_2013.1.117/compiler/lib/intel64
#setenv OMP_NUM_THREADS 1
setenv MPI_DSM_VERBOSE 1

setenv MPI_MEMMAP_OFF true   <<<<<<<<<<<< absolutely necessary for SGI MPT

setenv MPI_DSM_VERBOSE 1
setenv MPI_MEMMAP_OFF true


