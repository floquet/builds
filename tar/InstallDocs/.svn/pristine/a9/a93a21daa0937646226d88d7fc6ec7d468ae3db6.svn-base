

HDF4

Available from
http://www.hdfgroup.org/products/hdf4/

===========================================================
February 7, 2017, topaz, below.

If building shared libraries, cannot enable Fortran.
Can choose one or the other and in this case used "--disable-fortran"
in configure.

   -------------------------------------------
Intel compiler, below.
export PATH=/apps/gnu_compiler/6.1.0/bin:$PATH
module unload compiler/intel/15.0.3
module load compiler/intel/17.0.1

export HDF4_VERSION=4.2.12
export SZIP_VERSION=2.1
export COMPILER_VERSION=17.0.1
# Need to have libjpeg-devel installed.

export SZIP_DIR=/apps/unsupported/szip/$SZIP_VERSION-intel-$COMPILER_VERSION

export TMPDIR=${WORKDIR}/tmp

# nonetcdf is for use with NCARG with NCL

export PREFIX=/apps/unsupported/hdf4/${HDF4_VERSION}-intel-${COMPILER_VERSION}
# OR
export PREFIX=/apps/unsupported/hdf4/${HDF4_VERSION}-nonetcdf-intel-${COMPILER_VERSION}

export BUILD_DIR=/p/home/scheinin/build/hdf4/${HDF4_VERSION}-intel-${COMPILER_VERSION}
# OR
export BUILD_DIR=/p/home/scheinin/build/hdf4/${HDF4_VERSION}-nonetcdf-intel-${COMPILER_VERSION}

# For check
echo PREFIX=$PREFIX ; echo BUILD_DIR=$BUILD_DIR

mkdir $PREFIX
mkdir $BUILD_DIR

export CXX=icpc
export CC=icc
export FC=ifort
export F77=ifort
export F90=ifort
export CFLAGS="-O2 -fPIC -gcc-name=`which gcc`"
export CXXFLAGS="-O2 -fPIC -gxx-name=`which g++`"
export LDFLAGS="-O2 -gcc-name=`which gcc` -gxx-name=`which g++`"

# check
echo $SZIP_DIR ; ls $SZIP_DIR

# Note, cannot be used for building NetCDF when there is --enable-netcdf
 ./configure --prefix=$PREFIX  \
 --with-jpeg=/usr  --disable-fortran \
 --with-szlib=$SZIP_DIR  --enable-shared --enable-static --enable-netcdf
# OR (depending on whether prefix has nonetcdf)
 ./configure --prefix=$PREFIX  \
 --with-jpeg=/usr  --disable-fortran \
 --with-szlib=$SZIP_DIR  --enable-shared --enable-static --disable-netcdf

make 2>&1 | tee make.log
make check 2>&1 | tee check.log
# Passed
find $PREFIX
make install
find $PREFIX
make clean

Intel compiler, above.
   -------------------------------------------
Gnu compiler, below.
module unload compiler/intel/15.0.3
module load compiler/gcc/6.1.0

export HDF4_VERSION=4.2.12
export SZIP_VERSION=2.1
export COMPILER_VERSION=6.1.0
# Need to have libjpeg-devel installed.

export SZIP_DIR=/apps/unsupported/szip/$SZIP_VERSION-gcc-$COMPILER_VERSION

export TMPDIR=${WORKDIR}/tmp

# nonetcdf is for use with NCARG

export PREFIX=/apps/unsupported/hdf4/${HDF4_VERSION}-gcc-${COMPILER_VERSION}
# OR
export PREFIX=/apps/unsupported/hdf4/${HDF4_VERSION}-nonetcdf-gcc-${COMPILER_VERSION}

export BUILD_DIR=/p/home/scheinin/build/hdf4/${HDF4_VERSION}-gcc-${COMPILER_VERSION}
# OR
export BUILD_DIR=/p/home/scheinin/build/hdf4/${HDF4_VERSION}-nonetcdf-gcc-${COMPILER_VERSION}

# For check
echo PREFIX=$PREFIX ; echo BUILD_DIR=$BUILD_DIR

mkdir $PREFIX
mkdir $BUILD_DIR

export CXX=g++
export CC=gcc
export FC=gfortran
export F77=gfortran
export F90=gfortran
export CFLAGS="-O2 -fPIC"
export CXXFLAGS="-O2 -fPIC"
export LDFLAGS="-O2"

# Note, cannot be used for building NetCDF when there is --enable-netcdf
 ./configure --prefix=$PREFIX  \
 --with-jpeg=/usr  --disable-fortran \
 --with-szlib=$SZIP_DIR  --enable-shared --enable-static --enable-netcdf
# OR (depending on whether prefix has nonetcdf)
 ./configure --prefix=$PREFIX  \
 --with-jpeg=/usr  --disable-fortran \
 --with-szlib=$SZIP_DIR  --enable-shared --enable-static --disable-netcdf

make 2>&1 | tee make.log
make check 2>&1 | tee check.log
# Passed
find $PREFIX
make install
find $PREFIX
make clean

Gnu compiler, above.
   -------------------------------------------

# Very important, NCARG sometimes looks for files "hdf.h"
# and sometimes <hdf/hdf.h> so need to put include files into
# subdirectory hdf/ and need to have both levels in list
# of include directories during compilation.

cd $PREFIX
mv include hdf
mkdir include
mv hdf include

# Fix permissions.

topdir=$PREFIX
cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

February 7, 2017, topaz, above.
===========================================================

As of Dec. 2009 the most recent version is 4.2r4

The overall structure of the file hierarchy is

/usr/local/usp/hdf4/4.2r4
/usr/local/usp/hdf4/4.2r4/bin
/usr/local/usp/hdf4/4.2r4/include
/usr/local/usp/hdf4/4.2r4/lib
/usr/local/usp/hdf4/4.2r4/share
/usr/local/usp/hdf4/4.2r4/src
/usr/local/usp/hdf4/4.2r4/src/HDF4.2r4.tar.gz

/usr/local/usp/hdf4/4.2r4-nonetcdf
/usr/local/usp/hdf4/4.2r4-nonetcdf/bin
/usr/local/usp/hdf4/4.2r4-nonetcdf/include
/usr/local/usp/hdf4/4.2r4-nonetcdf/lib
/usr/local/usp/hdf4/4.2r4-nonetcdf/share
/usr/local/usp/hdf4/4.2r4-nonetcdf/src
/usr/local/usp/hdf4/4.2r4-nonetcdf/src/HDF4.2r4.tar.gz


HDF4.2r4, below

# diamond:
module load mpt/1.24
module load cc_11.0.074
module load fc_11.0.074
module load mkl_10.1.0.015

export CC=icc
export F77=ifort
export CXX=icc

export TMPDIR=${WORKDIR}/tmp

Below for ncarg-4.4.1
cd /usr/local/usp/ncarg/HDF4.2r4/src/HDF4.2r4
 ./configure --prefix=/usr/local/usp/ncarg/HDF4.2r4
Above for ncarg-4.4.1
Below for ncarg-5.1.0 with NCL
cd /usr/local/usp/ncarg/HDF4.2r4-nonetcdf/src/HDF4.2r4
 ./configure --prefix=/usr/local/usp/ncarg/HDF4.2r4-nonetcdf \
  --disable-netcdf
Above for ncarg-5.1.0 with NCL

# Cannot build Fortran shared library (intrinsic in the configure file,
independent of platform) so only static is built.

                        Configure Summary
                       =================

Compiling Options:
------------------
               Compilation Mode:  Default
                     C Compiler:  icc
                         CFLAGS:   -O
                       CPPFLAGS:  -I/usr/include/rpc  -DBIG_LONGS -DSWAP 
                        LDFLAGS:  
               Shared Libraries:  no
               Static Libraries:  yes

Languages:
----------
                        Fortran:  Yes
               Fortran Compiler:  ifort
                         FFLAGS:   

Features:
---------
               SZIP compression:  disabled

HDF support for NetCDF-3 APIs:
------------------------------
                    HDF4-NetCDF:  Yes (No for HDF4.2r4-nonetcdf)
# End of Configure Summary

make
make check 2>&1 | tee check.log
# Passed
make install
make clean

# Also, very important, NCARG sometimes looks for files "hdf.h"
# and sometimes <hdf/hdf.h> so need to put include files into
# subdirectory hdf/ and need to have both levels in list
# of include directories during compilation.

cd /usr/local/usp/ncarg/HDF4.2r4[-nonetcdf]
mv include hdf
mkdir include
mv hdf include

diamond above, jade below

jade:

module list
 13) pgi/9.0.4
 14) xt-libsci/10.4.0
 15) xt-mpt/3.5.0
 16) xt-pe/2.2.41A_PS05
 18) PrgEnv-pgi/2.2.41A_PS05
 21) xtpe-barcelona

export CXX=CC
export CC=cc
export FC=ftn
export F77=ftn
export F90=ftn

export TMPDIR=${WORKDIR}/tmp

Below for ncarg-4.4.1
cd /usr/local/usp/hdf4/4.2r4/src/HDF4.2r4
 ./configure --prefix=/usr/local/usp/hdf4/4.2r4 \
  --with-szlib=/usr/local/usp/szip/2.1-cnl
Above for ncarg-4.4.1
Below for ncarg-5.1.0 with NCL
cd /usr/local/usp/hdf4/4.2r4--nonetcdf/src/HDF4.2r4
 ./configure --prefix=/usr/local/usp/hdf4/4.2r4-nonetcdf \
  --with-szlib=/usr/local/usp/szip/2.1-cnl \
  --disable-netcdf
Above for ncarg-5.1.0 with NCL

# Cannot build Fortran shared library (intrinsic in the configure file,
# independent of platform) so only static is built.

For version with netcdf
                       Configure Summary
                       =================

Compiling Options:
------------------
               Compilation Mode:  Default
                     C Compiler:  cc
                         CFLAGS:   -fPIC -O
                       CPPFLAGS:  -I/usr/include/rpc  -I/usr/local/usp/szip/2.1-cnl/include -DBIG_LONGS -DSWAP 
                        LDFLAGS:   -L/usr/local/usp/szip/2.1-cnl/lib
               Shared Libraries:  no
               Static Libraries:  yes

Languages:
----------
                        Fortran:  Yes
               Fortran Compiler:  ftn
                         FFLAGS:   -fPIC 

Features:
---------
               SZIP compression:  enabled with encoder

HDF support for NetCDF-3 APIs:
------------------------------
                    HDF4-NetCDF:  Yes
End of Configure Summary for version with netcdf

For version without netcdf
                       Configure Summary
                       =================

Compiling Options:
------------------
               Compilation Mode:  Default
                     C Compiler:  cc
                         CFLAGS:   -fPIC -O
                       CPPFLAGS:  -I/usr/include/rpc  -I/usr/local/usp/szip/2.1-cnl/include -DBIG_LONGS -DSWAP 
                        LDFLAGS:   -L/usr/local/usp/szip/2.1-cnl/lib
               Shared Libraries:  no
               Static Libraries:  yes

Languages:
----------
                        Fortran:  Yes
               Fortran Compiler:  ftn
                         FFLAGS:   -fPIC 

Features:
---------
               SZIP compression:  enabled with encoder

HDF support for NetCDF-3 APIs:
------------------------------
                    HDF4-NetCDF:  No
End of Configure Summary for version without netcdf

make
make check 2>&1 | tee check.log
# Passed
make install
make clean

# Also, very important, NCARG sometimes looks for files "hdf.h"
# and sometimes <hdf/hdf.h> so need to put include files into
# subdirectory hdf/ and need to have both levels in list
# of include directories during compilation.

cd /usr/local/usp/hdf4/4.2r4[-nonetcdf]
mv include hdf
mkdir include
mv hdf include

HDF4.2r4, above

 --- garnet Oct. 18, 2010 , below ---

 module list
  4) pgi/10.6.0
  5) xt-libsci/10.4.9
  6) xt-mpt/5.1.2
 12) xpmem/0.1-2.0301.22550.3.7.gem
 13) xe-sysroot/3.1.37E
 14) xt-asyncpe/4.5
 15) PrgEnv-pgi/3.1.37E
 16) xtpe-mc8

4.2.5  4.2.5-nonetcdf

export CXX=CC
export CC=cc
export FC=ftn
export F77=ftn
export F90=ftn

export TMPDIR=${WORKDIR}/tmp

In one or the other prefix directories
mkdir bin  include  lib  share

Note, needs jpeg development library.

cd /usr/local/usp/hdf4/4.2.5/src/hdf-4.2.5

 ./configure --prefix=/usr/local/usp/hdf4/4.2.5 \
  --with-szlib=/usr/local/usp/szip/2.1-cle

make 2>&1 | tee make.log
make check 2>&1 | tee check.log
# Passed
make install
make clean

cd /usr/local/usp/hdf4/4.2.5-nonetcdf/src/hdf-4.2.5

 ./configure --prefix=/usr/local/usp/hdf4/4.2.5-nonetcdf \
  --with-szlib=/usr/local/usp/szip/2.1-cle \
  --disable-netcdf

make 2>&1 | tee make.log
make check 2>&1 | tee check.log
# Passed
make install
make clean

# Also, very important, NCARG sometimes looks for files "hdf.h"
# and sometimes <hdf/hdf.h> so need to put include files into
# subdirectory hdf/ and need to have both levels in list
# of include directories during compilation.

cd /usr/local/usp/hdf4/4.2.5[-nonetcdf]
mv include hdf
mkdir include
mv hdf include


Need to change permissions.

cd /usr/local/usp/hdf4
Make sure last minute changes such as the README file are readable.

find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *
# In each src/ directory
chmod -R o-rwx *
cd /usr/local/usp/hdf4
chown -R scheinin.staff *

 --- garnet Oct. 18, 2010 , above ---

One example, Intel compiler

export HDF4_VERSION=4.2.11
export SZIP_VERSION=2.1

module swap PrgEnv-pgi PrgEnv-intel
# OR
# For having Intel be compatible with a recent GNU compiler suite
export INTEL_VERSION=15.0.6.233
export GNU_VERSION=5.2.0
module swap PrgEnv-pgi PrgEnv-intel
module unload intel  # Whatever is the default at the time.
module load gcc/$GNU_VERSION
export INTEL_VERSION=15.0.6.233   # Unloading of compiler cancels this.
module load intel/$INTEL_VERSION
export PREFIX=/usr/local/usp/hdf4/${HDF4_VERSION}-intel-${INTEL_VERSION}
# OR
export PREFIX=/usr/local/usp/hdf4/${HDF4_VERSION}-nonetcdf-intel-${INTEL_VERSION}
mkdir $PREFIX

export CXX=CC
export CC=cc
export FC=ftn
export F77=ftn
export F90=ftn
export CFLAGS="-O2 -fPIC -gcc-name=`which gcc`"
export CXXFLAGS="-O2 -fPIC -gxx-name=`which g++`"
export LDFLAGS="-O2 -gcc-name=`which gcc` -gxx-name=`which g++`"

cd /u/scheinin/build/hdf4-intel/hdf-4.2.11
export PREFIX=/usr/local/usp/hdf4/4.2.11-intel-14.0.2.144
# OR
# prefix already defined above

# When running under ccmlogin,
export LD=`which ld`
 ./configure --prefix=$PREFIX  --with-szlib=/usr/local/usp/szip/$SZIP_VERSION-intel-14.0.2.144  --enable-static --enable-netcdf
# OR
 ./configure --prefix=$PREFIX  --with-szlib=/usr/local/usp/szip/$SZIP_VERSION-intel-$INTEL_VERSION  --enable-static --enable-netcdf

cd /lustre/home2/u/scheinin/build/hdf4-nonetcdf-intel/hdf-4.2.11
export PREFIX=/usr/local/usp/hdf4/4.2.11-nonetcdf-intel-14.0.2.144
# OR
# prefix already defined above

# When running under ccmlogin,
export LD=`which ld`
 ./configure --prefix=$PREFIX  --with-szlib=/usr/local/usp/szip/$SZIP_VERSION-intel-14.0.2.144  --enable-static --disable-netcdf
# OR
 ./configure --prefix=$PREFIX  --with-szlib=/usr/local/usp/szip/$SZIP_VERSION-intel-$INTEL_VERSION  --enable-static --disable-netcdf

The script configure tries running an executable but that
fails because now cc generates CPU-specific executables.
I only saw this problem with the Intel compiler, not PGI
nor gcc.  This may be relevant to configure scripts of
other applications.  Removing the test of running the
executable solved the problem.
Could also compile in an interactive PBS job using ccm mode.

Also, if I'm not mistaken, configure fails because the command
icc -v
returns the version
but the command actually used is
cc -v
(compiler wrapper cc) and it tries to compile and load
though there is no file and returns an error value for $? .
The configure script then aborts.  While I'm not certain
of the logic hdf4 configure, changing the order of -V and -v
in the tests solved the problem.

One odd thing that I've seen only a few times in configure
scripts, is that even though configuration variables are
clearly oriented towards static linking, the linking command
converts -lsz  to
  /usr/local/usp/szip/2.1-intel-14.0.2.144/lib/libsz.so
It was necessary to temporarily have libsz.so point to libsz.a.

Also, an executable generated by this build (ncgen), sees a
syntax error in the parameter file provided by the source.
Needed to skip building in subdirectory ncgen.

# Also, very important, NCARG sometimes looks for files "hdf.h"
# and sometimes <hdf/hdf.h> so need to put include files into
# subdirectory hdf/ and need to have both levels in list
# of include directories during compilation.

cd $PREFIX
mv include hdf
mkdir include
mv hdf include

Need to change permissions.
