
Source
http://glaros.dtc.umn.edu/gkhome/metis/parmetis/download

   %%% Generalized install below. %%%

export INTEL_VERSION=15.0.2
OR
export INTEL_VERSION=15.0.3
OR
export INTEL_VERSION=16.0.0

export METIS_VERSION=5.1.0
export PARMETIS_VERSION=4.0.3

export PATH=/p/home/apps/unsupported/cmake/3.2.3-intel/bin:$PATH

module swap compiler/intel compiler/intel/$INTEL_VERSION

export WORDSIZE=32
OR
export WORDSIZE=64

export MPI_VENDOR=sgimpt
OR
export MPI_VENDOR=intelmpi

export PREFIX=/p/home/apps/unsupported/metis-${WORDSIZE}bit/${METIS_VERSION}-intel-${INTEL_VERSION}
mkdir $PREFIX

# Build metis and parmetis in same subdirectory metis-${WORDSIZE}bit.
BUILD_DIR=/p/home/scheinin/build/metis-${WORDSIZE}bit/${METIS_VERSION}-intel-${INTEL_VERSION}
mkdir $BUILD_DIR
cd $BUILD_DIR

# checking
find $PREFIX ; pwd ; icc --version

# Next lines will change as versions change.
# October 5, 2015 most recent versions were
wget http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/metis-5.1.0.tar.gz
wget http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/parmetis-4.0.3.tar.gz

tar xzf metis-${METIS_VERSION}.tar.gz
cd metis-${METIS_VERSION}

For 64bit versions, compile with
metis-5.1.0/include/metis.h
#define IDXTYPEWIDTH 64
#define REALTYPEWIDTH 64

# Important to define CXX, otherwise set to c++.
export CXX=icpc
make config shared=1 cc=icc prefix=$PREFIX
make 2>&1 | tee make_shared.log
make install
make clean
make config cc=icc prefix=$PREFIX
make 2>&1 | tee make_static.log
make install

Second cycle above makes libmetis.a .
After first cycle, "ldd mpmetis" shows that it uses
dynamic library libmetis.so .
After second cycle, "ldd mpmetis" show that it uses
some O/S dynamic libraries but not anything in $PREFIX.

export PREFIX=/p/home/apps/unsupported/parmetis-${WORDSIZE}bit/${PARMETIS_VERSION}-intel-${INTEL_VERSION}-${MPI_VENDOR}
mkdir $PREFIX
   
export I_MPI_CXX=icpc 
export I_MPI_CC=icc 
export I_MPI_FC=ifort 
export I_MPI_F90=ifort 
export I_MPI_F77=ifort 
export MPICXX_CXX=icpc 
export MPICC_CC=icc 
export MPIF90_F90=ifort 

export CXX=mpicxx
export CXXFLAGS="-O2 -fPIC"
export CC=mpicc
export CFLAGS="-O2 -fPIC"
export CPPFLAGS=""
export LIBS="-lmpi"
export LDFLAGS=""
export FC=mpif90
export F77=mpif90
export F90=mpif90

cd $BUILD_DIR
tar xzf parmetis-${PARMETIS_VERSION}.tar.gz

# Edit parmetis-${PARMETIS_VERSION}/metis/include/metis.h and set 32 or 64 bit.
# Only needs editing if using 64 bits.

mkdir $BUILD_DIR/build_parmetis
cd $BUILD_DIR/build_parmetis
ccmake ../parmetis-${PARMETIS_VERSION}
c  (configure)

edit CMakeCache.txt
CMAKE_INSTALL_PREFIX:PATH="explict value of $PREFIX"
//path to GKlib
GKLIB_PATH:PATH="explict value of $BUILD_DIR/parmetis-${PARMETIS_VERSION}/metis/GKlib"
//path to METIS
METIS_PATH:PATH="explict value of $BUILD_DIR/metis-${METIS_VERSION}
CMAKE_CXX_FLAGS:STRING='-O2 -fPIC -openmp -lmpi '
CMAKE_C_FLAGS:STRING='-O2 -fPIC -openmp -lmpi '
CMAKE_VERBOSE_MAKEFILE:BOOL=TRUE

Should find the CMakeCache.txt specifies the Intel compilers.

ccmake ../parmetis-${PARMETIS_VERSION}
c  (configure)
c  (configure)
g  (generate)

make 2>&1 | tee make_static.log
make install

Static libparmetis.a is built, no libparmetis.so .
Executable parmetis uses shared libraries such as mpt-sgi711r13//lib/libmpi.so .

edit CMakeCache.txt
Add line
SHARED:BOOL=TRUE

ccmake ../parmetis-${PARMETIS_VERSION}
c  (configure)
g  (generate)

make 2>&1 | tee make_shared.log

# Error below did not occur and editing not done.
#Edit ./libparmetis/CMakeFiles/parmetis.dir/link.txt
#change from
# ../libmetis/libmetis.a 
#change to
# /p/home/apps/unsupported/parmetis-32bit/4.0.3-intel/lib/libmetis.so
#
#failed to build executables
#ld: warning: libmetis.so, needed by ../libparmetis/libparmetis.so

# Did not do "make install" but only
cp libparmetis/libparmetis.so $PREFIX/lib/
chmod g+rwx,o+rx $PREFIX/lib/libparmetis.so

Change permissions at destination.

   %%% Generalized install above. %%%

June 3, 2015
wget http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/metis-5.1.0.tar.gz
wget http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/parmetis-4.0.3.tar.gz

Note, need to log-out and log-in again to undo PATH set for cmake.

For 64bit versions, compiled with
metis-5.1.0/include/metis.h
#define IDXTYPEWIDTH 64
#define REALTYPEWIDTH 64

export PATH=/p/home/apps/unsupported/cmake/3.2.3-intel/bin:$PATH
export PREFIX=/p/home/apps/unsupported/metis-64bit/4.0.3-intel
mkdir $PREFIX

# edit include/metis.h  32->64

# Important to define CXX, otherwise set to c++.
export CXX=icpc
make config shared=1 cc=icc prefix=$PREFIX
make
make install
make config cc=icc prefix=$PREFIX
make
make install

Second cycle above makes libmetis.a .
After first cycle, "ldd mpmetis" shows that it uses
dynamic library libmetis.so .
After second cycle, "ldd mpmetis" show that it uses
some O/S dynamic libraries but not anything in $PREFIX.

export PATH=/p/home/apps/unsupported/cmake/3.2.3-gcc49/bin:$PATH
export PREFIX=/p/home/apps/unsupported/metis-64bit/4.0.3-gcc43
mkdir $PREFIX

# edit include/metis.h  32->64

# There was an error:
# cc1: error: unrecognized command line option "-Wno-unused-but-set-variable"
# Edited ./GKlib/GKlibSystem.cmake , on line
# set(GKlib_COPTIONS "${GKlib_COPTIONS} -Wall -pedantic -Wno-unused-but-set-variable -Wno-unused-variable -Wno-unknown-pragmas")
# removed "-Wno-unused-but-set-variable"

make config shared=1 cc=gcc prefix=$PREFIX
make
make install
make config cc=gcc prefix=$PREFIX
make
make install

export PATH=/p/home/apps/unsupported/cmake/3.2.3-gcc49/bin:$PATH
export PREFIX=/p/home/apps/unsupported/metis-64bit/4.0.3-gcc49
mkdir $PREFIX

# Need to add compilers to PATH.
export PATH=/apps/unsupported/gcc/4.9.2/bin:$PATH

# Need to add shared libraries to LD_LIBRARY_PATH.
export LD_LIBRARY_PATH=/apps/unsupported/gcc/4.9.2/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpc/1.0.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/mpfr/3.1.2/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/apps/unsupported/gmp/6.0.0a/lib:$LD_LIBRARY_PATH

export CXX=/apps/unsupported/gcc/4.9.2/bin/g++
export CC=/apps/unsupported/gcc/4.9.2/bin/gcc
export FC=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F77=/apps/unsupported/gcc/4.9.2/bin/gfortran
export F90=/apps/unsupported/gcc/4.9.2/bin/gfortran

# edit include/metis.h  32->64

make config shared=1 cc=$CC prefix=$PREFIX
make
make install
make config cc=$CC prefix=$PREFIX
make
make install

For 32bit versions, compiled with
metis-5.1.0/include/metis.h
#define IDXTYPEWIDTH 32
#define REALTYPEWIDTH 32
For large meshes, the above could be changed to 64
before building metis, however, MPI cannot deal with 8-byte integers.

export PATH=/p/home/apps/unsupported/cmake/3.2.3-intel/bin:$PATH
export PREFIX=/p/home/apps/unsupported/parmetis-32bit/4.0.3-intel
mkdir $PREFIX

cd /p/home/scheinin/build/parmetis-intel/src/metis-5.1.0

# I would prefer to use mpicc and mpicxx but at the present time
# those two use the Gnu compilers.

export CXX=icpc
export CXXFLAGS="-O2"
export CC=icc
export CFLAGS="-O2"
export CPPFLAGS=""
export LIBS="-lmpi"
export LDFLAGS=""
export FC=mpif90
export F77=mpif90
export F90=mpif90

make config shared=1 prefix=$PREFIX
# Shows that using icc and icpc .
make
make install
make config prefix=$PREFIX
make
make install

mkdir /p/home/scheinin/build/parmetis-intel/src/build_parmetis
cd /p/home/scheinin/build/parmetis-intel/src/build_parmetis
ccmake ../parmetis-4.0.3
c  (configure)

edit CMakeCache.txt
CMAKE_INSTALL_PREFIX:PATH=/p/home/apps/unsupported/parmetis-32bit/4.0.3-intel
//path to GKlib
GKLIB_PATH:PATH=/p/home/scheinin/build/parmetis-intel/src/parmetis-4.0.3/metis/GKlib
//path to METIS
METIS_PATH:PATH=/p/home/scheinin/build/parmetis-intel/src/metis-5.1.0
CMAKE_CXX_FLAGS:STRING=' -openmp -lmpi '
CMAKE_C_FLAGS:STRING=' -openmp -lmpi '

Should find the CMakeCache.txt specifies the Intel compilers.

ccmake ../parmetis-4.0.3
c  (configure)
g  (generate)

make
make install

Static libparmetis.a is built, no libparmetis.so .
Executable parmetis uses shared libraries such as mpt-sgi711r13//lib/libmpi.so .

edit CMakeCache.txt
Add line
SHARED:BOOL=TRUE

ccmake ../parmetis-4.0.3
c  (configure)
g  (generate)

Edit ./libparmetis/CMakeFiles/parmetis.dir/link.txt
change from
 ../libmetis/libmetis.a 
change to
 /p/home/apps/unsupported/parmetis-32bit/4.0.3-intel/lib/libmetis.so

failed to build executables
ld: warning: libmetis.so, needed by ../libparmetis/libparmetis.so

# Did not do "make install" but only
cp libparmetis/libparmetis.so $PREFIX/lib/
chmod g+rwx,o+rx $PREFIX/lib/libparmetis.so

# For each PREFIX:
topdir=$PREFIX
cd $topdir
chmod ugo+xr $topdir
find . -perm /u=x -exec chmod ugo+x {} \;
chmod -R ugo+r *
# Use g+w so that other members of the staff can modify.
chmod -R g+w,o-w *

